;ELSYTB == 2						;EDIT LEVEL	;002
; SYSTBL.CND - SYSTEM DEVICE TABLES	V04.00B				;002
;									;**-2
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY  BE  USED
; OR COPIED IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;     COPYRIGHT (c) 1979, 1980 BY DIGITAL EQUIPMENT CORPORATION
;
	#NAME	SYSTBL
	#FILE	SYSTBL.MAC
	.TITLE	SYSTBL	SYSTEM DEVICE TABLES
 ; SYSTBL.MAC - SYSTEM DEVICE TABLES	V04.00B				;002
 ;									;**-1
 ; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY  BE  USED
 ; OR COPIED IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
 ;
 ;     COPYRIGHT (c) 1979, 1980 BY DIGITAL EQUIPMENT CORPORATION
 ;

.ENABL	GBL
.MACRO DEV NAME,S
.NLIST
.NLIST CND
.LIST ME
.LIST
.PSECT PNAME$
$SLOT	== $SLOT +1
.IF NB NAME
.RAD50 /NAME/			;PNAME$ - DEVICE ->> NAME <<-
.IFF
.WORD	0			;PNAME$ - DEVICE ->> EMPTY <<-
.ENDC
.PSECT STAT$
.IF NB S
.WORD	S			;STAT$
.IFF
.WORD	0			;STAT$
.ENDC
.PSECT	ENTRY$
.IF NB NAME
.IF IDN NAME,BA
BA.NUM	==	2 * <$SLOT - 1>
.ENDC
.IF IDN NAME,TT
.IF NE BF!MTT$Y
.WORD	TTLQE			;ENTRY$ - TT ENTRY POINT
.IFF
TT.NUM	==	0
.WORD	0			;ENTRY$
.ENDC
.IFF
.IF IDN	NAME,MQ
.IF NE BF
MSGENT::.WORD	MQLQE
.IFF
.WORD	0
.ENDC
.IFF
.WORD	0
.ENDC
.ENDC
.IFF
.WORD	0			;ENTRY$
.ENDC
.PSECT	UNAM1$
.WORD	0			;UNAM1$
.PSECT	UNAM2$
.WORD	0			;UNAM2$
.IF NE BF
.PSECT	OWNER$
.WORD	0,0			;OWNER$
.ENDC
.PSECT	HSIZE$
.WORD	0
.PSECT	DVSIZ$
.WORD	0
.PSECT	DVREC$
.WORD	0			;DVREC$
.NLIST
.NLIST ME
.LIST CND
.LIST
.ENDM
 ; FOLLOWING IS THE DECLARATION OF THE SYSTEM DEVICE TABLES. A DEVICE MAY BE
 ; ADDED TO THE SYSTEM BY EDITING SYSTBL, INSERTING IT VIA THE DEV MACRO.
 ; NOTE: THE TT DEVICE MUST BE POSITIONED FIRST IN THE TABLES!!
$SLOT	== 0		;COUNT OF NUMBER OF DEVICES
 ;
DEV	TT,4			;MUST BE FIRST DEVICE
DEV				;MUST BE SECOND, SYSTEM DEVICE SLOT
.IF NE BF
DEV	MQ,SPECL$!42
.ENDC

	#IF	RK
DEV	RK
	#ENDC	RK
	#IF	DL
DEV	DL
	#ENDC	DL
	#IF	DY
DEV	DY
	#ENDC	DY
	#IF	DS
DEV	DS
	#ENDC	DS
	#IF	DM
DEV	DM
	#ENDC	DM
	#IF	RF
DEV	RF
	#ENDC	RF
	#IF	DP
DEV	DP
	#ENDC	DP
	#IF	DX
DEV	DX
	#ENDC	DX
	#IF	DT
DEV	DT
	#ENDC	DT
	#IF	PD
DEV	PD
	#ENDC	PD
	#IF	DD
DEV	DD
	#ENDC	DD
	#IF	MTSP
	#IF	MT
DEV	MT
	#ENDC	MT
	#IF	MM
DEV	MM
	#ENDC	MM
	#IF	MS
DEV	MS
	#ENDC	MS
	#ENDC	MTSP
	#IF	CT
DEV	CT
	#ENDC	CT
	#IF	LP
DEV	LP
	#ENDC	LP
	#IF	LS
DEV	LS
	#ENDC	LS
	#IF	PC
DEV	PC
	#ENDC	PC
	#IF	PR
DEV	PC
	#ENDC	PR
	#IF	CR
DEV	CR
	#ENDC	CR
	#IF	BATC$H
DEV	BA,4
	#ENDC	BATC$H
	#IF	NL
DEV	NL
	#ENDC	NL
	#SUBS	"EX$"EMPTY
.IF NE	EX$.								;002
.REPT	EX$.-1								;**-1
	#ENDS
DEV
.ENDR
.ENDC									;001
.PSECT	UNAM1$
DKASSG:: .RAD50	/DK0/
SYASSG:: .RAD50	/SY0/
.PSECT	UNAM2$
.RAD50	/DK /
.RAD50	/SY /
 ;.PSECT	STAT$
 ;.WORD	0,0			;FOR MESSAGE CHANNEL
.PSECT	ENTRY$
.WORD	-1			;TABLE TERMINATOR
	#IF	MTT$Y
 ;+
 ; MULTI-TERMINAL DEFAULT DEFINITIONS
 ;-

.IIF NDF DLMD$M, DLMD$M=0
.IIF NDF DZMD$M, DZMD$M=0
.IIF NDF DZV$11, DZV$11=0						;JM1

.IF NE	MTT$Y
.SBTTL	TCB DEFINITIONS

 ;+
 ; DEFINITION OF TERMINAL CONTROL BLOCK
 ;-

.MACRO	DSECT	N
..TEMP	= N
.ENDM	DSECT

.MACRO	DS	NAME,SIZE,UNIT
.IF NB	NAME
.IRP	X,<\..TEMP>
.LIST
NAME	== X
.NLIST
.ENDR
.ENDC ;NB NAME

.IF B SIZE
..TEMP	= ..TEMP+2
.IFF ;B SIZE
 .IF NB UNIT
..TEMP	= ..TEMP+SIZE
 .IFF ;NB UNIT
..TEMP	= ..TEMP+<2*<SIZE>>
 .ENDC ;NB UNIT
.ENDC ;B SIZE
.ENDM	DS

 ;+
 ; THE FOLLOWING MACROS DEFINE THE OFFSETS WITHIN A TERMINAL CONTROL
 ; BLOCK (TCB).  THERE IS ONE TCB FOR EACH TERMINAL INSTALLED
 ; IN THE SYSTEM.
 ;-

	DSECT	0
	DS	T.CNFG		;1 TERMINAL CONFIGURATION WORD 1
	DS	T.CNF2		;1 TERMINAL CONFIGURATION WORD 2
	DS	T.TFIL,1,BYTE	;1 CHARACTER REQUIRING NULL FILLERS
	DS	T.FCNT,1,BYTE	;1 NUMBER OF FILLS REQUIRED
	DS	T.WID		;1 CARRIAGE WIDTH
	DS	T.OCHR,1,BYTE	;1 CURRENT CHARACTER TO PRINT
	DS	T.LPOS,1,BYTE	;1 CURRENT CARRIAGE POSITION
	DS	T.OWNR		;POINTER TO OWNING JOB'S IMPURE AREA
	DS	T.STAT		;UNIT STATUS WORD
	DS	T.CSR		;CSR OF KEYBOARD (RECEIVER)
	DS	T.VEC		;DEVICE VECTOR
	DS	T.PRI		;DEVICE PRIORITY
	DS	T.JOB,1,BYTE	;JOB NUMBER OF OWNER
	DS	T.PUN,1,BYTE	;PHYSICAL UNIT NUMBER (0 FOR DL11)
	DS	T.NFIL,1,BYTE	;ACTIVE FILL COUNT
	DS	T.PTTI,1,BYTE	;PREVIOUS CHARACTER
	DS	T.TCTF,1,BYTE	;CHARACTER FOR SPECIAL FILL
	DS	T.TNFL,1,BYTE	;NUMBER OF SPECIAL FILLERS
	DS	T.TID,2		;BUFFER, PAR OF PROMPT STRING
	DS	T.TTLC		;2 LINE COUNT
	DS	T.IRNG		;2 INPUT RING LOW LIMIT
	DS	T.IPUT		;2 INPUT 'PUT' POINTER FOR INTERRUPTS
	DS	T.ICTR		;2 INPUT CHARACTER COUNT
	DS	T.IGET		;2 INPUT 'GET' POINTER FOR TTYIN
	DS	T.ITOP		;2 INPUT RING HI LIMIT
	DS	,TTYIN,BYTE	;2 INPUT RING BUFFER (SAME SIZE AS CONSOLE RING)
	DS	T.OPUT		;2 OUTPUT 'PUT' POINTER FOR .TTYOUT
	DS	T.OCTR,1,BYTE	;2 OUTPUT CHARACTER COUNT
	DS	,1,BYTE		;2 CTRL/O FLAG
	DS	T.OGET		;2 OUTPUT 'GET' POINTER FOR INTERRUPT
	DS	T.OTOP		;2 OUTPUT RING HI LIMIT
	DS	,TTYOUT,BYTE	;2 OUTPUT RING BUFFER (SAME SIZE AS CONSOLE RING)
.IF NE MTI$M!DL11$M
	DS	T.RTRY		;RETRY COUNT FOR RE-TRANSMISSION OF OUTPUT CHR. ;SL12
	DS	T.TBLK,7	;TIME OUT BLOCK
.ENDC
.IF NE MAT$S
.IF EQ MMG$T
	DS	T.AST		;TERMINAL AST FLAG WORD
.IFF
	DS	T.AST,2		;TERMINAL AST FLAG WORD
.ENDC
.ENDC
.IF NE SYT$K								;JH15+
	DS	T.XFLG,1,BYTE	;^X SEQUENCE IN PROGRESS
	DS	T.XCNT,1,BYTE	;^X SEQ CHARACTER COUNT
	DS	T.XPRE		;PREVIOUS CHARACTER TYPED IN ^X SEQUENCE
	DS	T.XBUF,6,BYTE	;6 CHARACTER BUFFER
	DS	T.CNT		;OWNER COUNT
.ENDC ;NE SYT$K								;JH15-

TCBSZ	==  ..TEMP		;SIZE OF TCB IN BYTE
 ; TCBBLK IS A MACRO TO DEFINE A TERMINAL CONTROL BLOCK.
 ; 	TYPE = [DL,DZ]
 ;	LINE = [LOCAL,REMOTE]
 ;	CSR = RECEIVER CSR
 ;	UNIT = LINE # (0 FOR DL, 0-7 FOR DZ)
 ;	LUN = LOGICAL UNIT NUMBER (0-N)
 ;	VEC = RECEIVER VECTOR
 ;	CTRL = CONTROLLER NUMBER (E.G., 0 OR 1 FOR DZ; 0,1,...,7 FOR DL)
.MACRO	TCBBLK	TYPE,LINE,CSR,VEC,UNIT,CTRL
.NLIST
.NLIST	CND
.LIST	ME
.LIST
LUN	= LUN + 1
CTMP	= 0
CTMP2	= 0
STMP	= 0
.IF IDN	<TYPE>,<DL>
.IF EQ	CTRL
.IF NE	BF
STMP	= STMP + CONSL$ + SHARE$
CTMP	= CTMP + FBTTY$
.IFF
STMP	= STMP + CONSL$
.ENDC
.ENDC
X=CTRL*TCBSZ+DLTCB
.ENDC
.IF IDN	<TYPE>,<DZ>
X=<CTRL+1*UNIT>*TCBSZ+DZTCB
CTMP	= CTMP + DZSP$D
CTMP2	= CTMP2 + <DZST$P+30>/10	;<STOP CODE + CHAR LEN (8 BITS)>/10
STMP	= STMP + DZ11$
.ENDC
.IF IDN	<LINE>,<REMOTE>
CTMP	= CTMP + REMOT$
STMP	= STMP + HNGUP$
.ENDC
CTMP	= CTMP + CRLF$ + PAGE$
.RADIX	10.
.IRP	...,<\LUN-1>
.RADIX	8.
TCB.'...::
.ENDR
	.WORD	CTMP	;T.CNFG - TCB FOR TYPE CONTROLLER # CTRL PUN # UNIT (LINE)
	.WORD	CTMP2			;T.CNF2
	.BYTE	0,0			;T.TFIL, T.FCNT
	.WORD	80.			;T.WID
	.BYTE	0,0			;T.OCHR, T.LPOS
.IF NE BF
	.WORD	0			;T.OWNR
.IFF
.IF EQ	LUN-1
PBCTCB::.WORD	DLTCB			;T.OWNR
.IFF
	.WORD	0			;T.OWNR
.ENDC
.ENDC
	.WORD	STMP			;T.STAT
	.WORD	CSR			;T.CSR
	.WORD	VEC,340+'CTRL		;T.VEC, T.PRI
	.BYTE	0			;T.JOB
	.BYTE	UNIT			;T.PUN
	.BYTE	0,0			;T.NFIL, T.PTTI
	.BYTE	0,0			;T.TCTF, T.TNFL
	.WORD	0,0			;T.TID
	.WORD	0			;T.TTLC
	.WORD	X+T.ITOP+2		;T.IRNG *** BOOT ***
	.WORD	X+T.ITOP+2		;T.IPUT *** BOOT ***
	.WORD	0			;T.ICTR
	.WORD	X+T.ITOP+2		;T.IGET *** BOOT ***
	.WORD	X+T.ITOP+2+TTYIN	;T.ITOP *** BOOT ***
	.BLKB	TTYIN			;INPUT RING BUFFER
	.WORD	X+T.OTOP+2		;T.OPUT *** BOOT ***
	.WORD	0			;T.OCTR
	.WORD	X+T.OTOP+2		;T.OGET *** BOOT ***
	.WORD	X+T.OTOP+2+TTYOUT	;T.OTOP *** BOOT ***
	.BLKB	TTYOUT			;OUTPUT RING BUFFER
.IF NE	MTI$M!DL11$M
	.WORD	0			;T.RTRY				;SL12
	.WORD	0,0,0,0,177400+<<LUN-1>*2>,-1,0
.ENDC
.IF NE	MAT$S
	.WORD	0			;T.AST
.IF NE	MMG$T
	.WORD	0
.ENDC
.ENDC
.IF NE	SYT$K								;JH15
	.BYTE	0			;T.XFLG				;JH15
	.BYTE	0			;T.XCNT				;JH15
	.WORD	0			;T.XPRE				;JH15
	.BLKB	6			;T.XBUF				;JH15
.IF EQ	LUN-1
	.WORD	8.			;T.CNT				;JH15
.IFF									;JH15
	.WORD	0							;JH15
.ENDC ;EQ LUN-1
.ENDC ;NE SYT$K								;JH15

.NLIST
.LIST	CND
.NLIST	ME
.LIST
.ENDM
DL11$N	= DL11$L + DL11$M	;# OF DL11'S = LOCAL PLUS REMOTE
.IIF EQ DL11$L, .ERROR MUST HAVE AT LEAST ONE LOCAL DL11 FOR CONSOLE.
.IIF GT DL11$N-8., .ERROR MAXIMUM OF 8 DL11 INTERFACES PERMITTED.
.PSECT	MTTY$
 ;
 ; TABLE OF POINTERS TO TCB'S. ORDERED BY LOGICAL UNIT NUMBER.
 ; TCBLST IS A GLOBAL LABEL FOR THE START OF THE TCB POINTER TABLE.
 ; DLTBL IS A LABEL FOR THE START OF THE DL11 POINTERS AND DZTBL IS A
 ; LABEL FOR THE START OF THE DZ11 POINTERS.
 ;
TCBLST::
 ;
 ; DL11'S COME FIRST IN TABLE
 ;
DLTBL::			;REFERENCE LABEL
.IRP	T,<0,1,2,3,4,5,6,7>
TTMP	= 'T
.IF GT DL11$N-TTMP
.WORD	DLTCB+<TTMP*TCBSZ>	;TCB PTR FOR DL11 #'T *** BOOT ***
.ENDC
.ENDM

.IF NE	DZ11$N
.IF EQ	DZV$11
.IIF GT DZ11$N-2,	.ERROR	;TOO MANY DZ11 SPECIFIED, MAXIMUM IS TWO
.IFF
.IIF GT DZ11$N-4,	.ERROR	;TOO MANY DZV11S SPECIFIED, MAXIMUM IS FOUR
.ENDC
 ; POINTERS TO TCB'S FOR DZ11
DZTCTB::			;TABLE OF POINTERS TO DZ11 TCB'S
.IRP	Q,<0,1,2,3,4,5,6,7,10,11,12,13,14,15,16,17>
TTT	= 'Q
.IF GT	DZ11$L - TTT
.WORD	DZTCB + <TTT * TCBSZ>	;TCB PTR FOR DZ11 LOCAL LINE #'Q **BOOT**
.IFF
.IF GT	DZ11$L + DZ11$M - TTT
.WORD	DZTCB + <TTT * TCBSZ>	;TCB PTR FOR DZ11 REMOTE LINE #'Q **BOOT**
.IFF
.IF EQ	DZV$11
.IF LT TTT- <DZ11$N*8.>
	.WORD	0
.ENDC
.IFF
.IF LT	TTT - <DZ11$N * 4.>
	.WORD	0
.ENDC
.ENDC
.ENDC
.ENDC
.ENDM
.ENDC
.IF GT	<DL11$N-1>+<2*HSR$B>		;1 DL OR HSR$B -> INCLUDE THIS	;MAS01
DLTMP::	.WORD	0			;PSW SAVE AREA FOR DL11
.ENDC
.IF NE	DZ11$N
DZTBL::					;REFERENCE LABEL
TTMP	= 0
.REPT	DZ11$N
.IF EQ	DZV$11
.WORD	DZTCTB+<TTMP*16.>		;*** BOOT *** ;-> TABLE OF TCB ->'S
.IFF
.WORD	DZTCTB+<TTMP*8.>		;*** BOOT *** ;-> TABLE OF TCB ->'S
.ENDC
TTMP	= TTMP + 1
.ENDR
.ENDC
.IF GT	DZ11$N-1
DZTMP::	.WORD	0			;PSW SAVE AREA FOR DZ11
.ENDC
TCBPEND::				;REFERENCE LABEL FOR BOOT
.IF NE	DZ11$N
DZCSR::					;TABLE OF CSR'S FOR DZ11
.IF EQ	DZV$11
.IRP	T,<0,1>
.IF GT	DZ11$N-T
.WORD	DZCS$'T
.ENDC
.ENDM
.IFF
.IRP	T,<0,1,2,3>
.IF GT	DZ11$N-T
.WORD	DZCS$'T
.ENDC
.ENDM
.ENDC
.ENDC

.IIF LT	DL11$N-DL11$M,	.ERROR	ERROR IN DL11 SPECIFICATION
 ;
 ; TERMINAL CONTROL BLOCKS ALLOCATED IN ORDER OF INCREASING UNIT NUMBER:
 ; LOCAL DL11 LINES FIRST, THEN REMOTE DL11S, THEN LOCAL DZ11 LINES, THEN
 ; REMOTE DZ11 LINES. LOGICAL UNIT 0 IS THE BOOT-TIME CONSOLE LUN.

LUN	= 0				;INITIALIZE LOGICAL UNIT COUNTER

DLTCB::					;REFERENCE LABEL
.IRP	Q,<0,1,2,3,4,5,6,7>
.IF GT	DL11$L-Q
TCBBLK	DL,LOCAL,DLC$'Q,DLV$'Q,0,Q	;TCB FOR LOCAL DL11
.IFF
.IF GT	DL11$M+DL11$L-Q			;DEFINE TCB'S FOR REMOTE LINES
TCBBLK	DL,REMOTE,DLC$'Q,DLV$'Q,0,Q	;TCB FOR REMOTE DL11-E
.ENDC
.ENDC
.ENDM
 ;
.IF EQ	DZV$11
.IIF LT	DZ11$N*8.-DZ11$L-DZ11$M, .ERROR	;ERROR IN DZ11 SPECIFICATION
.IFF
.IIF LT	DZ11$N*4.-DZ11$L-DZ11$M, .ERROR ;ERROR IN DZV11 SPECIFICATION
.ENDC
 ;
DZTCB::					;REFERENCE LABEL
.IF EQ	DZV$11
.IRP	P,<0,1>
.IRP	Q,<0,1,2,3,4,5,6,7>
.IF GT	DZ11$N - P
.IF GT	DZ11$L - <P*8.> - Q
TCBBLK	DZ,LOCAL,DZCS$'P,DZVC$'P,Q,P	;TCB FOR DZ11 #'P LINE #'Q, LOCAL
.IFF
.IF GT	DZ11$M + DZ11$L - <P*8.> - Q
TCBBLK	DZ,REMOTE,DZCS$'P, DZVC$'P,Q,P	;TCB FOR DZ11 #'P LINE #'Q, REMOTE
.ENDC
.ENDC
.ENDC
.ENDM
.ENDM
.IFF
.IRP	P,<0,1,2,3>
.IRP	Q,<0,1,2,3>
.IF GT	DZ11$N - P
.IF GT	DZ11$L - <P*4.> - Q
TCBBLK	DZ,LOCAL,DZCS$'P,DZVC$'P,Q,P	;TCB FOR DZ11 #'P LINE #'Q, LOCAL
.IFF
.IF GT	DZ11$M + DZ11$L - <P*4.> - Q
TCBBLK	DZ,REMOTE,DZCS$'P, DZVC$'P,Q,P	;TCB FOR DZ11 #'P LINE #'Q, REMOTE
.ENDC
.ENDC
.ENDC
.ENDM
.ENDM
.ENDC

TCBMAX	== <.-DLTCB>/TCBSZ		;# OF TCB'S
.ENDC					;-DV56

	#ENDC	MTT$Y
.END
                                                                                                                                                                                                                                                                                                                     