	#ABBR
; SYSGEN.CND	V04.00B	RT-11 SYSGEN SCRIPT FILE
;
;                      COPYRIGHT (c) 1979, 1980 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
#NAME	SYCND
#FILE	SYCND.MAC
.ENABL	LC

.SBTTL	SYCND.MAC - RT-11 V04.00B SYSTEM CONDITIONAL FILE
.SBTTL
.SBTTL                COPYRIGHT (c) 1979, 1980 BY
.SBTTL        DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
.SBTTL
.SBTTL	THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
.SBTTL	ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
.SBTTL	INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
.SBTTL	COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
.SBTTL	OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
.SBTTL	TRANSFERRED.
.SBTTL
.SBTTL	THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
.SBTTL	AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
.SBTTL	CORPORATION.
.SBTTL
.SBTTL	DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
.SBTTL	SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
.SBTTL
#
#	RT-11 SYSTEM GENERATION PROGRAM V04.00B
#
#	The System  Generation  (SYSGEN)  program  functions  as  an
#	interactive  dialogue.   The  program  asks  you a series of
#	questions.  Your answers to those  questions  establish  the
#	characteristics  and  features  of  the  monitor(s)  and the
#	handlers  that  the  program  generates.   The  dialogue  is
#	available  to  you in two forms.  The short form simply asks
#	the questions.  The long form includes detailed explanations
#	of the questions.  If you choose the long form, you can type
#	CTRL/O to prevent  an  explanation  from  printing.   SYSGEN
#	stops  printing  the explanation, prints the question, waits
#	for your response, and resumes the long form of dialogue.
#
#ASK	1.    Do you want the long form of the dialogue [Y/N] (Y)?LONG/Y=Y
#IF	LONG
#
#	SYSGEN can generate one or more monitors from the output  of
#	one  dialogue session,  depending on the responses you give.
#	However,  your responses during a session apply to  all  the
#	monitors generated during that session.   If  you  elect  to
#	build  the  base-line single-job  (BL)  monitor,  you cannot
#	build other monitors during the same SYSGEN pass.
#
#	You need not  undertake  system  generation  if  a  standard
#	(distributed)  monitor  serves your requirements.  The RT-11
#	software kit includes a variety of generated monitors,  from
#	which  you  can  select  the  monitor  best  suited  to your
#	application.  However, the system  generation  process  does
#	allow   you   to   customize   monitors   to  your  specific
#	configuration, although the process requires much  time  and
#	data storage.
#
#	The system generation process produces two conditional files
#	and  three  indirect  command  files as output.  You use the
#	conditional files (SYCND.MAC and SYSTBL.MAC) and the command
#	files  (SYSBLD.COM,  MONBLD.COM, and DEVBLD.COM) to assemble
#	and link monitors and handlers for the target  system.   The
#	assembly and linking process requires a PDP-11 with at least
#	16K words of memory and mass storage with at least 500  free
#	blocks  on  the  output  device  and  128 free blocks on the
#	system device.
#
#	To produce these conditional and indirect files, the  SYSGEN
#	dialogue   asks   you  questions  about  the  target  system
#	configuration and about monitor and device  support  options
#	you  want.   To  be  able to respond effectively, you should
#	read the RT-11  INSTALLATION  AND  SYSTEM  GENERATION  GUIDE
#	before proceeding.
#
#	The dialogue simply asks  a  question  and  waits  for  your
#	response.  The dialogue continues at a point that depends on
#	the response you give.  Note that although the  dialogue  is
#	sequentially  numbered,  certain  responses  cause SYSGEN to
#	skip over some questions.
#
#	Dialogue  questions  require  one  of   several   types   of
#	responses.   The type of response you must make is indicated
#	by a prompt in brackets [] after the question.   The  prompt
#	[Y/N]  indicates  that  you should type Y followed by RETURN
#	for yes or N followed by RETURN  for  no.   The  prompt  [D]
#	indicates  that  you  must  respond  with  a  decimal number
#	followed by RETURN.  The prompt [O] indicates that you  must
#	respond with an octal number followed by RETURN.  The prompt
#	[xx] indicates that you must supply  the  device  name  (for
#	example,  DX for RX01 diskette) followed by RETURN.  Include
#	the device's unit  number  if  the  prompt  includes  n,  as
#	follows:   [xxn].   The  parentheses  that follow the prompt
#	contain the default response.   If  you  type  only  RETURN,
#	SYSGEN  uses  the  default  response.   In  addition, SYSGEN
#	checks the validity of responses where possible.
#
#	You can terminate SYSGEN at any time by typing CTRL/C.
#
#	MONITOR OPTIONS:
#	The standard monitors, distributed  in  the  RT-11  software
#	kits,  have  been  generated  through  the system generation
#	process.  The first  choice  you  must  make  in  generating
#	custom monitors is the type of monitor or monitors you need.
#	The  following  questions  let  you  choose  the   base-line
#	single-job    monitor,    the    single-job   monitor,   the
#	foreground/background  monitor,  or  the   extended   memory
#	monitor.   Then,  you  can select additional options for the
#	monitors you generate.
#
#	BASE-LINE MONITOR:
#	The  base-line  single-job  (BL)  monitor  is  the  smallest
#	monitor that lets you execute standard system functions.  It
#	is intended for systems with only 8K words of memory, or for
#	larger  systems  that require the smallest possible monitor.
#	The BL and SJ monitors support the same  set  of  programmed
#	requests--predefined  assembler macro calls that generate an
#	EMT instruction, which the monitor interprets.   (Programmed
#	requests  make  available  to user programs monitor services
#	that RT-11 system programs use.)  However,  the  BL  monitor
#	limits  device support and does not include some features of
#	the SJ monitor, such as BATCH  and  VT11  support.   If  you
#	answer  YES, you cannot build any other monitors during this
#	SYSGEN session.
#ENDC	LONG

SYSG$N	= 1		;INDICATE SYSGENED MONITOR
#
#ROPRT	2.    Do you want the base-line single-job (BL)
#ASK	-      monitor [Y/N] (N)?BLSJ/Y=N
#IF	BLSJ
#SET	SJ=N
#SET	FB=N
#SET	XM=N
#SET	FBXM=N
#SET	MTT$Y=N
#SET	MONITR=Y
#SET	BLSJFB=Y
;BASE-LINE SJ MONITOR
RDF$L	= 0		;NO MESSAGE ON SYSTEM I/O ERRORS (SJ)
#IFF
#SET	MONITR=N
#SET	BLSJFB=N
#IF	LONG
#
#	SINGLE-JOB MONITOR:
#	The single-job (SJ) monitor provides an environment suitable
#	for developing simple FORTRAN or BASIC applications.  The SJ
#	monitor  includes  many  of  the  same   features   as   the
#	foreground/background (FB) monitor--it supports all hardware
#	devices except the memory management unit,  many  programmed
#	requests,  and all the utility programs.  It offers the most
#	features in the smallest size.  You can add features  during
#	SYSGEN, but at the cost of increased monitor size.
#ENDC	LONG
#
#ASK	3.    Do you want the single-job (SJ) monitor [Y/N] (Y)?SJ/Y=Y
#IF	SJ
#SET	FBXM=N
#SET	MONITR=Y
#SET	BLSJFB=Y
#ENDC	SJ
#IF	LONG
#
#	FOREGROUND/BACKGROUND MONITOR:
#	The foreground/background (FB) monitor  offers  an  extended
#	set  of  features  that  aid  real-time  or data acquisition
#	applications.  In addition to the foreground job capability,
#	this   monitor  supports  serialized  asynchronous  I/O  and
#	additional programmed requests (including .MRKT and .CMKT).
#ENDC	LONG
#
#ROPRT	4.    Do you want the foreground/background (FB)
#ASK	-      monitor [Y/N] (Y)?FB/Y=Y
#IF	FB
#SET	MONITR=Y
#SET	BLSJFB=Y
#SET	FBXM=Y
#ENDC	FB
#IF	LONG
#
#	EXTENDED MEMORY MONITOR:
#	The extended memory (XM) monitor, which supports up to  124K
#	words  of  memory,  is  a  version  of  the  FB monitor.  It
#	requires KT11 hardware (the memory management unit) and  the
#	extended  instruction  set  (EIS).   The XM monitor supports
#	additional programmed requests that allow you  to  extend  a
#	program's logical addressing space.  However, the XM monitor
#	is larger than the FB monitor and  requires  that  the  user
#	service routine (USR) and the device handlers be resident.
#ENDC	LONG
#
#ROPRT	5.    Do you want the extended memory (XM)
#ASK	-      monitor [Y/N] (N)?XM/Y=N
#IF	XM
#SET	MONITR=Y
#SET	FBXM=Y
#ENDC	XM
#ENDC	BLSJ
#IFN	MONITR
#
#	?SYSGEN-F-No monitor requested
#
#EXIT
#ENDC	MONITR
#IFN	BLSJ
#IF	LONG
#
#	You  can  select  certain  additional  monitor  options,  as
#	follow:
#ENDC	LONG
#IF	SJ
#IF	LONG
#
#	SJ TIMER SUPPORT OPTION:
#	The SJ monitor normally does not include timer support.  You
#	can include this support, which enables you to use the .MRKT
#	(mark  time)  and  .CMKT  (cancel  mark   time)   programmed
#	requests.
#ENDC	LONG
#
#ASK	6.    Do you want timer support in the SJ monitor [Y/N] (N)?TIME$R/Y=N
#IF	TIME$R
TIME$R	= 1		;ADD TIMER SUPPORT
#ENDC	TIME$R
#ENDC	SJ
#IF	LONG
#
#	DEVICE TIME-OUT SUPPORT OPTION:
#	The device time-out option permits device handlers to  issue
#	.MRKT  (mark  time)  programmed requests.  RT-11 handlers do
#	not currently use this feature, but DECNET support  requires
#	it.
#ENDC	LONG
#
#ASK	7.    Do you want device time-out support [Y/N] (N)?TIM$IT/Y=N
#IF	TIM$IT
TIM$IT	= 1		;ADD DEVICE TIMER SUPPORT
#IF	SJ
#IFN	TIME$R
TIME$R	= 1		;ADD TIMER SUPPORT (REQUIRED BY DEVICE TIME-OUT)
#ENDC	TIME$R
#ENDC	SJ
#ENDC	TIM$IT
#IF	SJ
#IF	LONG
#
#	ERROR MESSAGE ON SYSTEM I/O ERRORS OPTION:
#	The SJ monitor normally halts if a fatal  system  I/O  error
#	occurs.   You  can  replace  this  halt  with a system error
#	message.  DIGITAL  highly  recommends  this  option  if  the
#	system  will  be  used  by  anyone  but the most experienced
#	individuals.
#ENDC	LONG
#
#ROPRT	8.    Do you want an error message on system I/O
#ASK	-      errors [Y/N] (Y)?RDF$L/Y=Y
#IF	RDF$L
RDF$L	= 1		;ADD SYSTEM I/O ERROR MESSAGE
#IFF
RDF$L	= 0		;NO SYSTEM I/O ERROR MESSAGE
#ENDC	RDF$L
#ENDC	SJ
#IF	FBXM
#IF	LONG
#
#	SYSTEM JOB OPTION:
#	The system job option is a conditional assembly  of  the  FB
#	and  XM  monitors  that  allows  you  to  run  up  to  eight
#	simultaneously active jobs.  The error logger and the  QUEUE
#	program  can  be  either foreground jobs or system jobs.  If
#	you want to run both simultaneously, or if you want  to  run
#	either  one  along with a foreground job you need the system
#	job feature.
#ENDC	LONG
#
#ASK	9.    Do you want system job support [Y/N] (N)?SYT$K/Y=N
#IF	SYT$K
SYT$K	= 1		;SYSTEM JOB SUPPORT
#ENDC	SYT$K
#IF	LONG
#
#	SAVE/SET MAIN-LINE PC AND PS OPTION:
#	The save/set main-line PC and PS  option is a  conditionally
#	assembled programmed request for the FB and XM monitors. The
#	.SPCPS request changes the flow of control of main-line code
#	by   saving  the  main-line code  PC  and  PS  and  changing
#	the main-line PC to a new value.  This request may be useful
#	in multi-user applications to control switching among users.
#ENDC	LONG
#
#ASK	10.   Do you want to use the .SPCPS request [Y/N] (N)?SPC$PS/Y=N
#IF	SPC$PS
SPC$PS	= 1		;SAVE/SET MAIN-LINE PC AND PS SUPPORT
#ENDC	SPC$PS
#IF	LONG
#
#	IDLE LOOP LIGHT PATTERN OPTION:
#	This option causes the FB and XM  monitors'  scheduler  idle
#	loop  to  display  a  moving  light  pattern  in the display
#	register of any PDP-11/45, 11/50, 11/55, or 11/70 processor.
#ENDC	LONG
#
#ASK	11.   Do you want idle loop light pattern [Y/N] (N)?LIGH$T/Y=N
#IF	LIGH$T
LIGH$T	= 1		;IDLE LOOP LIGHT PATTERN
#ENDC	LIGH$T
#ENDC	FBXM
#IF	LONG
#
#	MULTI-TERMINAL SUPPORT OPTION:
#	The multi-terminal option lets you  use  special  programmed
#	requests  to  do  I/O  to  more  than  one  terminal.  RT-11
#	normally supports only one terminal (interfaced through  the
#	console KL11 or DL11) which is shared by both background and
#	foreground jobs.  You can select multi-terminal support  for
#	up  to  16 terminals interfaced through a choice of DL11 and
#	DZ11 interfaces.  Subsequent questions  will  establish  the
#	number and type of interfaces.
#ENDC	LONG
#
#ASK	12.   Do you want multi-terminal support [Y/N] (N)?MTT$Y/Y=N
#IF	MTT$Y
MTT$Y	= 1		;MULTI-TERMINAL SUPPORT
#IF	LONG
#
#	ASYNCHRONOUS TERMINAL STATUS OPTION:
#	The asynchronous terminal status option provides  a  program
#	with  the  updated  status  of a terminal and modem.  When a
#	program attaches a terminal, the program can supply a status
#	word  that  the  monitor  updates as changes in the terminal
#	status (double CTRL/C, input available, output buffer empty,
#	carrier  present)  occur.   This  support is required for MU
#	BASIC and CTS-300 applications.
#ENDC	LONG
#
#ASK	13.   Do you want asynchronous terminal status [Y/N] (Y)?MAT$S/Y=Y
#IF	MAT$S
MAT$S	= 1		;ASYNCHRONOUS TERMINAL STATUS
#ENDC	MAT$S
#IF	LONG
#
#	MULTI-TERMINAL TIME-OUT OPTION:
#	Multi-terminal time-out support causes the monitor to  reset
#	(at  regular  intervals)  any  terminal  that  may have gone
#	off-line.  This action  helps  to  minimize  the  impact  of
#	static  and  similar problems.  DIGITAL recommends selecting
#	this option if your application  requires  maximum  terminal
#	availability.
#ENDC	LONG
#
#ASK	14.   Do you want multi-terminal time-out support [Y/N] (Y)?MTI$M/Y=Y
#IF	MTI$M
MTI$M	= 1		;TERMINAL TIME OUT
#IFN	TIM$IT
TIM$IT	= 1		;DEVICE TIME OUT (REQUIRED BY TERMINAL TIME-OUT)
#ENDC	TIM$IT
#ENDC	MTI$M
#ENDC	MTT$Y
#ENDC	BLSJ
#IF	LONG
#
#	RING BUFFER SIZE OPTION:
#	The RT-11 terminal service  requires  a  set  of  input  and
#	output  ring buffers for each terminal supported.  The input
#	ring is a buffer in the monitor that  holds  the  characters
#	that  you  type at a terminal until a program requests them.
#	The output ring is  a  buffer  in  the  monitor  that  holds
#	characters  until the terminal can print them (a program can
#	output characters faster than a terminal  can  print  them).
#	The  input  ring buffer default size is 134 characters.  The
#	output ring buffer default size is 40 characters.   However,
#	you  can  select the size of buffers you need.  You may want
#	to change the input ring size, in particular, since the size
#	you  need  depends on the terminal's width and the amount of
#	type-ahead you expect.
#ENDC	LONG
#
#ASK	15.   Size of the output buffers in characters [D] (40)?ORNG/D=40,10,134
#
#ASK	16.   Size of the input buffers in characters [D] (134)?IRNG/D=134,74,254
#SUBS	"O.R"ORNG
#SUBS	"I.R"IRNG
TTYOUT	= O.R.		;SIZE OF OUTPUT RING BUFFERS
TTYIN	= I.R.		;SIZE OF INPUT RING BUFFERS
#ENDS
#IF	LONG
#
#	MONTH ROLLOVER OPTION:
#	When you run a system continuously, over a  long  period  of
#	time,  you  normally  have to reset the date and time at the
#	beginning of each month.  You  can  select  a  feature  that
#	automatically sets the correct date and time.  However, this
#	option greatly increases the size of the monitor.
#ENDC	LONG
#
#ROPRT	17.   Do you want end of month and year date
#ASK	-      rollover [Y/N] (N)?ROL$OV/Y=N
#IF	ROL$OV
ROL$OV	= 1		;MONTH ROLLOVER SUPPORT
#ENDC	ROL$OV
#IF	LONG
#
#	KEYBOARD MONITOR COMMANDS OPTION:
#	The keyboard monitor commands option  lets  you  choose  the
#	keyboard   monitor  commands  your  generated  monitor  will
#	support.  You will probably find all of the commands useful.
#	However,  you  can reduce KMON size and assembly time if you
#	select support for a subset of the available commands.   You
#	have  a  choice  of  three  subsets  (or  any combination of
#	subsets).  The three command subsets  you  can  choose  are:
#	the UTILITY PROGRAM COMMANDS, the LANGUAGE COMMANDS, and the
#	MINIMAL  COMMANDS.   The  RT-11  INSTALLATION   AND   SYSTEM
#	GENERATION  GUIDE  lists  the  specific commands included in
#	each subset.  If you do  not  choose  the  complete  set  of
#	commands or any of the subsets, you will be able to use only
#	the RUN command.
#ENDC	LONG
#
#ROPRT	18.   Do you want all the keyboard monitor
#ASK	-      commands [Y/N] (Y)?ALL/Y=Y
#IF	ALL
U$TIL	= 1		;UTILITY COMMANDS
L$ANG	= 1		;LANGUAGE COMMANDS
M$INI	= 1		;MINIMAL COMMANDS
#IFF
#
#ROPRT	19.   Do you want the UTILITY PROGRAM subset of keyboard
#ASK	-      monitor commands [Y/N] (Y)?U$TIL/Y=Y
#IF	U$TIL
U$TIL	= 1		;UTILITY COMMANDS
#IFF
U$TIL	= 0		;NO UTILITY COMMANDS
#ENDC	U$TIL
#
#ROPRT	20.   Do you want the LANGUAGE subset of keyboard monitor
#ASK	-      commands [Y/N] (Y)?L$ANG/Y=Y
#IF	L$ANG
L$ANG	= 1		;LANGUAGE COMMANDS
#IFF
L$ANG	= 0		;NO LANGUAGE COMMANDS
#ENDC	L$ANG
#
#ROPRT	21.   Do you want the MINIMAL subset of keyboard monitor
#ASK	-      commands [Y/N] (Y)?M$INI/Y=Y
#IF	M$INI
M$INI	= 1		;MINIMAL COMMANDS
#IFF
M$INI	= 0		;NO MINIMAL COMMANDS
#ENDC	M$INI
#ENDC	ALL
#IF	LONG
#
#	50 HZ CLOCK OPTION:
#	A line clock generates  periodic  interrupts  to  allow  the
#	system  to  keep track of the time.  The number of ticks per
#	second depends on the power line frequency, 60 Hz or 50  Hz.
#	RT-11  assumes  a  60  Hz line frequency, but you can select
#	support for  a  50  Hz  clock.   The  50  Hz  frequency  has
#	specialized uses and is the common frequency in Europe.
#ENDC	LONG
#
#ROPRT	22.   Do you want the optional 50 Hz clock
#ASK	-      support [Y/N] (N)?CLOCK/Y=N
#IF	CLOCK
CLOCK	= 50.		;POWER LINE FREQUENCY
#IFF
CLOCK	= 60.		;POWER LINE FREQUENCY
#ENDC	CLOCK
#IFN	BLSJ
#IF	LONG
#
#	PROGRAMMABLE CLOCK AS SYSTEM CLOCK OPTION:
#	RT-11 normally uses a line clock for the system clock.   You
#	can  substitute  the KW11-P programmable clock as the system
#	clock, but the KW11-P will not then be available for program
#	use.   The programmable clock normally allows you to program
#	interrupts at preset intervals.
#ENDC	LONG
#
#ROPRT	23.   Do you want to use the KW11-P clock as the system
#ASK	-      clock [Y/N] (N)?KW11$P/Y=N
#IF	KW11$P
KW11$P	= 1		;USE KW11$P CLOCK AS SYSTEM CLOCK
#ENDC	KW11$P
#ENDC	BLSJ
#IF	LONG
#
#	STARTUP INDIRECT COMMAND FILE OPTION:
#	This option causes the  bootstrap  to  execute  an  indirect
#	command  file  (with the name STARTx.COM, where x identifies
#	the monitor) when starting the system.  An indirect  command
#	file  contains  monitor  commands that the monitor processes
#	(in the order  in  which  they  appear)  when  the  file  is
#	executed.   A  startup indirect command file is particularly
#	useful for  setting  up  initial  conditions  (for  example,
#	assigning  the default device to the data device, installing
#	a device into the system tables  when  the  device  was  not
#	originally  built  into  the  system,  or running a specific
#	program).
#ENDC	LONG
#
#ASK	24.   Do you want the startup indirect file [Y/N] (Y)?STAR$T/Y=Y
#IF	STAR$T
STAR$T	= 1		;STARTUP COMMAND FILE
#ENDC	STAR$T
#IF	LONG
#
#	FLOATING POINT OPTION:
#	If your configuration  includes floating point hardware  and
#	your application requires  this feature, you  should  enable
#	this  option.  Floating point hardware is available for many
#	PDP-11 processors.  This  is  especially useful for FORTRAN,
#	BASIC,  and  APL  users  whose  applications  perform   data
#	manipulations.
#ENDC	LONG
#
#ASK	25.   Do you want floating point support [Y/N] (N)?FPU$11/Y=N
#IF	FPU$11
FPU$11	= 1		;FLOATING POINT SUPPORT
#ENDC	FPU$11
#IFN	BLSJ
#IF	LONG
#
#	MEMORY PARITY SUPPORT OPTION:
#	If your configuration includes memory parity  hardware,  you
#	should  select  this  option.  Memory parity hardware checks
#	for memory errors and this option enables RT-11 support  for
#	the  hardware.   RT-11  issues an error message and supplies
#	the location of access when a memory error occurs.   If  you
#	have  this  hardware  but  do  not  enable this support, the
#	system halts when memory errors occur.  If you select  error
#	logging  as  well as memory parity support, the error logger
#	logs parity errors as well as device errors.
#ENDC	LONG
#
#ASK	26.   Do you want memory parity support [Y/N] (N)?MPT$Y/Y=N
#IF	MPT$Y
MPT$Y	= 1		;MEMORY PARITY
#ENDC	MPT$Y
#IF	LONG
#
#	POWER FAILURE MESSAGE OPTION:
#	The monitor normally halts on power recovery startup after a
#	power  failure.   You  can elect to have the monitor print a
#	message explaining  that  power  failure  caused  the  halt.
#	However,  you  must  not  select  this  option  if  you have
#	semiconductor memory, which is volatile.
#ENDC	LONG
#
#ASK	27.   Do you want power failure messages [Y/N] (Y)?PWF$L/Y=Y
#IF	PWF$L
PWF$L	= 1		;POWER FAIL
#ENDC	PWF$L
#IF	LONG
#
#	BATCH SUPPORT OPTION:
#	You can select support for the BATCH job  control  language,
#	which  allows RT-11 to operate unattended.  Once you prepare
#	a BATCH stream, you can leave it for an  operator  to  start
#	and  run,  and  the  BATCH  stream  will execute programs or
#	monitor  commands  without  your   intervention.    Indirect
#	command  file support, which offers similar capabilities, is
#	separately available in all monitors.  You need  not  select
#	BATCH support to obtain indirect command file support.
#ENDC	LONG
#
#ASK	28.   Do you want BATCH support [Y/N] (N)?BATC$H/Y=N
#IF	BATC$H
BATC$H	= 1		;BATCH SUPPORT
#ENDC	BATC$H
#ENDC	BLSJ
#IF	FBXM
#IF	LONG
#
#	ERROR LOGGING OPTION:
#	The error logging option  creates  the  error  logging  (EL)
#	system  job,  and  incorporates error logging support in the
#	device  handlers.   Error  logging  reports  device,  memory
#	parity (if selected),  and memory cache errors.   When error
#	logging is enabled,  most device handlers call  EL  on  each
#	successful transfer and on each  error. The EL job retrieves
#	information from the handlers that is later available to you
#	in summary report format.
#ENDC	LONG
#
#ASK	29.   Do you want error logging [Y/N] (N)?ERL$G/Y=N
#IF	ERL$G
ERL$G	= 1		;ERROR LOG SUPPORT
#IF	LONG
#
#	NUMBER OF UNITS SUPPORTED BY ERROR LOGGING OPTION:
#	The error logger can  handle  up  to  34  individual  device
#	units.   You  can  conserve  space by reducing the number of
#	units the logger  can  handle  to  the  specific  number  of
#	supported units in the target configuration.
#ENDC	LONG
#
#ROPRT	30.   How many device units does error log job
#ASK	-      support [D] (10)?ERLU/D=10,1,34
#SUBS	"ER.U"ERLU
ERL$U	= ER.U.		;NUMBER OF UNITS TO BE LOGGED
#ENDS
#ENDC	ERL$G
#IFF
#SET	ERL$G=N
#ENDC	FBXM
#SET	FSM=N
	#IF	BLSJ
#SET	BATC$H=N
#SET	DY=N
#SET	DD=N
#SET	PD=N
#SET	RF=N
#SET	DS=N
#SET	DL=N
#SET	DP=N
#SET	DM=N
#SET	MTSP=N
#SET	CT=N
#SET	CR=N
#ENDC	BLSJ
#IF	LONG
#
#	PERIPHERAL DEVICE OPTIONS:
#	The device options let you  select  the  peripheral  devices
#	that  the  generated  system  will  support.   By  selecting
#	support for a specific device, you make the device known  to
#	the  monitor's  device  tables,  and  you  cause  SYSGEN  to
#	generate a device handler (named xx.SYS,  where  xx  is  the
#	physical  device name) for the device.  If you do not select
#	a specific device at this time, you will have to create  the
#	device  handler  separately  and  you  will  have to use the
#	monitor INSTALL command before you can access the device.
#
#	Since the system device handler is not a part of the monitor
#	image,  you  need  not  select a system device during system
#	generation.  Any device  in  the  following  list  of  valid
#	system devices can serve as your system device.  To serve as
#	a  system  device,  a  device  needs  a  monitor  file,  the
#	appropriate  device  handler,  the  file  SWAP.SYS,  and the
#	bootstrap.  However, you should be sure  to  select  support
#	for  the  device  that  will serve as your system device, so
#	that SYSGEN will  generate  a  device  handler  for  it  and
#	permanently  install  support for it in the monitor.  If you
#	have selected  the  extended  memory  monitor,  SYSGEN  will
#	generate special device handlers (named xxX.SYS, where xx is
#	the physical device name).
#
#	Valid RT-11 system devices are:
#IF	BLSJ
#	        DX  RX01 Single-Density Flexible Diskette
#		PD  PDT-11 Intelligent Terminal
#	        DT  DECtape
#	        RK  RK05 Cartridge Disk
#IFF
#	        DX  RX01 Single-Density Flexible Diskette
#	        DY  RX02 Double-Density Flexible Diskette
#	        DD  TU58 DECtape II
#	        PD  PDT-11 Intelligent Terminal
#	        DT  DECtape
#	        RF  RF11 Disk
#	        DS  RJS03/4 Massbus Fixed-head Disk
#	        RK  RK05 Cartridge Disk
#	        DL  RL01 Cartridge Disk
#	        DP  RP11 Disk Pack
#	        DM  RK06/RK07 Cartridge Disk
#ENDC	BLSJ
#ENDC	LONG
#
#ROPRT	31.   Do you want RX11/RX01 single-density flexible
#ASK	-      diskette support [Y/N] (N)?DX/Y=N
#IF	DX
#IF	LONG
#
#	The RX01 single-density flexible diskette subsystem supports
#	only  two  drives  for  each  controller.   If  your  system
#	contains four diskette drives, a second  controller  governs
#	the  third  and  fourth  units,  and  you  must select RT-11
#	support for it.
#ENDC	LONG
#
#ROPRT	32.   Do you want support for a second RX11
#ASK	-      controller [Y/N] (N)?DXT$O/Y=N
#
#ROPRT	33.   What is the CSR address for the first RX11
#ASK	-      controller [O] (177170)?DXC/O=177170,160000,177570
#SUBS	"R.C"DXC
DX$CSR	= R.C	;STATUS REGISTER FOR FIRST RX11
#ENDS
#
#ROPRT	34.   What is the vector address for the first
#ASK	-      RX11 controller [O] (264)?DXV/O=264,100,474
#SUBS	"R.V"DXV
DX$VEC	= R.V		;VECTOR FOR FIRST RX11
#ENDS
#IF	DXT$O
DXT$O	= 1		;SECOND RX11
#
#ROPRT	35.   What is the CSR address for the second RX11
#ASK	-      controller [O] (177174)?DXC/O=177174,160000,177570
#SUBS	"R.C"DXC
DX$CS2	= R.C	;STATUS REGISTER FOR SECOND RX01
#ENDS
#
#ROPRT	36.   What is the vector address for the second
#ASK	-      RX11 controller [O] (270)?DXV/O=270,100,474
#SUBS	"R.V"DXV
DX$VC2	= R.V		;VECTOR FOR SECOND RX11
#ENDS
#ENDC	DXT$O
#ENDC	DX
#IFN	BLSJ
#
#ROPRT	37.   Do you want RX211/RX02 double-density flexible
#ASK	-      diskette support [Y/N] (N)?DY/Y=N
#IF	DY
#IF	LONG
#
#	The RX02 double-density diskette subsystem supports only two
#	drives  for  each  controller.  If your system contains four
#	drives, a second controller governs  the  third  and  fourth
#	units, and you must select RT-11 support for it.
#ENDC	LONG
#
#ROPRT	38.   Do you want support for a second RX02
#ASK	-      controller [Y/N] (N)?DYT$O/Y=N
#IF	LONG
#
#	The RX02 diskette supports both single and double  densities
#	by  default.  If you select double-density only support, you
#	can slightly improve the performance and reduce the size  of
#	the device handler.
#ENDC	LONG
#
#ROPRT	39.   Do you want RX02 double density only
#ASK	-      support [Y/N] (N)?DY$DD/Y=N
#IF	DY$DD
DY$DD	= 1		;RX02 DOUBLE DENSITY ONLY
#ENDC	DY$DD
#
#ROPRT	40.   What is the CSR address for the first RX02
#ASK	-      controller [O] (177170)?DYC/O=177170,160000,177570
#SUBS	"R.C"DYC
DY$CSR	= R.C	;STATUS REGISTER FOR FIRST RX02
#ENDS
#
#ROPRT	41.   What is the vector address for the first
#ASK	-      RX02 controller [O] (264)?DYV/O=264,100,474
#SUBS	"R.V"DYV
DY$VEC	= R.V		;VECTOR FOR FIRST RX02
#ENDS
#IF	DYT$O
DYT$O	= 1		;SECOND RX02 CONTROLLER
#
#ROPRT	42.   What is the CSR address for the second RX02
#ASK	-      controller [O] (177150)?DYC/O=177150,160000,177570
#SUBS	"R.C"DYC
DY$CS2	= R.C	;STATUS REGISTER FOR SECOND RX02
#ENDS
#
#ROPRT	43.   What is the vector address for the second RX02
#ASK	-      controller [O] (270)?DYV/O=270,100,474
#SUBS	"R.V"DYV
DY$VC2	= R.V		;VECTOR FOR SECOND RX02
#ENDS
#ENDC	DYT$O
#ENDC	DY
#
#ASK	44.   Do you want TU58 DECtape II cartridge support [Y/N] (N)?DD/Y=N
#IF	DD
#IF	LONG
#
#	The TU58 DECtape II cartridge subsystem  supports  only  two
#	drives  for  each  controller.  If your system contains four
#	drives, a second controller governs  the  third  and  fourth
#	units, and you must select RT-11 support for it.
#ENDC	LONG
#
#ROPRT	45.   Do you want support for a second DECtape II
#ASK	-      controller [Y/N] (N)?DDT$O/Y=N
#
#ROPRT	46.   What is the CSR address for the first DECtape II
#ASK	-      controller [O] (176500)?DDC/O=176500,160000,177570
#
#ROPRT	47.   What is the vector address for the first DECtape II
#ASK	-      controller [O] (300)?DDV/O=300,100,474
#SUBS	"D.C"DDC
#SUBS	"D.V"DDV
DD$CSR	= D.C	;STATUS REGISTER FOR FIRST DECTAPE II CONTROLLER
DD$VEC	= D.V		;VECTOR FOR FIRST DECTAPE II CONTROLLER
#ENDS
#IF	DDT$O
DDT$O	= 1		;SECOND DECTAPE II CONTROLLER
#
#ROPRT	48.   What is the CSR address for the second DECtape II
#ASK	-      controller [O] (176510)?DDC/O=176510,160000,177570
#
#ROPRT	49.   What is the vector address for the second DECtape II
#ASK	-      controller [O] (310)?DDV/O=310,100,474
#SUBS	"D.C"DDC
#SUBS	"D.V"DDV
DD$CS2	= D.C	;STATUS REGISTER FOR SECOND DECTAPE II CONTROLLER
DD$VC2	= D.V		;VECTOR FOR SECOND DECTAPE II CONTROLLER
#ENDS
#ENDC	DDT$O
#ENDC	DD
#
#ASK	50.   Do you want support for the PDT-11 series [Y/N] (N)?PD/Y=N
#ENDC	BLSJ
#
#ASK	51.   Do you want TC11 DECtape support [Y/N] (N)?DT/Y=N
#IFN	BLSJ
#
#ASK	52.   Do you want RF11 fixed-head disk support [Y/N] (N)?RF/Y=N
#IF	RF
#
#ROPRT	53.   How many disk platters are installed on the
#ASK	-      RF11 controller [D] (1)?RFP/D=1,1,8
#SUBS	"RF.P"RFP
$RFNUM	= RF.P.		;NUMBER OF RF11 PLATTERS
#ENDS
#ENDC	RF
#
#ASK	54.   Do you want RJS03 or RJS04 disk support [Y/N] (N)?DS/Y=N
#IF	DS
#
#ASK	55.   Do you want RJS03 rather than RJS04 support [Y/N] (Y)?RJS0$3/Y=Y
#IF	RJS0$3
RJS0$3	= 1		;RJS DISK IS RJS03
#IFF
RJS0$3	= 0		;RJS DISK IS RJS04
#
#	RJS04 support assumed.
#ENDC	RJS0$3
#ENDC	DS
#ENDC	BLSJ
#
#ASK	56.   Do you want RK05/RK05F disk support [Y/N] (N)?RK/Y=N
#IFN	BLSJ
#
#ASK	57.   Do you want RL01/RL02 disk support [Y/N] (N)?DL/Y=N
#IF	DL
#
#ASK	58.   How many RL01/RL02 units are to be supported [D] (2)?DLUN/D=2,1,4
#SUBS	"U.N"DLUN
DL$UN	= U.N.		;NUMBER OF RL01/RL02 UNITS
#ENDS
#ENDC	DL
#
#ROPRT	59.   Do you want RP11/RPR02 or RP11/RP03 disk
#ASK	-      support [Y/N] (N)?DP/Y=N
#IF	DP
#
#ROPRT	60.   Do you want RPR02 rather than RPR02/RP03
#ASK	-      support [Y/N] (Y)?RP0$3/Y=Y
#IF	RP0$3
RP0$3	= 0		;RP11 DISK IS RP02/RPR02
#IFF
RP0$3	= 1		;RP11 DISK IS RP03
#
#	RPR02 and RP03 support assumed.
#ENDC	RP0$3
#ENDC	DP
#
#ASK	61.   Do you want RK06/RK07 disk support [Y/N] (N)?DM/Y=N
#
#ASK	62.   Do you want magnetic tape support [Y/N] (N)?MTSP/Y=N
#IF	MTSP
#
#ASK	63.   Do you want TM11 (UNIBUS) magtape support [Y/N] (Y)?MT/Y=Y
#IF	MT
#IF	LONG
#
#	FILE-STRUCTURED MAGTAPE OPTION:
#	RT-11 magtape  support  is  available  in  two  forms.   The
#	standard form is file-structured magtape support, which uses
#	a subset of ANSI file format.  The  file-structured  handler
#	stores  and retrieves data in a file format usable with most
#	RT-11 system programs.  The second form of magtape  support,
#	hardware  handler  support, omits file structuring and reads
#	and writes data directly in variable length records.   While
#	this    handler    is   significantly   smaller   than   the
#	file-structured handler, you cannot use it with  any  system
#	programs.   The  file-structured  handler  can  also perform
#	direct hardware functions.
#ENDC	LONG
#
#ROPRT	64.   Do you want the file-structured magtape
#ASK	-      handler [Y/N] (Y)?MT$FSM/Y=Y
#IF	MT$FSM
#SET	FSM=Y
MT$FSM	= 1		;TM11 MAGTAPE FILE-STRUCTURE SUPPORT
#ENDC	MT$FSM
#IF	LONG
#
#	NUMBER OF MAGTAPE UNITS OPTION:
#	The  magtape   handler  requires  table   space   for   each
#	magtape  unit.   You  can  minimize  the size of the magtape
#	handler  by  limiting   the   number   of   units   it   can
#	simultaneously  handle to the number actually present on the
#	target machine.
#ENDC	LONG
#
#ASK	65.   How many magtape units are to be supported [D] (2)?MTU/D=2,1,8
#SUBS	"MT.U"MTU
MT$UN	= MT.U.		;NUMBER OF TM11 MAGTAPE UNITS
#ENDS
#ENDC	MT
#
#ROPRT	66.   Do you want TJU16 (MASSBUS) magtape
#ASK	-      support [Y/N] (N)?MM/Y=N
#IF	MM
#IF	LONG
#
#	FILE-STRUCTURED MAGTAPE OPTION:
#	RT-11 magtape  support  is  available  in  two  forms.   The
#	standard form is file-structured magtape support, which uses
#	a subset of ANSI file format.  The  file-structured  handler
#	stores  and retrieves data in a file format usable with most
#	RT-11 system programs.  The second form of magtape  support,
#	hardware  handler  support, omits file structuring and reads
#	and writes data directly in variable length records.   While
#	this    handler    is   significantly   smaller   than   the
#	file-structured handler, you cannot use it with  any  system
#	programs.   The  file-structured  handler  can  also perform
#	direct hardware functions.
#ENDC	LONG
#
#ROPRT	67.   Do you want the file-structured magtape
#ASK	-      handler [Y/N] (Y)?MM$FSM/Y=Y
#IF	MM$FSM
#SET	FSM=Y
MM$FSM	= 1		;TJU16 MAGTAPE FILE-STRUCTURE SUPPORT
#ENDC	MM$FSM
#IF	LONG
#
#	NUMBER OF MAGTAPE UNITS OPTION:
#	The  magtape   handler  requires  table   space   for   each
#	magtape  unit.   You  can  minimize  the size of the magtape
#	handler  by  limiting   the   number   of   units   it   can
#	simultaneously  handle to the number actually present on the
#	target machine.
#ENDC	LONG
#
#ASK	68.   How many magtape units are to be supported [D] (2)?MTU/D=2,1,8
#SUBS	"MT.U"MTU
MM$UN	= MT.U.		;NUMBER OF TJU16 MAGTAPE UNITS
#ENDS
#ENDC	MM
#
#ROPRT	69.   Do you want TS11 (UNIBUS) magtape
#ASK	-      support [Y/N] (N)?MS/Y=N
#IF	MS
#IF	LONG
#
#	FILE-STRUCTURED MAGTAPE OPTION:
#	RT-11 magtape  support  is  available  in  two  forms.   The
#	standard form is file-structured magtape support, which uses
#	a subset of ANSI file format.  The  file-structured  handler
#	stores  and retrieves data in a file format usable with most
#	RT-11 system programs.  The second form of magtape  support,
#	hardware  handler  support, omits file structuring and reads
#	and writes data directly in variable length records.   While
#	this    handler    is   significantly   smaller   than   the
#	file-structured handler, you cannot use it with  any  system
#	programs.   The  file-structured  handler  can  also perform
#	direct hardware functions.
#ENDC	LONG
#
#ROPRT	70.   Do you want the file-structured magtape
#ASK	-      handler [Y/N] (Y)?MS$FSM/Y=Y
#IF	MS$FSM
#SET	FSM=Y
MS$FSM	= 1		;TS11 MAGTAPE FILE-STRUCTURED SUPPORT
#ENDC	MS$FSM
#IF	LONG
#
#	NUMBER OF MAGTAPE UNITS OPTION:
#	The  magtape   handler  requires  table   space   for   each
#	magtape  unit.   You  can  minimize  the size of the magtape
#	handler  by  limiting   the   number   of   units   it   can
#	simultaneously  handle to the number actually present on the
#	target machine.
#ENDC	LONG
#
#ASK	71.   How many magtape units are to be supported [D] (2)?MTU/D=2,1,8
#SUBS	"MT.U"MTU
MS$UN	= MT.U.		;NUMBER OF TS11 MAGTAPE UNITS
#ENDS
#IF	LONG
#
#	Each TS11 unit requires two contiguous unibus addresses  for
#	status registers.
#ENDC	LONG
#
#ROPRT	72.   What is the address of the first
#ASK	-      unit [O] (172522)?MSC/O=172522,160000,177570
#
#ASK	73.   What is the vector address of the first unit [O] (224)?MSV/O=224,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CSR	= MS.C	;STARTING STATUS REGISTER OF FIRST TS11 UNIT
MS$VEC	= MS.V		;VECTOR OF FIRST TS11 UNIT
#ENDS
#DECR	MTU
#IFGT	MTU
#
#ASK	74.   What is the address of the second unit [O] (172526)?MSC/O=172526,160000,177570
#
#ROPRT	75.   What is the vector address of the second
#ASK	-      unit [O] (300)?MSV/O=300,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS1	= MS.C	;STARTING STATUS REGISTER OF SECOND TS11 UNIT
MS$VC1	= MS.V		;VECTOR OF SECOND TS11 UNIT
#ENDS
#DECR	MTU
#ENDC	MTU
#IFGT	MTU
#
#ASK	76.   What is the address of the third unit [O] (172532)?MSC/O=172532,160000,177570
#
#ROPRT	77.   What is the vector address of the third
#ASK	-      unit [O] (304)?MSV/O=304,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS2	= MS.C	;STARTING STATUS REGISTER OF THIRD TS11 UNIT
MS$VC2	= MS.V		;VECTOR OF THIRD TS11 UNIT
#ENDS
#DECR	MTU
#ENDC	MTU
#IFGT	MTU
#
#ASK	78.   What is the address of the fourth unit [O] (172536)?MSC/O=172536,160000,177570
#
#ROPRT	79.   What is the vector address of the fourth
#ASK	-      unit [O] (310)?MSV/O=310,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS3	= MS.C	;STARTING STATUS REGISTER OF FOURTH TS11 UNIT
MS$VC3	= MS.V		;VECTOR OF FOURTH TS11 UNIT
#ENDS
#DECR	MTU
#ENDC	MTU
#IFGT	MTU
#
#ASK	80.   What is the address of the fifth unit [O] (172542)?MSC/O=172542,160000,177570
#
#ROPRT	81.   What is the vector address of the fifth
#ASK	-      unit [O] (314)?MSV/O=314,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS4	= MS.C	;STARTING STATUS REGISTER OF FIFTH TS11 UNIT
MS$VC4	= MS.V		;VECTOR OF FIFTH TS11 UNIT
#ENDS
#DECR	MTU
#ENDC	MTU
#IFGT	MTU
#
#ASK	82.   What is the address of the sixth unit [O] (172546)?MSC/O=172546,160000,177570
#
#ROPRT	83.   What is the vector address of the sixth
#ASK	-      unit [O] (320)?MSV/O=320,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS5	= MS.C	;STARTING STATUS REGISTER OF SIXTH TS11 UNIT
MS$VC5	= MS.V		;VECTOR OF SIXTH TS11 UNIT
#ENDS
#DECR	MTU
#ENDC	MTU
#IFGT	MTU
#
#ASK	84.   What is the address of the seventh unit [O] (172552)?MSC/O=172552,160000,177570
#
#ROPRT	85.   What is the vector address of the seventh
#ASK	-      unit [O] (324)?MSV/O=324,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS6	= MS.C	;STARTING STATUS REGISTER OF SEVENTH TS11 UNIT
MS$VC6	= MS.V		;VECTOR OF SEVENTH TS11 UNIT
#ENDS
#DECR	MTU
#ENDC	MTU
#IFGT	MTU
#
#ASK	86.   What is the address of the eighth unit [O] (172556)?MSC/O=172556,160000,177570
#
#ROPRT	87.   What is the vector address of the eighth
#ASK	-      unit [O] (330)?MSV/O=330,100,474
#SUBS	"MS.C"MSC
#SUBS	"MS.V"MSV
MS$CS7	= MS.C	;STARTING STATUS REGISTER OF EIGHTH TS11 UNIT
MS$VC7	= MS.V		;VECTOR OF EIGHTH TS11 UNIT
#ENDS
#ENDC	MTU
#ENDC	MS
#ENDC	MTSP
#
#ASK	88.   Do you want TA11 cassette support [Y/N] (N)?CT/Y=N
#ENDC	BLSJ
#
#ASK	89.   Do you want line printer support [Y/N] (Y)?LP/Y=Y
#IF	LP
#IF	LONG
#
#	The standard line printer vector  address  is  200  and  the
#	standard   CSR  address  is  177514.   If  your  printer  is
#	installed at another vector  or  CSR  address,  specify  the
#	correct values.
#ENDC	LONG
#
#ROPRT	90.   Does your printer have a nonstandard vector or CSR
#ASK	-      address [Y/N] (N)?LPC/Y=N
#IF	LPC
#
#ASK	91.   What is the CSR address for the printer [O] (177514)?LPC/O=177514,160000,177570
#
#ASK	92.   What is the vector address for the printer [O] (200)?LPV/O=200,100,474
#SUBS	"LP.C"LPC
#SUBS	"LP.V"LPV
LP$CSR	= LP.C	;LINE PRINTER CSR
LP$VEC	= LP.V		;LINE PRINTER VECTOR
#ENDS
#ENDC	LPC
#ENDC	LP
#
#ASK	93.   Do you want serial line printer support [Y/N] (N)?LS/Y=N
#IF	LS
#
#ROPRT	94.   What is the CSR address for the serial line printer
#ASK	-      controller [O] (176500)?LPC/O=176500,160000,177570
#
#ROPRT	95.   What is the vector address for the serial line printer
#ASK	-      controller [O] (300)?LPV/O=300,60,474
#SUBS	"LP.C"LPC
#SUBS	"LP.V"LPV
LS$CSR	= LP.C	;CSR FOR SERIAL LINE PRINTER
LS$VEC	= LP.V		;VECTOR FOR SERIAL LINE PRINTER
#ENDS
#ENDC	LS
#IF	LONG
#
#	The PC11 is a high speed paper tape reader/punch unit.   The
#	PR11  is  a  similar  unit  with  a high speed reader but no
#	punch.
#ENDC	LONG
#
#ROPRT	96.   Do you want PC11 high-speed paper tape reader/punch
#ASK	-      support [Y/N] (N)?PC/Y=N
#IF	PC
PR11$X	= 0		;PC11 HIGH-SPEED READER/PUNCH
#SET	PR=N
#IFF
#
#ROPRT	97.   Do you want PR11 high-speed paper tape reader
#ASK	-      support [Y/N] (N)?PR/Y=N
#IF	PR
PR11$X	= 1		;PR11 HIGH-SPEED READER
#ENDC	PR
#ENDC	PC
#IFN	BLSJ
#
#ASK	98.   Do you want card reader support [Y/N] (N)?CR/Y=N
#ENDC	BLSJ
#IF	LONG
#
#	The null handler is a software module  that  allows  logical
#	input  and output to take place without actual physical data
#	transfers.  It is most useful for debugging applications.
#ENDC	LONG
#
#ASK	99.   Do you want the null handler [Y/N] (Y)?NL/Y=Y
#IFN	BLSJ
#IFN	MTT$Y
#
#ASK	100.  Do you want VT11 or VS60 graphics support [Y/N] (N)?GRAFX/Y=N
#IF	GRAFX
#
#ASK	101.  Do you want VS60 support [Y/N] (N)?VS60$/Y=N
#IF	VS60$
VS60$	= 1		;VS60 DISPLAY SUPPORT
#IFF
VT11$	= 1		;VT11 DISPLAY SUPPORT
#
#	VT11 hardware is assumed.
#ENDC	VS60$
#IF	LONG
#
#	Many devices have floating CSR and  vector  addresses.   The
#	presence or absence of such floating address devices affects
#	the addresses at which the other floating address devices in
#	the  system are installed.  Floating address devices must be
#	installed in a standard sequence.
#
#	The  standard  VT11/VS60  vector  address  is  320  and  the
#	standard CSR address is 172000.  However, VT11/VS60s can use
#	floating addresses.   If  your  VT11/VS60  is  installed  at
#	nonstandard  vector  and  CSR  addresses, supply the correct
#	values.
#ENDC	LONG
#
#ROPRT	102.  What is the CSR address for the
#ASK	-      VT11/VS60 [O] (172000)?GRFC/O=172000,160000,177570
#
#ROPRT	103.  What is the vector address for the
#ASK	-      VT11/VS60 [O] (320)?GRFV/O=320,100,474
#SUBS	"G.C"GRFC
#SUBS	"G.V"GRFV
VT.CSR	= G.C	;CSR FOR VT11/VS60
VT.VEC	= G.V		;VECTOR FOR VT11/VS60
#ENDS
#ENDC	GRAFX
#ENDC	MTT$Y
#ENDC	BLSJ
#IF	LONG
#
#	EXTRA DEVICE SLOT OPTION:
#	SYSGEN allocates space in the monitor for only  the  devices
#	specified.   You can allocate additional space by requesting
#	empty device slots.  Allocate one empty slot for each device
#	you  intend  to  add  to the system after it is built.  Also
#	keep in mind that the number of logical  device  assignments
#	you  will  be able to make in the running system is equal to
#	the number of devices plus empty device slots in the  system
#	you  have  generated.  You may need to allocate extra device
#	slots for logical device assignment purposes.
#ENDC	LONG
#
#ASK	104.  How many extra device slots do you want [D] (0)?EMPTY/D=0,0,10
#
#	This completes the device query.
	#IF	MTT$Y
#IF	LONG
#
#	TERMINAL INTERFACE OPTIONS:
#	The terminal interface options allow  you  to  select  RT-11
#	support  for  the  terminal  interfaces  installed  in  your
#	system.  RT-11 supports a combination of serial asynchronous
#	interfaces, which include the KL11, DLV11, DLV11-E, DLV11-F,
#	DLV11-J, and the DL11 series.  It also supports  DL11-E  and
#	DLV11-E  interfaces,  with  modem capabilities, and the DZ11
#	and DZV11 series of asynchronous line multiplexors.
#
#	The dialogue asks first for the number of local DL11  lines,
#	then  the  number of remote DL11 lines.  The total number of
#	lines is the sum of local and remote lines.  SYSGEN  assigns
#	physical unit numbers of the DL11 lines first to local lines
#	and then to remote lines.  This assignment is permanent  and
#	you cannot change its order.
#
#	After SYSGEN has established the number  of  lines  of  each
#	type,  it  must  establish  the CSR and vector addresses for
#	each line.  The first such question corresponds to the first
#	local  line  (the  console),  the second to the second local
#	line, etc., until all local lines  are  accounted  for.   At
#	that  point,  the  next question applies to the first remote
#	line, the second to the second remote line, etc., until  all
#	remote lines are accounted for.
#ENDC	LONG
#
#ROPRT	105.  How many local DL11 lines, including the console, are
#ASK	-      to be supported, [D] (1)?DLNUM/D=1,1,8
#SUBS	"DLN$"DLNUM
DL11$L	= DLN$.		;NUMBER OF LOCAL DL11 INTERFACES
#
#ROPRT	106.  How many remote DL11 lines are to be
#ASK	-      supported [D] (0)?DLMDM/D=0,0,7
#SUBS	"DLM$"DLMDM
DL11$M	= DLM$.		;NUMBER OF REMOTE DL11-E LINES
DL11$N	= DLN$. + DLM$.	;TOTAL NUMBER OF DL11 LINES
#ENDS
#
#ROPRT	107.  What is the CSR address for the first (console)
#ASK	-      DL11 [O] (177560)?DLC/O=177560,160000,177570
#
#ROPRT	108.  What is the vector address for the first (console)
#ASK	-      DL11 [O] (60)?DLV/O=60,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$0	= DL.C	;CSR OF FIRST (CONSOLE) DL11
DLV$0	= DL.V		;VECTOR OF FIRST (CONSOLE) DL11
#ENDS
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	109.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176500)?DLC/O=176500,160000,177570
#
#ROPRT	110.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (300)?DLV/O=300,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$1	= DL.C	;CSR OF SECOND (LOCAL) DL11
DLV$1	= DL.V		;VECTOR OF SECOND (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	111.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175610)?DLC/O=175610,160000,177570
#
#ROPRT	112.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (300)?DLV/O=300,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$1	= DL.C	;CSR OF SECOND (REMOTE) DL11
DLV$1	= DL.V		;VECTOR OF SECOND (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	113.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176510)?DLC/O=176510,160000,177570
#
#ROPRT	114.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (310)?DLV/O=310,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$2	= DL.C	;CSR OF THIRD (LOCAL) DL11
DLV$2	= DL.V		;VECTOR OF THIRD (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	115.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175620)?DLC/O=175620,160000,177570
#
#ROPRT	116.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (310)?DLV/O=310,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$2	= DL.C	;CSR OF THIRD (REMOTE) DL11
DLV$2	= DL.V		;VECTOR OF THIRD (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	117.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176520)?DLC/O=176520,160000,177570
#
#ROPRT	118.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (320)?DLV/O=320,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$3	= DL.C	;CSR OF FOURTH (LOCAL) DL11
DLV$3	= DL.V		;VECTOR OF FOURTH (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	119.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175630)?DLC/O=175630,160000,177570
#
#ROPRT	120.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (320)?DLV/O=320,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$3	= DL.C	;CSR OF FOURTH (REMOTE) DL11
DLV$3	= DL.V		;VECTOR OF FOURTH (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	121.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176530)?DLC/O=176530,160000,177570
#
#ROPRT	122.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (330)?DLV/O=330,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$4	= DL.C	;CSR OF FIFTH (LOCAL) DL11
DLV$4	= DL.V		;VECTOR OF FIFTH (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	123.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175640)?DLC/O=175640,160000,177570
#
#ROPRT	124.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (330)?DLV/O=330,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$4	= DL.C	;CSR OF FIFTH (REMOTE) DL11
DLV$4	= DL.V		;VECTOR OF FIFTH (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	125.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176540)?DLC/O=176540,160000,177570
#
#ROPRT	126.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (340)?DLV/O=340,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$5	= DL.C	;CSR OF SIXTH (LOCAL) DL11
DLV$5	= DL.V		;VECTOR OF SIXTH (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	127.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175650)?DLC/O=175650,160000,177570
#
#ROPRT	128.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (340)?DLV/O=340,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$5	= DL.C	;CSR OF SIXTH (REMOTE) DL11
DLV$5	= DL.V		;VECTOR OF SIXTH (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	129.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176550)?DLC/O=176550,160000,177570
#
#ROPRT	130.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (350)?DLV/O=350,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$6	= DL.C	;CSR OF SEVENTH (LOCAL) DL11
DLV$6	= DL.V		;VECTOR OF SEVENTH (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	131.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175660)?DLC/O=175660,160000,177570
#
#ROPRT	132.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (350)?DLV/O=350,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$6	= DL.C	;CSR OF SEVENTH (REMOTE) DL11
DLV$6	= DL.V		;VECTOR OF SEVENTH (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#DECR	DLNUM
#IFGT	DLNUM
#
#ROPRT	133.  What is the CSR address for the next (local)
#ASK	-      DL11 [O] (176560)?DLC/O=176560,160000,177570
#
#ROPRT	134.  What is the vector address for the next (local)
#ASK	-      DL11 [O] (360)?DLV/O=360,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$7	= DL.C	;CSR OF EIGHTH (LOCAL) DL11
DLV$7	= DL.V		;VECTOR OF EIGHTH (LOCAL) DL11
#ENDS
#IFF
#IFGT	DLMDM
#
#ROPRT	135.  What is the CSR address for the next (remote)
#ASK	-      DL11 [O] (175670)?DLC/O=175670,160000,177570
#
#ROPRT	136.  What is the vector address for the next (remote)
#ASK	-      DL11 [O] (360)?DLV/O=360,60,474
#SUBS	"DL.C"DLC
#SUBS	"DL.V"DLV
DLC$7	= DL.C	;CSR OF EIGHTH (REMOTE) DL11
DLV$7	= DL.V		;VECTOR OF EIGHTH (REMOTE) DL11
#ENDS
#DECR	DLMDM
#ENDC	DLMDM
#ENDC	DLNUM
#IF	LONG
#
#	You can select  RT-11  support  for  one  DZ11-A  or  DZ11-B
#	eight-line  multiplexor  with an additional DZ11-C or DZ11-D
#	eight-line multiplexor, for a maximum of 16 lines.   Or  you
#	can  select one to four DZV11 four-line multiplexors.  Modem
#	support is available on remote lines, but is limited to Bell
#	103  type  modems  or  equivalent.  RT-11 support for modems
#	requires  the  modems  to  operate  in   auto-answer   mode.
#	Therefore,  the  "common  carrier and clear to send" options
#	must   have   been   installed   (during   manufacture    or
#	installation).
#ENDC	LONG
#
#ROPRT	137.  Do you want DZ11 or DZV11 multiplexor
#ASK	-      support [Y/N] (N)?DZ11$N/Y=N
#IFN	DZ11$N
DZ11$N	= 0		;NO DZ11 OR DZV11 SUPPORT
#IFF
#
#ASK	138.  Do you want DZ11 multiplexor support [Y/N] (Y)?DZ11/Y=Y
#IF	DZ11
DZV$11	= 0		;DZ11 MULTIPLEXOR SUPPORT
#
#ASK	139.  How many DZ multiplexors are to be supported [D] (1)?DZCNT/D=1,1,2
#IFF
DZV$11	= 1		;DZV11 MULTIPLEXOR SUPPORT
#
#	DZV11 four-line multiplexor support is assumed.
#
#ASK	139.  How many DZ multiplexors are to be supported [D] (1)?DZCNT/D=1,1,4
#ENDC	DZ11
#SUBS	"D.Z"DZCNT
DZ11$N	= D.Z.		;NUMBER OF DZ11 OR DZV11 MULTIPLEXORS SUPPORTED
#ENDS
#IF	LONG
#
#	The following dialogue asks for the number of local DZ11  or
#	DZV11  lines,  then  the  number of remote lines.  The total
#	number of lines is  the  sum  of  local  and  remote  lines.
#	SYSGEN  assigns  physical  unit numbers of the DZ11 or DZV11
#	lines first to local lines and then to remote  lines.   This
#	assignment is permanent and you cannot change its order.
#ENDC	LONG
#
#ROPRT	140.  How many local DZ lines are to be
#ASK	-      supported altogether [D] (1)?DZM/D=1,0,16
#
#ROPRT	141.  How many remote DZ lines are to be
#ASK	-      supported altogether [D] (0)?DZR/D=0,0,16
#SUBS	"DZ.M"DZM
#SUBS	"DZ.R"DZR
DZ11$L	= DZ.M.		;NUMBER OF LOCAL LINES
DZ11$M	= DZ.R.		;NUMBER OF REMOTE LINES
#ENDS
#IFGT	DZR
#IFN	TIM$IT
#IFN	MTI$M
TIM$IT	= 1		;DEVICE TIMEOUT REQUIRED BY DZ REMOTE SUPPORT
#ENDC	MTI$M
#ENDC	TIM$IT
#ENDC	DZR
#IF	LONG
#
#	The interface vectors and CSR addresses are assigned to  the
#	floating device region and vary with each installation.
#ENDC	LONG
#
#ROPRT	142.  What is the CSR address for the
#ASK	-      first DZ multiplexor [O] (160010)?DZC/O=160010,160000,177570
#
#ROPRT	143.  What is the vector address for the
#ASK	-      first DZ multiplexor [O] (300)?DZV/O=300,60,474
#SUBS	"DZ.C"DZC
#SUBS	"DZ.V"DZV
DZCS$0	= DZ.C	;CSR FOR FIRST DZ
DZVC$0	= DZ.V		;VECTOR FOR FIRST DZ
#ENDS
#DECR	DZCNT
#IFGT	DZCNT
#
#ROPRT	144.  What is the CSR address for the
#ASK	-      second DZ multiplexor [O] (160020)?DZC/O=160020,160000,177570
#
#ROPRT	145.  What is the vector address for the
#ASK	-      second DZ multiplexor [O] (310)?DZV/O=310,60,474
#SUBS	"DZ.C"DZC
#SUBS	"DZ.V"DZV
DZCS$1	= DZ.C	;CSR FOR SECOND DZ
DZVC$1	= DZ.V		;VECTOR FOR SECOND DZ
#ENDS
#ENDC	DZCNT
#DECR	DZCNT
#IFGT	DZCNT
#
#ROPRT	146.  What is the CSR address for the
#ASK	-      third DZ multiplexor [O] (160030)?DZC/O=160030,160000,177570
#
#ROPRT	147.  What is the vector address for the
#ASK	-      third DZ multiplexor [O] (320)?DZV/O=320,60,474
#SUBS	"DZ.C"DZC
#SUBS	"DZ.V"DZV
DZCS$2	= DZ.C	;CSR FOR THIRD DZ
DZVC$2	= DZ.V		;VECTOR FOR THIRD DZ
#ENDS
#ENDC	DZCNT
#DECR	DZCNT
#IFGT	DZCNT
#
#ROPRT	148.  What is the CSR address for the
#ASK	-      fourth DZ multiplexor [O] (160040)?DZC/O=160040,160000,177570
#
#ROPRT	149.  What is the vector address for the
#ASK	-      fourth DZ multiplexor [O] (340)?DZV/O=340,60,474
#SUBS	"DZ.C"DZC
#SUBS	"DZ.V"DZV
DZCS$3	= DZ.C	;CSR FOR FOURTH DZ11
DZVC$3	= DZ.V		;VECTOR FOR FOURTH DZ11
#ENDS
#ENDC	DZCNT
#IF	LONG
#
#	The lines must be initialized to a specific baud rate.   You
#	can select 300, 150, or 110 baud.
#ENDC	LONG
#
#ROPRT	150.  Do you want the lines initialized
#ASK	-      to 300 baud [Y/N] (Y)?B300/Y=Y
#IF	B300
DZSP$D	= 2400		;INITIALIZE TO 300 BAUD
DZST$P	= 0		;1 STOP UNIT
#IFF
#
#ROPRT	151.  Do you want the lines initialized
#ASK	-      to 150 baud [Y/N] (Y)?B150/Y=Y
#IF	B150
DZSP$D	= 2000		;INITIALIZE TO 150 BAUD
DZST$P	= 0		;1 STOP UNIT
#IFF
DZSP$D	= 1000		;INITIALIZE TO 110 BAUD
DZST$P	= 40		;2 STOP UNITS
#
#	110 baud is assumed.
#ENDC	B150
#ENDC	B300
#ENDC	DZ11$N
#ENDC	MTT$Y
	#CALL	SYSTBL.CND
#NAME	SYSBLD
#FILE	SYSBLD.COM
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY BE USED
! OR COPIED IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
!
!                      COPYRIGHT (c) 1979, 1980 BY
!             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
!
@MONBLD
@DEVBLD
#NAME	MONBLD
#FILE	MONBLD.COM
!	MONBLD.COM
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY BE USED
! OR COPIED IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
!
!                      COPYRIGHT (c) 1979, 1980 BY
!             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
!
#IF	LONG
#
#	SYSTEM BUILD OPTIONS:
#	The SYSGEN assembling and linking process requires a  source
#	input  device  and  a  binary  output  device, as well as an
#	output device for monitor link maps.  You must  specify  the
#	physical  name  and  unit number for each (for example, RK1,
#	DP4,  etc.).   For   more   explanation,   see   the   RT-11
#	INSTALLATION AND SYSTEM GENERATION GUIDE.
#ENDC	LONG
#
#ROPRT	152.  What is the PHYSICAL name and unit of the source
#ASK	-      input device [xxn] (RK1)?IN/A=RK1
#SUBS	"IN$"IN
ASSIGN IN$ SRC
#
#ROPRT	153.  What is the PHYSICAL name and unit of the binary
#ASK	-      output device [xxn] (RK0)?OUT/A=RK0
#SUBS	"OUT$"OUT
ASSIGN OUT$ BIN
#
#ROPRT	154.  What is the PHYSICAL name and unit of the map
#ASK	-      output device [xxn] (TT)?MAP/A=TT
#SUBS	"MAP$"MAP
ASSIGN MAP$ MAP
#ENDS
#IF	LONG
#
#	RETAIN SYSTEM OBJS OPTION:
#	The indirect command files that the SYSGEN program generates
#	delete  the  object modules (from which the system is built)
#	when the object modules are no longer needed.  This  measure
#	serves  to  conserve  disk  space  while the system is being
#	built.  However, the object modules are often  useful  later
#	when  you  patch  the  system.   If  your  output device has
#	sufficient free space, you can elect to  retain  all  system
#	object modules for future use.
#ENDC	LONG
#
#ASK	155.  Do you want to retain the system OBJs [Y/N] (Y)?OBJ/Y=Y
	#IF	BLSJ
MACRO/OBJ:BIN:KMBL SRC:(SJ+SYCND+EDTGBL+KMON+KMOVLY)
MACRO/OBJ:BIN:RMBL SRC:(SJ+SYCND+EDTGBL+USR+RMONSJ)
MACRO/OBJ:BIN:TBBL SRC:(SJ+SYCND+EDTGBL+SYSTBL)
MACRO/OBJ:BIN:BTBL SRC:(SJ+SYCND+EDTGBL+BSTRAP)
LINK/EXE:BIN:RT11BL.SYG/BOU:1000/MAP:MAP:RT11BL
BIN:(BT,RM,KM,TB)BL
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,KM,TB)BL.OBJ
#ENDC	OBJ
#ENDC	BLSJ
#IF	SJ
MACRO/OBJ:BIN:KMSJ SRC:(SJ+SYCND+EDTGBL+KMON+KMOVLY)
MACRO/OBJ:BIN:RMSJ SRC:(SJ+SYCND+EDTGBL+USR+RMONSJ)
MACRO/OBJ:BIN:TBSJ SRC:(SJ+SYCND+EDTGBL+SYSTBL)
MACRO/OBJ:BIN:BTSJ SRC:(SJ+SYCND+EDTGBL+BSTRAP)
#IF	MTT$Y
MACRO/OBJ:BIN:MESJ SRC:(SJ+SYCND+EDTGBL+MTTEMT)
MACRO/OBJ:BIN:MISJ SRC:(SJ+SYCND+EDTGBL+MTTINT)
LINK/EXE:BIN:RT11SJ.SYG/BOU:1000/PROMPT/MAP:MAP:RT11SJ BIN:BTSJ
BIN:RMSJ,KMSJ,MESJ,MISJ,TBSJ//
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,ME,MI,TB)SJ.OBJ
DELETE/NOQ BIN:KMSJ.OBJ
#ENDC	OBJ
#IFF
LINK/EXE:BIN:RT11SJ.SYG/BOU:1000/MAP:MAP:RT11SJ
BIN:(BT,RM,KM,TB)SJ
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,KM,TB)SJ.OBJ
#ENDC	OBJ
#ENDC	MTT$Y
#ENDC	SJ
#IF	FB
MACRO/OBJ:BIN:KMFB SRC:(FB+SYCND+EDTGBL+KMON+KMOVLY)
MACRO/OBJ:BIN:RMFB SRC:(FB+SYCND+EDTGBL+USR+RMONFB)
MACRO/OBJ:BIN:TBFB SRC:(FB+SYCND+EDTGBL+SYSTBL)
MACRO/OBJ:BIN:BTFB SRC:(FB+SYCND+EDTGBL+BSTRAP)
#IF	MTT$Y
MACRO/OBJ:BIN:MEFB SRC:(FB+SYCND+EDTGBL+MTTEMT)
MACRO/OBJ:BIN:MIFB SRC:(FB+SYCND+EDTGBL+MTTINT)
LINK/EXE:BIN:RT11FB.SYG/BOU:1000/PROMPT/MAP:MAP:RT11FB BIN:BTFB
BIN:RMFB,KMFB,MEFB,MIFB,TBFB//
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,ME,MI,TB)FB.OBJ
DELETE/NOQ BIN:KMFB.OBJ
#ENDC	OBJ
#IFF
LINK/EXE:BIN:RT11FB.SYG/BOU:1000/MAP:MAP:RT11FB
BIN:(BT,RM,KM,TB)FB
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,KM,TB)FB.OBJ
#ENDC	OBJ
#ENDC	MTT$Y
#ENDC	FB
#IF	XM
MACRO/OBJ:BIN:KMXM SRC:(XM+SYCND+EDTGBL+KMON+KMOVLY)
MACRO/OBJ:BIN:RMXM SRC:(XM+SYCND+EDTGBL+USR+RMONFB)
MACRO/OBJ:BIN:SBXM SRC:(XM+SYCND+EDTGBL+XMSUBS)
MACRO/OBJ:BIN:TBXM SRC:(XM+SYCND+EDTGBL+SYSTBL)
MACRO/OBJ:BIN:BTXM SRC:(XM+SYCND+EDTGBL+BSTRAP)
#IF	MTT$Y
MACRO/OBJ:BIN:MEXM SRC:(XM+SYCND+EDTGBL+MTTEMT)
MACRO/OBJ:BIN:MIXM SRC:(XM+SYCND+EDTGBL+MTTINT)
LINK/EXE:BIN:RT11XM.SYG/BOU:1000/PROMPT/MAP:MAP:RT11XM BIN:BTXM
BIN:RMXM,SBXM,KMXM,MEXM,MIXM,TBXM//
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,SB,KM,TB)XM.OBJ
DELETE/NOQ BIN:(ME,MI)XM.OBJ
#ENDC	OBJ
#IFF
LINK/EXE:BIN:RT11XM.SYG/BOU:1000/MAP:MAP:RT11XM
BIN:(BT,RM,SB,KM,TB)XM
OVLY0
#IFN	OBJ
DELETE/NOQ BIN:(BT,RM,SB,KM,TB)XM.OBJ
#ENDC	OBJ
#ENDC	MTT$Y
#ENDC	XM
	#NAME	DEVBLD
#FILE	DEVBLD.COM
!	DEVBLD.COM
!
! THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY  BE  USED
! OR COPIED IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
!
!                      COPYRIGHT (c) 1979, 1980 BY
!             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
!

#SUBS	"IN$"IN
ASSIGN IN$ SRC
#SUBS	"OUT$"OUT
ASSIGN OUT$ BIN
#ENDS
#IF	SJ
#IFN	MTT$Y
MACRO/OBJ:BIN:TT SRC:(SYCND+TT)
LINK/EXE:BIN:TT.SYG BIN:TT
#IFN	OBJ
DELETE/NOQ BIN:TT.OBJ
#ENDC	OBJ
#ENDC	MTT$Y
#ENDC	SJ
#IF	BLSJ
MACRO/OBJ:BIN:TT SRC:(SYCND+TT)
LINK/EXE:BIN:TT.SYG BIN:TT
#IFN	OBJ
DELETE/NOQ BIN:TT.OBJ
#ENDC	OBJ
#ENDC	BLSJ
#IF	ERL$G
MACRO/OBJ:BIN:ELCOPY SRC:(SYCND+ELCOPY)
MACRO/OBJ:BIN:ELINIT SRC:(SYCND+ELINIT)
MACRO/OBJ:BIN:ELTASK SRC:ELTASK
LINK/EXE:BIN:EL/FORE BIN:(ELCOPY,ELTASK)
LINK/EXE:BIN:ELINIT BIN:ELINIT
#IFN	OBJ
DELETE/NOQ BIN:(ELCOPY.OBJ,ELINIT.OBJ,ELTASK.OBJ)
#ENDC	OBJ
#ENDC	ERL$G
#IF	BATC$H
#IF	BLSJFB
MACRO/OBJ:BIN:BA SRC:(SYCND+BA)
LINK/EXE:BIN:BA.SYG BIN:BA
#IFN	OBJ
DELETE/NOQ BIN:BA.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:BAX SRC:(XM+SYCND+BA)
LINK/EXE:BIN:BAX.SYG BIN:BAX
#IFN	OBJ
DELETE/NOQ BIN:BAX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	BATC$H
#IF	DX
#IF	BLSJFB
MACRO/OBJ:BIN:DX SRC:(SYCND+DX)
LINK/EXE:BIN:DX.SYG BIN:DX
#IFN	OBJ
DELETE/NOQ BIN:DX.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DXX SRC:(XM+SYCND+DX)
LINK/EXE:BIN:DXX.SYG BIN:DXX
#IFN	OBJ
DELETE/NOQ BIN:DXX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DX
#IF	DY
#IF	BLSJFB
MACRO/OBJ:BIN:DY SRC:(SYCND+DY)
LINK/EXE:BIN:DY.SYG BIN:DY
#IFN	OBJ
DELETE/NOQ BIN:DY.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DYX SRC:(XM+SYCND+DY)
LINK/EXE:BIN:DYX.SYG BIN:DYX
#IFN	OBJ
DELETE/NOQ BIN:DYX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DY
#IF	DD
#IF	BLSJFB
MACRO/OBJ:BIN:DD SRC:(SYCND+DD)
LINK/EXE:BIN:DD.SYG BIN:DD
#IFN	OBJ
DELETE/NOQ BIN:DD.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DDX SRC:(XM+SYCND+DD)
LINK/EXE:BIN:DDX.SYG BIN:DDX
#IFN	OBJ
DELETE/NOQ BIN:DDX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DD
#IF	PD
#IF	BLSJFB
MACRO/OBJ:BIN:PD SRC:(SYCND+PD)
LINK/EXE:BIN:PD.SYG BIN:PD
#IFN	OBJ
DELETE/NOQ BIN:PD.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:PDX SRC:(XM+SYCND+PD)
LINK/EXE:BIN:PDX.SYG BIN:PDX
#IFN	OBJ
DELETE/NOQ BIN:PDX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	PD
#IF	DT
#IF	BLSJFB
MACRO/OBJ:BIN:DT SRC:(SYCND+DT)
LINK/EXE:BIN:DT.SYG BIN:DT
#IFN	OBJ
DELETE/NOQ BIN:DT.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DTX SRC:(XM+SYCND+DT)
LINK/EXE:BIN:DTX.SYG BIN:DTX
#IFN	OBJ
DELETE/NOQ BIN:DTX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DT
#IF	RF
#IF	BLSJFB
MACRO/OBJ:BIN:RF SRC:(SYCND+RF)
LINK/EXE:BIN:RF.SYG BIN:RF
#IFN	OBJ
DELETE/NOQ BIN:RF.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:RFX SRC:(XM+SYCND+RF)
LINK/EXE:BIN:RFX.SYG BIN:RFX
#IFN	OBJ
DELETE/NOQ BIN:RFX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	RF
#IF	DS
#IF	BLSJFB
MACRO/OBJ:BIN:DS SRC:(SYCND+DS)
LINK/EXE:BIN:DS.SYG BIN:DS
#IFN	OBJ
DELETE/NOQ BIN:DS.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DSX SRC:(XM+SYCND+DS)
LINK/EXE:BIN:DSX.SYG BIN:DSX
#IFN	OBJ
DELETE/NOQ BIN:DSX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DS
#IF	RK
#IF	BLSJFB
MACRO/OBJ:BIN:RK SRC:(SYCND+RK)
LINK/EXE:BIN:RK.SYG BIN:RK
#IFN	OBJ
DELETE/NOQ BIN:RK.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:RKX SRC:(XM+SYCND+RK)
LINK/EXE:BIN:RKX.SYG BIN:RKX
#IFN	OBJ
DELETE/NOQ BIN:RKX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	RK
#IF	DL
#IF	BLSJFB
MACRO/OBJ:BIN:DL SRC:(SYCND+DL)
LINK/EXE:BIN:DL.SYG BIN:DL
#IFN	OBJ
DELETE/NOQ BIN:DL.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DLX SRC:(XM+SYCND+DL)
LINK/EXE:BIN:DLX.SYG BIN:DLX
#IFN	OBJ
DELETE/NOQ BIN:DLX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DL
#IF	DP
#IF	BLSJFB
MACRO/OBJ:BIN:DP SRC:(SYCND+DP)
LINK/EXE:BIN:DP.SYG BIN:DP
#IFN	OBJ
DELETE/NOQ BIN:DP.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DPX SRC:(XM+SYCND+DP)
LINK/EXE:BIN:DPX.SYG BIN:DPX
#IFN	OBJ
DELETE/NOQ BIN:DPX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DP
#IF	DM
#IF	BLSJFB
MACRO/OBJ:BIN:DM SRC:(SYCND+DM)
LINK/EXE:BIN:DM.SYG BIN:DM
#IFN	OBJ
DELETE/NOQ BIN:DM.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:DMX SRC:(XM+SYCND+DM)
LINK/EXE:BIN:DMX.SYG BIN:DMX
#IFN	OBJ
DELETE/NOQ BIN:DMX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	DM
#IF	MTSP
#IF	FSM
#IF	BLSJFB
MACRO/OBJ:BIN:FSM SRC:(SYCND+FSM)
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:FSMX SRC:(XM+SYCND+FSM)
#ENDC	XM
#ENDC	FSM
#IF	MT
#IF	BLSJFB
MACRO/OBJ:BIN:MT SRC:(SYCND+TM)
#IF	MT$FSM
LINK/EXE:BIN:MT.SYG BIN:(MT,FSM)
#IFF
LINK/EXE:BIN:MTHD.SYG BIN:MT
#ENDC	MT$FSM
#IFN	OBJ
DELETE/NOQ BIN:MT.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:MTX SRC:(XM+SYCND+TM)
#IF	MT$FSM
LINK/EXE:BIN:MTX.SYG BIN:(MTX,FSMX)
#IFF
LINK/EXE:BIN:MTHDX.SYG BIN:MTX
#ENDC	MT$FSM
#IFN	OBJ
DELETE/NOQ BIN:MTX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	MT
#IF	MM
#IF	BLSJFB
MACRO/OBJ:BIN:MM SRC:(SYCND+TJ)
#IF	MM$FSM
LINK/EXE:BIN:MM.SYG BIN:(MM,FSM)
#IFF
LINK/EXE:BIN:MMHD.SYG BIN:MM
#ENDC	MM$FSM
#IFN	OBJ
DELETE/NOQ BIN:MM.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:MMX SRC:(XM+SYCND+TJ)
#IF	MM$FSM
LINK/EXE:BIN:MMX.SYG BIN:(MMX,FSMX)
#IFF
LINK/EXE:BIN:MMHDX.SYG BIN:MMX
#ENDC	MM$FSM
#IFN	OBJ
DELETE/NOQ BIN:MMX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	MM
#IF	MS
#IF	BLSJFB
MACRO/OBJ:BIN:MS SRC:(SYCND+TS)
#IF	MS$FSM
LINK/EXE:BIN:MS.SYG BIN:(MS,FSM)
#IFF
LINK/EXE:BIN:MSHD.SYG BIN:MS
#ENDC	MS$FSM
#IFN	OBJ
DELETE/NOQ BIN:MS.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:MSX SRC:(XM+SYCND+TS)
#IF	MS$FSM
LINK/EXE:BIN:MSX.SYG BIN:(MSX,FSMX)
#IFF
LINK/EXE:BIN:MSHDX.SYG BIN:MSX
#ENDC	MS$FSM
#IFN	OBJ
DELETE/NOQ BIN:MSX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	MS
#IF	FSM
#IFN	OBJ
#IF	BLSJFB
DELETE/NOQ BIN:FSM.OBJ
#ENDC	BLSJFB
#IF	XM
DELETE/NOQ BIN:FSMX.OBJ
#ENDC	XM
#ENDC	OBJ
#ENDC	FSM
#ENDC	MTSP
#IF	CT
#IF	BLSJFB
MACRO/OBJ:BIN:CT SRC:(SYCND+CT)
LINK/EXE:BIN:CT.SYG BIN:CT
#IFN	OBJ
DELETE/NOQ BIN:CT.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:CTX SRC:(XM+SYCND+CT)
LINK/EXE:BIN:CTX.SYG BIN:CTX
#IFN	OBJ
DELETE/NOQ BIN:CTX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	CT
#IF	LP
#IF	BLSJFB
MACRO/OBJ:BIN:LP SRC:(SYCND+LP)
LINK/EXE:BIN:LP.SYG BIN:LP
#IFN	OBJ
DELETE/NOQ BIN:LP.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:LPX SRC:(XM+SYCND+LP)
LINK/EXE:BIN:LPX.SYG BIN:LPX
#IFN	OBJ
DELETE/NOQ BIN:LPX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	LP
#IF	LS
#IF	BLSJFB
MACRO/OBJ:BIN:LS SRC:(SYCND+LS)
LINK/EXE:BIN:LS.SYG BIN:LS
#IFN	OBJ
DELETE/NOQ BIN:LS.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:LSX SRC:(XM+SYCND+LS)
LINK/EXE:BIN:LSX.SYG BIN:LSX
#IFN	OBJ
DELETE/NOQ BIN:LSX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	LS
#IF	PC
#IF	BLSJFB
MACRO/OBJ:BIN:PC SRC:(SYCND+PC)
LINK/EXE:BIN:PC.SYG BIN:PC
#IFN	OBJ
DELETE/NOQ BIN:PC.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:PCX SRC:(XM+SYCND+PC)
LINK/EXE:BIN:PCX.SYG BIN:PCX
#IFN	OBJ
DELETE/NOQ BIN:PCX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	PC
#IF	PR
#IF	BLSJFB
MACRO/OBJ:BIN:PC SRC:(SYCND+PC)
LINK/EXE:BIN:PC.SYG BIN:PC
#IFN	OBJ
DELETE/NOQ BIN:PC.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:PCX SRC:(XM+SYCND+PC)
LINK/EXE:BIN:PCX.SYG BIN:PCX
#IFN	OBJ
DELETE/NOQ BIN:PCX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	PR
#IF	CR
#IF	BLSJFB
MACRO/OBJ:BIN:CR SRC:(SYCND+CR)
LINK/EXE:BIN:CR.SYG BIN:CR
#IFN	OBJ
DELETE/NOQ BIN:CR.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:CRX SRC:(XM+SYCND+CR)
LINK/EXE:BIN:CRX.SYG BIN:CRX
#IFN	OBJ
DELETE/NOQ BIN:CRX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	CR
#IF	NL
#IF	BLSJFB
MACRO/OBJ:BIN:NL SRC:(SYCND+NL)
LINK/EXE:BIN:NL.SYG BIN:NL
#IFN	OBJ
DELETE/NOQ BIN:NL.OBJ
#ENDC	OBJ
#ENDC	BLSJFB
#IF	XM
MACRO/OBJ:BIN:NLX SRC:(XM+SYCND+NL)
LINK/EXE:BIN:NLX.SYG BIN:NLX
#IFN	OBJ
DELETE/NOQ BIN:NLX.OBJ
#ENDC	OBJ
#ENDC	XM
#ENDC	NL
#IF	LONG
#
#	To build an entire  system,  mount  the  source  and  binary
#	volumes,  copy  the  files  SYCND.MAC  and SYSTBL.MAC to the
#	source  volume,  and  type  @SYSBLD.   To  build  just   the
#	monitors,  type @MONBLD.  To build just the device handlers,
#	type  @DEVBLD.   For  more  information,  read   the   RT-11
#	INSTALLATION AND SYSTEM GENERATION GUIDE.
#ENDC	LONG
#
#	END OF SYSGEN PROGRAM --
#
#	     Do not forget to copy DK:SYCND.MAC and DK:SYSTBL.MAC to
#	     the  source  disk before executing the command file(s).
                                                                                       