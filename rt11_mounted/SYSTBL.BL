
	ASR	R2
	ASR	R2
	ASR	R2
	BNE	7$
	JSR	PC,R10ONF
	DEC	@SP
	ASL	@SP
	ASL	@SP
	ADD	(SP)+,R4
	MOV	#5,R2
8$:	.TTYOUT	(R4)+
	DEC	R2
	BNE	8$
	TST	(SP)+
	MOV	(SP)+,R0
	ADD	#72.,R0
	JSR	PC,R10OUT
K0CRLF:	OJMP	KCRLF
9$:	KMEROR	<No date>,,WARN$
10$:
.IF EQ	CONT$N
	KMEROR	<Illegal date>
.IFF
	KMEROR	<Illegal date>,,WARN$
.ENDC
NUMK:	OJSR	PC,DECNUM
	MOVB	(R3)+,R2
	SUB	R2,@SP
	BLE	10$
	MOVB	(R3)+,R2
	CMP	@SP,R2
	BGT	10$
	ADD	(SP)+,R1
	RTS	R3
.DSABL	LSB
.ENDC
.IF NE	TIME$$
.SBTTL	TIME
	OVCMD	TIME
.ENABL	LSB
OTIME:	MOV	@#SYSPTR,R0
	ADD	#CONFIG-$RMON,R0
	TST	@R0
	BPL	13$
	BIT	#CLK50$,@R0
	BEQ	1$
	MOVB	#50.,9$
	MOVB	#50.,CLKFRQ
1$:	ADDR	TMRLST,R3
	MOV	R3,R0
	MOV	R3,-(R0)
	TST	-(R0)
	EMT	375
	TSTB	@R5
	BEQ	8$
	CMPB	@R5,#SPACE
	BEQ	2$
	INC	R5
2$:	CMP	(R3)+,(R3)+
	CLR	R1
	CLR	-(SP)
3$:	OJSR	PC,DECNUM
	MOVB	(R3)+,R4
	CMP	R4,@SP
	BLOS	12$
	CMPB	@R5,(R3)+
	BEQ	4$
	TSTB	@R5
	BNE	12$
	INC	R5
4$:	ADD	(SP)+,@SP
	ADC	R1
	MOVB	@R3,R4
	BEQ	6$
	MOV	R1,R2
	MOV	@SP,R0
5$:	DEC	R4
	BEQ	3$
	ADD	R0,@SP
	ADC	R1
	ADD	R2,R1
	BR	5$
6$:	MOV	@#SYSPTR,R0
.IF NE	BF!TIME$R
	SUB	TMRLST+2,@SP
	SBC	R1
	SUB	TMRLST,R1
	ADD	(SP)+,$TIME+2-$RMON(R0)
	ADC	R1
	ADD	R1,$TIME-$RMON(R0)
K0RTS:	RTS	PC
.IFF
	OINTOF	7$
	MOV	(SP)+,$TIME+2-$RMON(R0)
	MOV	R1,$TIME-$RMON(R0)
	MOV	@SP,-(SP)
	CLR	2(SP)
7$:	RTI
.ENDC
8$:	MOV	(R3)+,R1
	MOV	(R3)+,R2
	JSR	R4,DIVIDE
9$:	 .WORD	CLOCK
	MOV	R5,R0
	MOV	#3,R3
10$:	MOV	R0,-(SP)
	JSR	R4,DIVIDE
	 .WORD	60.
	DEC	R3
	BNE	10$
11$:	JSR	PC,R10OUT
	MOV	(SP)+,R2
	BMI	14$
	.TTYOUT	#':
	MOV	R2,R0
	BR	11$
12$:
.IF EQ	CONT$N
	KMEROR	<Illegal time>
.IFF
	KMEROR	<Illegal time>,,WARN$
.ENDC
13$:	KMEROR	<No clock>,,WARN$
14$:	OJMP	KCRLF
.DSABL	LSB
.ENDC
.IF NE	TIME$$!DATE$$
.SBTTL	DECIMAL OUTPUT AND CONVERSION
.ENABL	LSB
R10ONF:	CMP	#10.,R0
	BHI	2$
R10OUT:	SWAB	R0
1$:	ADD	#173001,R0
	BPL	1$
	ADD	#'0+<10.*400-1>,R0
	.TTYOUT
	SWAB	R0
2$:	ADD	#'0,R0
	.TTYOUT
	RTS	PC
.DSABL	LSB
DIVIDE:	CLR	R0
	MOV	#31.,R5
1$:	ASL	R2
	