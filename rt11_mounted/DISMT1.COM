@R3,R0
	BCC	3$
	ADD	@R3,R0
	TST	R4
	BEQ	6$
	CMP	#33,R4
	BLO	7$
	BEQ	8$
5$:	ADD	#40,R4
6$:	ADD	#16,R4
7$:	ADD	#11,R4
8$:	ADD	#11,R4
	MOVB	R4,(R1)+
	TST	-(R3)
	BNE	2$
	MOV	(SP)+,R3
	MOV	(SP)+,R4
	RTS	PC
.ENDC
KMTXR:	.ASCII	"?KMON-"
KMLEV2:	.ASCII	"F-"<200>
LEVLT2:	.ASCII	"IWEFU"
OERBG2:
.IF NE	SUSP$$!RESU$$!ASSI$$!DEAS$$!FORM$$!CREA$$!BOOT$$!SQUE$$
	OVERLAY
.ENDC
.SBTTL	SUSPEND / RESUME
.IF NE	SUSP$$
	OVCMD	SUSPEND
	JMP	SUSP1
.ENDC
.IF NE	RESU$$
	OVCMD	RESUME
	JMP	RESU1
.ENDC
.IF NE	ASSI$$
	OVCMD	ASSIGN
	JMP	ASSIG1
.ENDC
.IF NE	DEAS$$
	OVCMD	DEASSIGN
	JMP	DEASS1
.ENDC
.IF NE	SQUE$$
.SBTTL	SQUEEZE COMMAND
	SYNTAX	SQUEEZE
	PROMPT	$DEVICE
	DEFILE	FSTARF
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	EOLSEQ	DUP
	SETSWIT	S
	END
 SWITS	SQUEEZE
SWIT	QUERY		1	DUP	-	-
 ENDNO
SWIT	OUTPUT		1	DUP	-	SOU
SWIT	WAIT		1	DUP	-	W
 NOS
SWIT	NOQUERY		1	-	-	Y
 ENDS
	OVCMD	SQUEEZE
	ITBLE	2
	OJSR	PC,INITIT
	OJMP	CMDEXE
OVASOU:	CMPB	#':,@R5
	BNE	1$
	OJSR	PC,SPISPEC
	MOVB	#FOTYP,-(R0)
1$:	RTS	PC
.ENDC
.IF NE	FORM$$
.SBTTL	FORMAT COMMAND
	SYNTAX	FORMAT
	PROMPT	$DEVICE
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	EOLSEQ	FORMAT
	END
 SWITS	FORMAT
SWIT	QUERY		1	FORMAT		-	-
 ENDNO
SWIT	WAIT		1	FORMAT		-	W
SWIT	SINGLEDENSITY	1	FORMAT		-	S
SWIT	VERIFY		1	FORMAT		-	V,,VAL
SWIT	PATTERN		1	FORMAT		-	P,,VAL
 NOS
SWIT	NOQUERY		1	FORMAT		-	Y
 ENDS
	OVCMD	FORMAT
	ITBLE	1
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	BOOT$$
	SYNTAX	BOOT
	PROMPT	$DVOFL
	DEFDV	$SY
	DEFINX	$.SYS
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	EOLSEQ	DUP
	SETSWIT	O
	END
 SWITS	BOOT
 ENDNO
SWIT	WAIT		1	DUP	-	W
SWIT	FOREIGN		1	DUP	-	Q
 NOS
 ENDS
	OVCMD	BOOT
	ITBLE	1
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	CREA$$
.SBTTL	CREATE COMMAND
	SYNTAX	CREATE
	PROMPT	$FILEE
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	ROUSPC,<1,2>
	ROUTINE	ATE
	SETSWIT	C
	EOLSEQ	DUP
	END
 SWITS	CREATE
 ENDNO
SWIT	START		1	DUP	-	G,,DVAL
SWIT	EXTENSION	1	-	DUP	T,,DVAL
SWIT	ALLOCATE	2	DUP	-	ALL
 NOS
 ENDS
	OVCMD	CREATE
	ITBLE	1
	OJSR	PC,INITIT
	OJMP	CMDEXE
OVAATE:
 OINST	TST	FORCEP,,*
	BPL	1$
	CMPB	(R4)+,(R4)+
1$:	RTS	PC
.ENDC
.IF NE	DEAS$$!ASSI$$
.SBTTL	ASSIGN, DEASSIGN
.ENABL	LSB
DEASS1:	JSR	PC,ADSUB
	BEQ	11$
	CLR	(R2)+
	BR	3$
1$:	OJMP	BADCOM
	SYNTAX	ASSIGN
	PROMPT	$PHYSICAL
	REQBLNK
	INSPEC
	PROMPT	$LOGICAL
	REQBLNK
	END
 SWITS	ASSIGN
 ENDNO
 NOS
 ENDS
ASSIG1:	MOV	R5,-(SP)
	ITBLE	2
	OJSR	PC,INITIT
	MOV	(SP)+,R5
	JSR	PC,ADSUB
	OJSR	PC,GETNAM
	BEQ	1$
	TST	2(R2)							;004
	BNE	1$
	OJSR	PC,OPTCOL
	CMPB	@R5,#SPACE						;004
	BNE	1$							;004
	TST	(R2)+							;004
3$:	OJSR	PC,GETNAM						;004
	BEQ	1$
	TST	2(R2)							;004
	BNE	1$							;004
	OJSR	PC,OPTCOL						;004
	TSTB	@R5							;004
	BNE	1$							;004
OINST	MOV	@R2,INPFN,,*						;004
	CMP	@R2,#<^RSY >						;004
..ASSY	== .								;004
	BEQ	1$							;004
	MOV	-2(R2),R5
	BEQ	6$
	CMP	@R2,#<^RBA >
	BEQ	HANERK
	MOV	R4,R0
	ADD	#$PNAME-$RMON,R0
4$:	MOV	R5,R3
 OINST	MOV	R5,INPFN,,*
	SUB	(R0)+,R3
	BLO	5$
	BEQ	6$
	SUB	#<^R  0>,R3
	BLO	5$
	CMP	R3,#7
	BLOS	6$
5$:	DEC	R1
	BNE	4$
HANERK:	OJMP	BADHAN
6$:	MOV	#$SLOT,R1
	ADD	#$UNAM2+<2*$SLOT>-$RMON,R4
	CLR	R3
7$:	CMP	@R2,-(R4)
	BEQ	10$
	TST	@R4
	BNE	8$
	MOV	R4,R3
8$:	DEC	R1
	BNE	7$
	TST	R5
	BEQ	13$
	MOV	R3,R4
	BEQ	14$
	MOV	@R2,@R4
9$:	MOV	R5,$UNAM1-$UNAM2(R4)
	RTS	PC
10$:	TST	R5
	BNE	9$
	CLR	@R4
	RTS	PC
11$:	ADD	#$UNAM2-$RMON,R4
12$:	CLR	(R4)+
	DEC	R1
	BNE	12$
	RTS	PC
13$:	KMRTMG	<Logical name not found>,WARN$
14$:	KMEROR	<No room>
.DSABL	LSB
ADSUB:	MOV	#$SLOT,R1
	OADDR	BLOCK,R2
	MOV	@#SYSPTR,R4
	TSTB	@R5
	RTS	PC
.ENDC
.IF NE	SUSP$$!RESU$$
.IF EQ	SYT$K
SUSP1:	TST	(PC)+
RESU1:	SEC
	MOVB	@R5,R1
	BEQ	SPNRSU
	OJMP	BADCOM
SPNRSU:	MOV	@#SYSPTR,R1
	MOV	FCNTXT-$RMON(R1),R2					;003
	BEQ	2$
	BCS	1$
	BIS	#KSPND$,I.BLOK(R2)					;003
	RTS	PC
1$:	BIC	#KSPND$,I.BLOK(R2)					;003
	MOVB	#MXJBNM/2+200,INTACT-$RMON(R1)
	.EXIT
2$:	KMEROR	<No foreground job>
.IFF
SUSP1:	JSR	PC,GLJNM
	BIS	#KSPND$,I.BLOK(R5)
	RTS	PC
RESU1:	JSR	PC,GLJNM
	BIC	#KSPND$,I.BLOK(R5)
	MOV	@#SYSPTR,R3
	MOVB	#MXJBNM/2+200,INTACT-$RMON(R3)
	.EXIT
GLJNM:	ADDR	NMBUF,R0
	MOV	R0,-(SP)
	CLR	(R0)+
	CLR	(R0)+
	CLR	(R0)+
	MOV	@SP,R0
	MOV	#6,R1
	TSTB	-(R5)
	BNE	3$
	MOVB	#'F,@R0
	BR	4$
2$:	TSTB	-(R5)
	BEQ	4$
3$:	MOVB	@R5,(R0)+
	DEC	R1
	BNE	2$
4$:	MOV	(SP)+,R0
5$:	MOV	@#SYSPTR,R5
	JSR	PC,FNDJOB-$RMON(R5)
	BEQ	6$
	MOV	@R5,R5
	RTS	PC
6$:	KMEROR	<No such job>
NMBUF:	.BLKW	3
.ENDC
.ENDC
.IF NE	FORM$$!SQUE$$!BOOT$$!CRE