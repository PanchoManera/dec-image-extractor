ut error>,FATAL$,PFILE
23$:	OJMP	FIPERR
24$:	OJMP	BADCOM
25$:	MOV	@#SYSPTR,R0
.IF EQ	MMG$T
	BIC	#USR$,CONFIG-$RMON(R0)
	BIS	SET62$,CONFIG-$RMON(R0)
.ENDC
.IF EQ	MTT$Y
.IF NE	BF
	MOV	SET58$,TTCNFG-$RMON(R0)
	MOVB	SET59$,TTWIDT-$RMON(R0)
	ADD	#LISTFB-$RMON,R0
	MOV	#100000,R1
	BIT	#FBTTY$,SET58$
	BNE	26$
	BIS	R1,(R0)+
	BIS	R1,(R0)+
.IF NE	SYT$K
	BIS	R1,(R0)+
.ENDC
	RTS	PC
26$:	BIC	R1,(R0)+
	BIC	R1,(R0)+
.IF NE	SYT$K
	BIC	R1,(R0)+
.ENDC
.ENDC
.IFF
	MOV	BKCNSL-$RMON(R0),R1
	MOV	SET58$,@R1
	MOV	SET59$,T.WID(R1)
.ENDC
	RTS	PC
27$:	OADDR	DEVSTS+2,R2
	MOV	R0,-(SP)
	OJSR	PC,GETNAM
	BEQ	24$
	MOV	(SP)+,R0
28$:	INC	R5
29$:	CMPB	-(R5),#40
	BEQ	29$
	INC	R5
	RTS	PC
30$:	CMPB	(R4)+,-(R5)
	BNE	32$
31$:	CMPB	-(R5),#40
	BEQ	31$
32$:	CMPB	(R4)+,(R5)+
	RTS	R4
.DSABL	LSB
.ENABL	LSB
SETUSR:	.WORD	USR$
	.RAD50	/SWAP  /
	.WORD	<1$-SETUSR>/2+100000
	.WORD	0
1$:
.IF EQ	MMG$T
	CLR	R3
	NOP
	MOV	R3,(PC)+
SET62$:	 .WORD	0
	RTS	PC
.IFF
	SEC
	RTS	PC
	RTS	PC
.ENDC
SETTTY:
2$:	.WORD	IFEKO$
	.RAD50	/QUIET /
	.WORD	<SETTTQ-2$>/2+100000
	.WORD	'\
	.RAD50	/HOLD  /
	.WORD	<SETTTH-2$>/2+100000
.IF NE	MTT$Y
	.WORD	TCBMAX
	.RAD50	/CONSOL/
	.WORD	<SETCON-2$>/2+40000
.ENDC
.IF NE	BF
	.WORD	FBTTY$
	.RAD50	/FB    /
	.WORD	<SETTTS-2$>/2+100000
.ENDC
.IF NE	BF!MTT$Y
	.WORD	HWTAB$
	.RAD50	/TAB   /
	.WORD	<SETTTS-2$>/2+100000
	.WORD	VT05$
	.RAD50	/SCOPE /
	.WORD	<SETTTS-2$>/2+100000
	.WORD	FORM$
	.RAD50	/FORM  /
	.WORD	<SETTTS-2$>/2+100000
	.WORD	CRLF$
	.RAD50	/CRLF  /
	.WORD	<SETTTS-2$>/2+100000
	.WORD	PAGE$
	.RAD50	/PAGE  /
	.WORD	<SETTTS-2$>/2+100000
	.WORD	30.
	.RAD50	/WIDTH /
	.WORD	<SETTTW-2$>/2+40000
.IFF
	.WORD	NOSCOP-SCOP
	.RAD50	/SCOPE /
	.WORD	<SETSCO-2$>/2+100000
.ENDC
.DSABL	LSB
SETTTQ:	BR	1$
	NOP
	BIC	R3,@<.STATWD-OVLY>-<.+4-OVLYST>(PC)
	RTS	PC
1$:	BIS	R3,@<.STATWD-OVLY>-<.+4-OVLYST>(PC)
	RTS	PC
SETTTH:	DEC	R3
	NOP
	MOVB	R3,2$
	ADDR	1$,R0
	.PRINT
	RTS	PC
1$:	.BYTE	33
2$:	.BYTE	0
	.BYTE	0
	.EVEN
.IF NE	MTT$Y
.ENABL	LSB
SETCON:	MOV	R0,-(SP)
	CMP	R0,R3
	BHIS	6$
	MOV	@#SYSPTR,R2
	ASL	R0
	ADD	R2,R0
	MOV	TCBLST-$RMON(R0),R0
	TST	T.CSR(R0)
	BEQ	6$
..CRMT	== .+2
	BIT	#REMOT$,@R0
	BNE	7$
	ADD	#BKCNSL-$RMON,R2
	MOV	@R2,R3
	CMP	R0,R3
	BEQ	4$
.IF NE	BF
	TST	T.STAT(R0)
	BMI	6$
.ASSUME	CONSL$	EQ	100000
	TST	T.OWNR(R0)
	BNE	6$
1$:	TSTB	I.OCTR-I.CNSL(R2)
	BNE	1$
	OSPL	7
.IFF
2$:	TSTB	T.OCTR(R3)
	BNE	2$
	OINTOF	5$
.ENDC
	MOV	R0,@R2
	MOV	@SP,I.CLUN-I.CNSL(R2)
	BIS	#<FBTTY$!PAGE$>,@R0
	MOV	@R0,SET58$
	MOV	T.WID(R0),SET59$
	MOV	T.STAT(R3),R1
	BIC	#^C<CONSL$!SHARE$>,R1
	BIC	R1,T.STAT(R3)
	BIS	R1,T.STAT(R0)
	MOV	T.TFIL(R0),@#TTFILL
	MOV	T.OWNR(R3),T.OWNR(R0)
	CLR	T.OWNR(R3)
.IF NE	BF
.IF EQ	SYT$K
	MOV	FCNTXT-BKCNSL(R2),R3
	BEQ	4$
	ASL	R1
	BEQ	4$
.ASSUME	CONSL$	EQ	100000
.ASSUME	SHARE$	NE	100000
	MOV	R0,I.CNSL(R3)
	MOV	@SP,I.CLUN(R3)
.IFF
	MOV	T.CNT(R3),T.CNT(R0)
	CLR	T.CNT(R3)
	ASL	R1
	BEQ	4$
.ASSUME	CONSL$	EQ	100000
.ASSUME	SHARE$	NE	100000
	ADD	#$IMPUR+MXJBNM+2-BKCNSL,R2
3$:	MOV	-(R2),R1
	BEQ	3$
	INC	R1
	BEQ	4$
	CMP	I.CNSL-1(R1),R3
	BNE	3$
	MOV	R0,I.CNSL-1(R1)
	MOV	@SP,I.CLUN-1(R1)
	BR	3$
.ENDC
.ENDC
4$:	TST	(SP)+
.IF NE	BF
	OSPL	0
	RTS	PC
.IFF
	MOV	@SP,-(SP)
	CLR	2(SP)
5$:	RTI
.ENDC
6$:	KMEROR	<Illegal terminal>
7$:	KMEROR	<Console must be local>
.DSABL	LSB
.ENDC
.IF NE	BF!MTT$Y
.ENABL	LSB
SETTTS:	BR	1$
	NOP
	BIC	R3,(PC)+
SET58$:	 .WORD	0
	RTS	PC
1$:	BIS	R3,SET58$
	RTS	PC
SETTTW:	MOVB	R0,(PC)+
SET59$:	 .WORD	0
	CMPB	R0,R3
	RTS	PC
.DSABL	LSB
.IFF
.ENABL	LSB
SETSCO:	CLR	R3
	NOP
	ADDR	SCOP,R3,ADD
	MOV	@#SYSPTR,R1
	ADD	#SCOP$2-$RMON,R1
1$:	MOV	(R3)+,(R1)+
	CMP	@R3,#-1
	BNE	1$
	TST	(R3)+
	MOV	(R3)+,SCOP$1-SCOP$2-SCOP2(R1)
	MOV	@R3,TTCNFG-SCOP$2-SCOP2(R1)
	RTS	PC
SCOP:	.WORD	4367
	.WORD	ECHO-SCOP$3
	.BYTE	BS,SPACE
	MOV	#BS,R4
	NOP
	NOP
SCOP1:	.WORD	-1
	.WORD	401
	.WORD	VT05$
NOSCOP:	CMPB	R0,@R1
	BEQ	2$
	.WORD	4767
	.WORD	TTORUB-SCOP$3-4
	MOV	R0,@R1
2$:	MOVB	@(R5),R4
	.WORD	-1
	.WORD	4767
	.WORD	0
SCOP2=SCOP1-SCOP
.DSABL	LSB
.ENDC
.ENABL	LSB
SETMOF:	.RAD50	/EDI/
	.WORD	1$-.
	.WORD	PROGDF-$RMON
	.RAD50	/EDI/
	.WORD	$$EDIT
	.RAD50	/TEC/
	.WORD	$$TECO
	.RAD50	/KED/
	.WORD	$$KED
	.RAD50	/K52/
	.WORD	$$K52
	.WORD	0
1$:	.RAD50	/FOR/
	.WORD	2$-.
	.WORD	PROGDF+1-$RMON
	.RAD50	/FOR/
	.WORD	$$FORTRAN
	.RAD50	/F4P/
	.WORD	$$F4P
	.WORD	0
2$:	.RAD50	/WIL/
	.WORD	3$-.
	.WORD	PROGDF+2-$RMON
	.RAD50	/IMP/
	.WORD	1
	.RAD50	/EXP/
	.WORD	0
	.WORD	0
3$:	.RAD50	/ERR/
	.WORD	0
	.WORD	ERRLEV-$RMON
	.RAD50	/WAR/
	.WORD	WARN$!ERROR$!SEVER$!FATAL$
	.RAD50	/ERR/
	.WORD	ERROR$!SEVER$!FATAL$
	.RAD50	/SEV/
	.WORD	SEVER$!FATAL$
	.RAD50	/NON/
	.WORD	FATAL$
	.RAD50	/FAT/
	.WORD	FATAL$
	.WORD	0
.ENDC
.DSABL	LSB
.SBTTL	INSTALL
.IF NE	B$$!E$$!D$$!INST$$!REMO$$
OVERLAY
.ENDC
.IF NE	B$$
OVCMD	B
	JMP	OB
.ENDC
.IF NE	D$$
OVCMD	D
	JMP	OD
.ENDC
.IF NE	E$$
OVCMD	E
	JMP	OE
.ENDC
.IF NE	INST$$
	SYNTAX	INSTALL
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	INSTALL
 ENDNO
 NOS
 ENDS
	OVCMD	INSTALL
	ITBLE	0
	OJSR	PC,INITIT
.ENABL	LSB
OINSTAL:JSR	PC,NMCK
	CMP	@R2,#<^RBA >
	BEQ	3$
	CMP	@R2,#<^RTT >
	BEQ	3$
	MOV	@R2,-(SP)
	.DSTAT	R2,R2
	BCC	4$
1$:	TST	(R1)+
	BEQ	FNDSLT
	TST	(R3)+
	CMP	R3,#$SLOT*2
	BLO	1$
	KMEROR	<No room>
FNDSLT:
 OINST	MOV	.SYIND,R4,*
	MOV	@R4,-(SP)
 OINST	ADD	.$PNAM,@SP,*
	MOVB	SYUNIT+1-SYINDX(R4),R4
	ADD	#<^R  0>,R4
	ADD	@(SP)+,R4
	MOV	R4,(R2)+
	MOV	@SP,@R2
	MOV	@#SYSPTR,R0
	ADD	HSUFFX-$RMON(R0),(R2)+
	CLR	(R2)+
	MOV	#<^RSYS>,@R2
	SUB	#6,R2
	MOV	#3*400+CHOVLY,R0
	EMT	374
	MOV	R2,R0
	OJSR	PC,COPYFN
	.LOOKUP	CHOVLY
	BCS	5$
 OINST	MOV	.USRBUF,R4,*
	CLR	@<.BLKEY-OVLY>-<.+4-OVLYST>(PC)
	CLR	R0
	.READW	CHOVLY,R4,#256.
	BCS	6$
	OADDR	BLOCK,R2
	.SAVEST	CHOVLY,R2
	MOV	@#SYSPTR,R0
	CMPB	H.GEN(R4),SYSGEN-$RMON(R0)
	BNE	7$
	ADD	R3,R0
	MOV	R0,-(SP)
	MOV	R4,R1
	ADD	#176,R1
	ADDR	TRPTST,R3
	ADDR	9$,R0
	MOV	R0,-(SP)
	.TRPSET	,R3,CODE=SET
	TST	@(R1)+
	BCS	8$
	TST	@R1
	BEQ	2$
	MOV	R5,-(SP)
	JSR	PC,@R1
	BCS	8$
	MOV	(SP)+,R5
2$:	MOV	(SP)+,R0
	.TRPSET	,#0
	MOV	(SP)+,R0
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	ADD	#H.SIZ,R4
	MOV	(R4)+,$HSIZE-$RMON(R0)
	MOV	(R4)+,$DVSIZ-$RMON(R0)
	MOV	(R4)+,$STAT-$RMON(R0)
	MOV	2(R2),$DVREC-$RMON(R0)
	INC	$DVREC-$RMON(R0)
	CLR	$ENTRY-$RMON(R0)
	MOV	(SP)+,$PNAME-$RMON(R0)
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	CMPB	@R5,#COMMA
	BEQ	OINSTALL
	TSTB	@R5
	BEQ	PCRTS
	OJMP	BADCOM
3$:	OJMP	BADHAN
4$:	KMRTMG	<Already installed/assigned>,WARN$
5$:	OJMP	NOTFND
6$:	OJMP	FIPERR
7$:	KMEROR	<Conflicting SYSGEN options>
8$:	KMRTMG	<Illegal device installation>,,PFILE
9$:	.BLKW	2
TRPTST:	BIS	#1,2(SP)
	RTI
.DSABL	LSB
.ENDC
.IF NE	REMO$$!INST$$
NMCK:	MOV	#-3,R3
1$:	MOVB	-(R5),R2
	SUB	#'Z+1,R2
	ADD	#'Z+1-'A,R2
	INC	R3
	BEQ	3$
	BCS	1$
2$:	OJMP	BADCOM
3$:	BCS	2$
	SUB	#'9+1-'A,R2
	ADD	#'9+1-'0,R2
	BCS	2$
	ADD	#3,R5
	OADDR	DEVSTS,R2
	OJSR	PC,GETNAM
	OJSR	PC,OPTCOL
 OINST	MOV	.$PNAM,R1,*
PCRTS:
 OINST	MOV	@R2,INPFN,,*
	RTS	PC
.ENDC
.IF NE	REMO$$
.SBTTL	REMOVE
	SYNTAX	REMOVE
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	REMOVE
 ENDNO
 NOS
 ENDS
	OVCMD	REMOVE
	ITBLE	0
	OJSR	PC,INITIT
.ENABL	LSB
OREMOVE:JSR	PC,NMCK
	CMP	@R2,#<^RSY >
	BEQ	8$
	CMP	@R2,#<^RBA >
	BEQ	8$
	CMP	@R2,#<^RTT >
	BEQ	8$
	MOV	#$SLOT,R3
1$:	CMP	@R2,(R1)+
	BEQ	2$
	DEC	R3
	BNE	1$
	BR	9$
2$:	MOV	@R2,-(SP)
	CLR	@R2
 OINST	MOV	.$UNAM,R4,*
	MOV	#$SLOT+1,R3
3$:	DEC	R3
	BEQ	4$
	CMP	#<^RSY >,(R4)+
	BNE	3$
	MOV	$UNAM1-$UNAM2-2(R4),@R2
4$:	CMP	@SP,@R2
	BEQ	8$
	MOV	SP,R4
	JSR	PC,DVCHK
	BCS	8$
	MOV	@SP,@R2
	.DSTAT	R2,R2
	BCS	5$
	CMP	4(R2),@#SYSPTR
	BHI	8$
	TST	4(R2)
	BNE	8$
5$:	MOV	(SP)+,@R2
	MOV	R2,R4
	MOV	#$SLOT,R3
 OINST	MOV	.$UNAM,R2,*
	ADD	#$UNAM1-$UNAM2,R2
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
6$:	JSR	PC,DVCHK
	BCC	7$
	CLR	$UNAM2-$UNAM1(R2)
	CLR	(R2)+
7$:	DEC	R3
	BNE	6$
	CLR	-(R1)
	CLR	$STAT-$PNAME(R1)
	CLR	$DVREC-$PNAME(R1)
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	TSTB	@R5
	BEQ	REMRTN
	CMPB	@R5,#COMMA
	BEQ	OREMOVE
	OJMP	BADCOM
8$:	KMRTMG	<Device loaded or not removable>
9$:	KMRTMG	<Device not installed>,WARN$
.DSABL	LSB
DVCHK:	MOV	@R4,-(SP)
	CMP	@R2,@SP
	BEQ	2$
	ADD	#<^R  0>,@SP
	CMP	@SP,@R2
	BHI	1$
	ADD	#'7-'0,@SP
	CMP	@R2,@SP
	BLOS	2$
1$:	TST	(PC)+
2$:	SEC
	MOV	R2,(SP)+
REMRTN:	RTS	PC
.ENDC
.SBTTL	BASE, EXAMINE
.ENABL	LSB
.IF NE	B$$
OB:	JSR	PC,EBDSB1
	TSTB	@R5
	BNE	100$
	BIC	#1,@SP
	MOV	(SP)+,<BASE-OVLY>-<.+4-OVLYST>(PC)
.ENDC
10$:	RTS	PC
.IF NE	E$$
OE:	JSR	PC,EBDSUB
	BIC	#1,@SP
	CLR	R1
	TSTB	@R5
	BEQ	1$
	CMPB	#MINUS,@R5
	BNE	100$
	OJSR	PC,OCTNUM
	TSTB	@R5
	BNE	100$
	MOV	(SP)+,R1
	SUB	@SP,R1
	BLO	100$
	ROR	R1
1$:	ADD	(SP)+,R3
2$:	MOV	#10,R4
3$:	JSR	PC,ADTRAN
	TST	(R3)+
	MOV	@R2,R2
OPRINT:	MOV	#30,R0
	SEC
4$:	ROL	R2
	ROLB	R0
	.TTYOUT
	MOV	#206,R0
5$:	ASL	R2
	BEQ	6$
	ROLB	R0
	BCS	5$
	BR	4$
6$:	DEC	R1
	BMI	10$
	.TTYOUT	#SPACE
	DEC	R4
	BNE	3$
	OJSR	PC,KCRLF
	BR	2$
.ENDC
.IF NE	D$$
.SBTTL	DEPOSIT
OD:	JSR	PC,EBDSUB
	ADD	(SP)+,R3
	BIC	#1,R3
	CMPB	@R5,#EQUALS
	BEQ	9$
7$:	TSTB	@R5
	BEQ	SAVEVC
	BR	100$
9$:	MOV	R3,R2
	MOV	@#SYSPTR,R0
	ADD	#CCB-$RMON,R0
	OJSR	PC,SETBIT
	JSR	PC,ADTRAN
	CMP	R3,R2
	BEQ	8$
 OINST	INC	SAVSWT,,*
8$:	OJSR	PC,OCTNUM
	MOV	(SP)+,@R2
	TST	(R3)+
	CMPB	@R5,#COMMA
	BEQ	9$
	BR	7$
.ENDC
.IF NE	D$$!E$$!B$$
100$:	OJMP	BADCOM
EBDSUB:
 OINST	MOV	#-1,BLOKWG,,*
 OINST	MOV	BASE,R3,*
EBDSB1:	CMPB	@R5,#SPACE
	BEQ	11$
	TSTB	@R5
	BNE	100$
11$:	MOV	@SP,-(SP)
	OJSR	PC,OCTNUM
	MOV	(SP)+,2(SP)
	RTS	PC
.ENDC
.DSABL	LSB
.IF NE	D$$!E$$
.SBTTL	ADTRAN & SAVEVC
.ENABL	LSB
ADTRAN:	MOV	@#SYSPTR,R2
	CMP	R3,SYSLOW-$RMON(R2)
..EMON	== .
	BHIS	4$
	BHIS	1$
	OADDR	KMON,R2
	BIC	#777,R2
	SUB	R3,R2
	BLOS	2$
1$:	MOV	R3,R2
	RTS	PC
2$:	OADDR	SYSIOB-2,R5,PUSH
	NEG	R2
	CLRB	R2
	SWAB	R2
	ASR	R2
	CMP	R2,(R5)+
	BEQ	3$
	JSR	PC,SAVEVC
	NEG	2(R5)
	MOV	R2,R0
	MOV	R0,<BLOKWG-OVLY>-<.+4-OVLYST>(PC)
	OJSR	PC,SYSK
3$:	MOV	R3,R2
	BIC	#^C<777>,R2
	ADD	@R5,R2
	BR	5$
4$:	KMEROR	<Address>
SAVEVC:	MOV	#-400,<SYSIOB+2-OVLY>-<.+6-OVLYST>(PC)
	OADDR	SAVSWT,R5,PUSH
	TST	(R5)+
	BEQ	5$
	MOV	(R5)+,R0
	OJSR	PC,SYSK
5$:	MOV	(SP)+,R5
	RTS	PC
.DSABL	LSB
.ENDC
.SBTTL	KMON ERROR OVERLAY
	OVERLAY
.CSECT	OVLYE
.	= STADDR
OVLYST	= .
	OVCMD	ERRCOD
STADDR: ADDR	OERBEG,R5,ADD
	BISB	@R5,@#USERRB
	MOVB	(R5)+,R1
	ADDR	LEVLST-1,R0
1$:	TSTB	(R0)+
	ROR	R1
	BCC	1$
	MOVB	@R0,KMLEV
	ADDR	KMTXT,R0
	.RCTRLO
	.PRINT
	MOV	R5,R0
	OJMP	MSGKM1
KMTXT:	.ASCII	"?KMON-"
KMLEV:	.ASCII	"F-"<200>
LEVLST:	.ASCII	"IWEFU"
OERBEG:
.SBTTL	KMON RUNTIME ERROR MESSAGE OVERLAY
	OVERLAY
.CSECT	OVLYE2
.	= STADD2
OVLYST	= .
	OVCMD	RTERR
STADD2:	TST	R4
	BNE	1$
 OINST	CLR	INPFN+2,,*
1$:	OADDR	INPFN,R0
	ADDR	OUTFN+1,R1
	JSR	PC,FNASC
	CLRB	(R1)+
	BR	OUTMSG
	OVCMD	BRTERR
	ADDR	OUTFN+1,R0
	INC	R4
1$:	MOVB	-(R4),(R0)+
	BNE	1$
OUTMSG:	ADDR	OERBG2,R5,ADD
	BISB	@R5,@#USERRB
	MOVB	(R5)+,R1
	ADDR	LEVLT2-1,R0
2$:	TSTB	(R0)+
	ROR	R1
	BCC	2$
	MOVB	@R0,KMLEV2
	ADDR	KMTXR,R0
	.RCTRLO
	.PRINT
	MOV	R5,R0
	.RCTRLO
	.PRINT
	ADDR	OUTFN,R0
	OJMP	MSGKM1
OUTFN:	.BYTE	SPACE
	.BLKB	14.
	.BYTE	0
	.EVEN
.SBTTL RAD50 FILENAME TO ASCII ROUTINE
FNASC:	MOV	R1,R4
	MOV	R0,R3
	JSR	PC,2$
	MOVB	#':,(R1)+
1$:	TST	@R3
	BEQ	4$
	JSR	PC,2$
	JSR	PC,2$
	MOVB	#'.,(R1)+
2$:	MOV	(R3)+,R0
.IF NE	SYT$K
	OJSR	PC,R50ASC
.IFF
	JSR	PC,R50ASC
.ENDC
3$:	CMPB	#SPACE,-1(R1)
	BNE	4$
	DEC	R1
	CMP	R1,R4
	BNE	3$
4$:	RTS	PC
.IF EQ	SYT$K
.SBTTL	RAD50 TO ASCII CONVERSION ROUTINE
	.WORD	0,1,50
DIVTAB:	.WORD	50*50
R50ASC:	MOV	R4,-(SP)
	MOV	R3,-(SP)
1$:	ADDR	DIVTAB,R3
2$:	MOV	#-1,R4
	CMP	#174777,R0
	BLO	5$
3$:	INC	R4
	SUB	