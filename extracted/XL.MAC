.MCALL	.MODULE
.MODULE	XL,VERSION=19,COMMENT=<Communications Driver>,AUDIT=YES

;                     	COPYRIGHT (c) 1986 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
	.SBTTL	EDIT HISTORY
	.ENABL	LC
.SBTTL	Conditional assembly summary
	.SBTTL	MACROS AND DEFINITIONS
	.IIF NDF XL$PC	XL$PC	= 0
	.IIF NDF XL$DVE	XL$DVE	= 0
	.IIF NDF XL$SBC	XL$SBC	= 0
	.IIF NDF XL$PDT	XL$PDT	= 0
	.IIF NDF XL$PRI	XL$PRI	= 4
	.IF NE <XL$DVE&XL$SBC>!<XL$PC&<XL$DVE!XL$SBC>>
	.ERROR
	.ENDC
	.IF NE XL$PC
	XL$CSR	= 173300
	XL$VEC	= 210
	.ENDC
	.IF NE XL$SBC
	XL$PRI	= 5
	.ENDC
	.MCALL	.DRDEF,	.MTPS,	.INTEN
	.DRDEF	XL,57,HNDLR$!SPFUN$,0,176500,300
	.DRPTR
	.DREST	CLASS=DVC.VT
	.DRSPF	<201>
	.DRSPF	<202>
	.DRSPF	<203>
	.DRSPF	<204>
	.DRSPF	<205>
	.DRSPF	<206>
	$$$VER	== 17.
	SYSPTR	= 54
	QCOMP	= 270
	CONFIG	= 300
		FBMON$	= 000001
	CONFG2	= 370
		PRO$	= 020000
	BUFSIZ	= 64.
	STPSIZ	= BUFSIZ/4
	RSTSIZ	= BUFSIZ*3/4
	LF	= 12
	CR	= 15
	CTRLQ	= 21
	CTRLS	= 23
	CTRLZ	= 32
	CLRDRV	= 201
	BRKDRV	= 202
	SRDDRV	= 203
	STSDRV	= 204
	OFFDRV	= 205
	DTRDRV	= 206
	RC.CTS	= 020000
	RC.IE	= 000100
	RC.RTS	= 000004
	RC.DTR	= 000002
	XC.IE	= 000100
	XC.SPD	= 000070
	XC.ENB	= 000002
	XC.BR	= 000001
	IC0DR	= 173200
	IC0CR	= IC0DR+2
	XL$BUF	= XL$CSR
	XL$CSA	= XL$CSR+2
	XL$CSB	= XL$CSR+6
	XL$MC0	= XL$CSR+10
	XL$MC1	= XL$CSR+12
	XL$BAU	= XL$CSR+14
	RPT.R0	= 000
		CRC.TR	= 300
		CMD.RE	= 020
		CMD.CR	= 030
		CMD.RT	= 050
		CMD.ER	= 060
		CMD.EI	= 070
	RPT.R1	= 001
		W1.RIE	= 030
		W1.TIE	= 002
	RPT.R2	= 002
	RPT.R3	= 003
		RCL.8	= 300
		W3.RXE	= 001
	RPT.R4	= 004
		CLK.16	= 100
		STP.1	= 004
		W4.EVN	= 002
		W4.PEN	= 001
	RPT.R5	= 005
		TCL.8	= 140
		W5.SB	= 020
		W5.TXE	= 010
	RPT.R1	= 001
		W1.REQ	= 004
	RPT.R2	= 002
		W2.REQ	= 000
		R2.IMK	= 034
		IMK.BE	= 020
		IMK.ES	= 024
		IMK.CA	= 030
		IMK.SR	= 034
	CLK.BG	= 000
	M0.DTR	= 020
	M0.RTS	= 010
	M1.CTS	= 040
	.IF NE XL$PC!XL$DVE
	B.50	= 000
	B.75	= 001
	B.110	= 002
	B.134	= 003
	B.150	= 004
	B.300	= 005
	B.600	= 006
	B.1200	= 007
	B.1800	= 010
	B.2000	= 011
	B.2400	= 012
	B.3600	= 013
	B.4800	= 014
	B.7200	= 015
	B.9600	= 016
	B.192K	= 017
	.ENDC
	.IF NE XL$SBC
	B.300	= 000
	B.600	= 001
	B.1200	= 002
	B.2400	= 003
	B.4800	= 004
	B.9600	= 005
	B.192K	= 006
	B.384K	= 007
	.ENDC
	PS	= 177776
	.SBTTL	INSTALLATION CODE
	.DRINS	XL
	NOP
	MOV	@#SYSPTR,R0
	BIT	#PRO$,CONFG2(R0)
	.IF EQ XL$PC
	BNE	10$
	.IFF
	BEQ	10$
	.ENDC
	.IF EQ XL$PC
	 .IF NE XL$DVE!XL$SBC
	MOV	INSCSR,R0
	MOV	ISPEED,4(R0)
	 .ENDC
	.IFF
	MOVB	ISPEED,@#XL$BAU
	MOV	#XL$CSA,R0
	MOVB	#CMD.CR,(R0)
	MOVB	#CRC.TR,(R0)
	MOVB	#RPT.R4,(R0)
	MOVB	#<CLK.16!STP.1>,(R0)
	MOVB	#RPT.R3,(R0)
	MOVB	#<W3.RXE!RCL.8>,(R0)
	MOVB	#RPT.R5,(R0)
	MOVB	#<W5.TXE!TCL.8>,(R0)
	MOVB	#RPT.R2,(R0)
	MOVB	#0,(R0)
	MOVB	#CMD.RE,(R0)
	MOV	#XL$CSB,R0
	MOVB	#CMD.CR,(R0)
	MOVB	#RPT.R2,(R0)
	MOVB	#W2.REQ,(R0)
	MOVB	#RPT.R1,(R0)
	MOVB	#W1.REQ,(R0)
	MOVB	#30!3,@#IC0CR
	MOVB	#CLK.BG,@#XL$MC0
	.ENDC
	TST	(PC)+
10$:	SEC
	RTS	PC
	.IF NE XL$PC
ISPEED:	.WORD	<B.1200*20>+B.1200
	.ENDC
	.IF NE XL$DVE
ISPEED:	.WORD	<B.1200*10000>!4000
	.ENDC
	.IF NE XL$SBC
ISPEED:	.WORD	<B.1200*10>!XC.ENB
	.ENDC
	.SBTTL	SET OPTION PARAMETER TABLE
	.IF EQ XL$PC
	.DRSET	CSR,160000,O.CSR,OCT
	.DRSET	VECTOR,477,O.VEC,OCT
	.ENDC
	.IF EQ XL$PC
	 .IF NE XL$PDT
	.DRSET	LIGHTS,-1,O.LGHT,NO
	 .ENDC
	.ENDC
	.IF NE XL$PC!XL$DVE!XL$SBC
	.DRSET	SPEED,NOP,O.SPEE,NUM
	.ENDC
	.SBTTL	SET OPTION PROCESSING ROUTINES
	.IF EQ XL$PC
O.CSR:	MOV	R0,INSCSR
	MOV	R0,XIS
	MOV	R0,XIB
	ADD	#2,XIB
	MOV	R0,XOS
	ADD	#4,XOS
	MOV	R0,XOB
	ADD	#6,XOB
	CMP	R0,R3
	RTS	PC
O.VEC:	MOV	R0,XL$VTB
	ADD	#4,R0
	MOV	R0,XL$VTB+6
	CMP	R3,R0
	RTS	PC
	 .IF NE XL$PDT
O.LGHT:	CLR	R3
	NOP
	COM	R3
	MOV	R3,LitFlg
	CLC
	RTS	PC
	 .ENDC
	.ENDC
	.IF NE XL$PC!XL$DVE!XL$SBC
O.SPEE:	MOV	PC,R1
	ADD	#SPEEDT-.,R1
10$:	TST	(R1)
	BEQ	20$
	CMP	R0,(R1)+
	BNE	10$
	SUB	PC,R1
	SUB	#<SPEEDT+2-.>,R1
	 .IF NE XL$PC
	ASR	R1
	MOV	R1,-(SP)
	ASL	R1
	ASL	R1
	ASL	R1
	ASL	R1
	BIS	(SP)+,R1
	MOVB	R1,@#XL$BAU
	 .ENDC
	 .IF NE XL$DVE
	SWAB	R1
	ASL	R1
	ASL	R1
	ASL	R1
	BIS	#4000,R1
	MOV	INSCSR,R0
	MOV	R1,4(R0)
	 .ENDC
	 .IF NE XL$SBC
	ASL	R1
	INC	R1
	ASL	R1
	MOV	INSCSR,R0
	MOV	R1,4(R0)
	 .ENDC
	MOV	R1,ISPEED
	TST	(PC)+
20$:	SEC
	RTS	PC
SPEEDT:
	 .IF EQ XL$SBC
	.WORD	50.,	75.,	110.,	134.,	150.,	300.
	.WORD	600.,	1200.,	1800.,	2000.,	2400.,	3600.
	.WORD	4800.,	7200.,	9600.,	19200.
	 .IFF
	.WORD	300.,	600.,	1200.,	2400.,	4800.,	9600.
	.WORD	19200.,	38400.
	 .ENDC
	.WORD	0
	.ENDC
	.SBTTL	DRIVER ENTRY
	.DRBEG	XL
	MOV	XLCQE,R4
	.IF EQ XL$PC
	TST	Q$BLKN(R4)
	BNE	10$
	MOV	@#SYSPTR,R5
	BIT	#FBMON$,CONFIG(R5)
	BNE	10$
	CLR	XICQE
	CLR	XOCQE
10$:	BIS	#<RC.IE!RC.RTS!RC.DTR>,@XIS
	.ENDC
	STATFG = .+2
	ASR	#1
	BCC	20$
	.IF EQ XL$PC
	MOV	#-2,SNDS
	BIS	#XC.IE,@XOS
	 .IF NE XL$PDT
	JSR	PC,SETLIT
	 .ENDC
	.IFF
	MOV	#RPT.R1,@CSRA
	BIS	#<W1.RIE!W1.TIE>,SSRAW1
	MOV	SSRAW1,@CSRA
	BIS	#<M0.DTR!M0.RTS>,@MCR0
	MOVB	#CTRLQ,@DBUF
	.ENDC
20$:	MOVB	Q$FUNC(R4),R5
	BNE	SPFUN
	ASL	Q$WCNT(R4)
	BCS	WRITE
READ:	JSR	R5,Q
XICQE:	 .WORD	0
XILQE:	 .WORD	0
	JSR	PC,XIIN
	RTS	PC
WRITE:	INC	QCHG
	JSR	R5,Q
XOCQE:	 .WORD	0
XOLQE:	 .WORD	0
	CLR	QCHG
	.IF EQ XL$PC
	BIS	#XC.IE,@XOS
	.IFF
	JSR	PC,GNXTCH
	BEQ	30$
	MOVB	R5,@DBUF
	.ENDC
30$:	RTS	PC
	.SBTTL	REGISTERS AND VECTOR TABLES
	.IF EQ XL$PC
XIS:	.WORD	XL$CSR
XIB:	.WORD	XL$CSR+2
XOS:	.WORD	XL$CSR+4
XOB:	.WORD	XL$CSR+6
	.IFF
DBUF:	.WORD	XL$BUF
CSRA:	.WORD	XL$CSA
CSRB:	.WORD	XL$CSB
MCR0:	.WORD	XL$MC0
MCR1:	.WORD	XL$MC1
BAUD:	.WORD	XL$BAU
	.ENDC
	.IF NE XL$PC
SSRAW1:	.WORD	0
SSRAW5:	.WORD	<W5.TXE!TCL.8>
	.ENDC
	.IF EQ XL$PC
	.DRVTB	XL,XL$VEC,XIINT
	.DRVTB	,XL$VEC+4,XLINT
	.IFF
	.DRVTB	XL,XL$VEC,XLINT
	.DRVTB	,XL$VEC+4,XLINT
	.ENDC
	.IF EQ XL$PC
	 .IF NE XL$PDT
	.SBTTL	LIGHTS ROUTINE FOR PDT-11'S
SETLIT:	TST	(PC)+
LITFLG:	 .WORD	0
	BEQ	30$
	MOV	#040000,R5
	TST	SNDS
	BLE	10$
	BIS	#000100,R5
10$:	TST	RECS
	BEQ	20$
	BIS	#000200,R5
20$:	MOV	R5,@#177420
30$:	RTS	PC
	 .ENDC
	.ENDC
	.SBTTL	SPFUN PROCESSING
SPFUN:	CMPB	R5,#SRDDRV
	BEQ	READ
	CMPB	R5,#BRKDRV
	BEQ	20$
	CMPB	R5,#CLRDRV
	BEQ	40$
	CMPB	R5,#STSDRV
	BEQ	50$
	CMPB	R5,#OFFDRV
	BEQ	100$
	CMPB	R5,#DTRDRV
	BEQ	110$
10$:	.DRFIN	XL
20$:	TST	Q$WCNT(R4)
	BEQ	30$
	MOV	#1,BRKFLG
	.IF EQ XL$PC
	BIS	#XC.BR,@XOS
	.IFF
	MOV	#RPT.R5,@CSRA
	BIS	#W5.SB,SSRAW5
	MOV	SSRAW5,@CSRA
	.ENDC
	BR	10$
30$:
	.IF EQ XL$PC
	BIC	#XC.BR,@XOS
	.IFF
	MOV	#RPT.R5,@CSRA
	BIC	#W5.SB,SSRAW5
	MOV	SSRAW5,@CSRA
	.ENDC
	CLR	BRKFLG
	.IF EQ XL$PC
	BIS	#XC.IE,@XOS
	.ENDC
	BR	10$
40$:	CLR	RECS
	.IF EQ XL$PC
	MOV	#-2,SNDS
	BIS	#XC.IE,@XOS
	 .IF NE XL$PDT
	JSR	PC,SETLIT
	 .ENDC
	.IFF
	CLR	SNDS
	MOVB	#CTRLQ,@DBUF
	.ENDC
	BR	10$
50$:	MOV	#$$$VER*400,R5
	TST	SNDS
	BLE	60$
	INC	R5
60$:	TST	RECS
	BEQ	70$
	BIS	#2,R5
70$:
	.IF EQ XL$PC
	BIT	#RC.CTS,@XIS
	.IFF
	BIT	#M1.CTS,@MCR1
	.ENDC
	BEQ	80$
	BIS	#4,R5
80$:
	.IF EQ	MMG$T
	MOV	R5,@Q$BUFF(R4)
	.IFF
	MOV	R5,-(SP)
	JSR	PC,@$PTWRD
	.ENDC
	BR	10$
100$:	MOV	#1,STATFG
	BR	10$
110$:
	.IF EQ XL$PC
	MOV	@XIS,R5
	BIC	#<RC.RTS!RC.DTR>,R5
	.IFF
	MOVB	@MCR0,R5
	BIC	#<M0.DTR!M0.RTS>,R5
	.ENDC
	TST	Q$WCNT(R4)
	BEQ	115$
	.IF EQ XL$PC
	BIS	#<RC.RTS!RC.DTR>,R5
	.IFF
	BIS	#<M0.DTR!M0.RTS>,R5
	.ENDC
115$:
	.IF EQ XL$PC
	MOV	R5,@XIS
	.IFF
	MOVB	R5,@MCR0
	.ENDC
	BR	10$
	.IF NE XL$PC
	.SBTTL	INTERRUPT SERVICE/DISPATCHER
	.DRAST	XL,4,XLDONE
	MOV	#RPT.R2,@CSRB
	MOV	@CSRB,-(SP)
	BIC	#^C<R2.IMK>,(SP)
	ASR	(SP)
	ADD	PC,(SP)
	ADD	#INTTAB-.,(SP)
	MOV	@(SP),(SP)
	ADD	PC,(SP)
INTDSP:	JMP	@(SP)+
ESINT:	MOV	#CMD.RE,@CSRA
IECOM:	MOV	#CMD.EI,@CSRA
	RTS	PC
SRINT:	MOV	#CMD.ER,@CSRA
	JMP	XIINT
INTTAB:	.WORD	IECOM-INTDSP
	.WORD	IECOM-INTDSP
	.WORD	IECOM-INTDSP
	.WORD	IECOM-INTDSP
	.WORD	XOINT-INTDSP
	.WORD	ESINT-INTDSP
	.WORD	XIINT-INTDSP
	.WORD	SRINT-INTDSP
	.ENDC
	.SBTTL	DRIVER RESET ENTRY
	.ENABL	LSB
XLDONE:	MOV	R0,-(SP)
	.IF EQ XL$PC
	BIC	#RC.IE,@XIS
	.IFF
	MOV	#RPT.R1,@CSRA
	BIC	#W1.RIE,SSRAW1
	MOV	SSRAW1,@CSRA
	.ENDC
	JSR	R4,50$
	 .WORD	XICQE-60$-Q$LINK
	TST	STATFG
	BNE	10$
	.IF EQ XL$PC
	BIS	#RC.IE,@XIS
	.IFF
	MOV	#RPT.R1,@CSRA
	BIS	#W1.RIE,SSRAW1
	MOV	SSRAW1,@CSRA
	.ENDC
10$:	INC	QCHG
	JSR	R4,50$
	 .WORD	XOCQE-60$-Q$LINK
	CLR	QCHG
	TST	STATFG
	BNE	30$
	.IF EQ XL$PC
	BIS	#XC.IE,@XOS
	.IFF
	MOV	R5,-(SP)
	JSR	PC,GNXTCH
	BEQ	20$
	MOVB	R5,@DBUF
20$:	MOV	(SP)+,R5
	.ENDC
30$:	MOV	(SP)+,R0
	TST	XLCQE
	BNE	40$
	RTS	PC
40$:	.DRFIN	XL
	SP.CCB	= 4
	SP.JOB	= 6
50$:	MOV	R5,-(SP)
	MOV	(R4)+,R5
	MOV	R4,-(SP)
	ADD	PC,R5
60$:	MOV	R5,-(SP)
70$:	MOV	Q$LINK(R5),R4
	BEQ	120$
	TST	SP.CCB(SP)
	BEQ	80$
	CMP	Q$CSW(R4),SP.CCB(SP)
	BNE	110$
	BR	90$
80$:	MOVB	Q$JNUM(R4),R0
	ASR	R0
	ASR	R0
	ASR	R0
	BIC	#^C<37>,R0
	CMP	R0,SP.JOB(SP)
	BNE	110$
90$:	MOV	Q$LINK(R4),Q$LINK(R5)
	CLR	Q$LINK(R4)
	TST	XLCQE
	BNE	100$
	MOV	R4,XLCQE
	MOV	R4,XLLQE
	BR	70$
100$:	MOV	XLLQE,R0
	MOV	R4,Q$LINK(R0)
	MOV	R4,XLLQE
	BR	70$
110$:	MOV	R4,R5
	BR	70$
120$:	MOV	(SP)+,R4
	MOV	R5,Q$LINK+2(R4)
	MOV	(SP)+,R4
	MOV	(SP)+,R5
	RTS	R4
	.DSABL	LSB
	.SBTTL	OUTPUT INTERRUPT SERVICER
	.IF EQ XL$PC
	.DRAST	XL,XL$PRI,XLDONE
	.IFF
XOINT:
	.ENDC
	.ENABL	LSB
	TST	(PC)+
BRKFLG:	 .WORD	0
	BNE	30$
	TST	(PC)+
SNDS:	 .WORD	0
	BPL	10$
	MOVB	#CTRLQ,R5
	ADD	#2,SNDS
	BEQ	20$
	MOVB	#CTRLS,R5
	BR	20$
10$:	TST	(PC)+
RECS:	 .WORD	0
	BNE	30$
	TST	(PC)+
QCHG:	 .WORD	0
	BNE	30$
	JSR	PC,GNXTCH
	BEQ	30$
20$:
	.IF EQ XL$PC
	MOVB	R5,@XOB
	 .IF NE XL$PDT
	JSR	PC,SETLIT
	 .ENDC
	RTS	PC
	.IFF
	MOVB	R5,@DBUF
	.ENDC
30$:
	.IF EQ XL$PC
	BIC	#XC.IE,@XOS
	.IFF
	MOV	#CMD.RT,@CSRA
	MOV	#CMD.EI,@CSRA
	.ENDC
	RTS	PC
	.DSABL	LSB
	.SBTTL	GNXTCH	- Get next output character
	.ENABL	LSB
GNXTCH:	MOV	XOCQE,R4
	BEQ	10$
	.IF EQ MMG$T
	ADD	#Q$WCNT,R4
	TST	@R4
	BEQ	20$
	INC	@R4
	MOVB	@-(R4),R5
	INC	@R4
	.IFF
	TST	Q$WCNT(R4)
	BEQ	20$
	INC	Q$WCNT(R4)
	JSR	PC,@$GTBYT
	MOV	(SP)+,R5
	.ENDC
	BIC	#^C<177>,R5
	BEQ	GNXTCH
	ASR	(PC)+
CRFLG:	 .WORD	0
	BCC	5$
	CMPB	R5,#LF
	BEQ	GNXTCH
5$:	CMPB	R5,#CR
	BNE	10$
	INC	CRFLG
10$:	RTS	PC
20$:	INC	QCHG
	.IF EQ XL$PC
	BIC	#XC.IE,@XOS
	.ENDC
	MOV	XOCQE,R4
	MOV	Q$LINK(R4),XOCQE
	JSR	PC,XLFIN
	CLR	QCHG
	.IF EQ XL$PC
	BIS	#XC.IE,@XOS
	.ENDC
	BR	GNXTCH
	.DSABL	LSB
	.SBTTL	INPUT INTERRUPT SERVICER
	.IF EQ XL$PC
	.DRAST	XI,XL$PRI
	.IFF
XIINT:
	.ENDC
	.ENABL	LSB
	.IF EQ XL$PC
	MOVB	@XIB,R5
	.IFF
	MOVB	@DBUF,R5
	.ENDC
	BIC	#^C<177>,R5
	BEQ	5$
	CMP	R5,#CTRLS
	BNE	10$
	MOV	#1,RECS
5$:
	.IF EQ XL$PC
	 .IF NE XL$PDT
	JSR	PC,SETLIT
	 .ENDC
	.IFF
	MOV	#CMD.EI,@CSRA
	.ENDC
	RTS	PC
10$:	CMP	R5,#CTRLQ
	BNE	20$
	CLR	RECS
	.IF EQ XL$PC
	BIS	#XC.IE,@XOS
	.IFF
	CLR	SNDS
	MOVB	#CTRLQ,@DBUF
	.ENDC
	BR	5$
20$:	TST	XIBFRE
	BEQ	40$
	MOV	XIBIN,R4
	ADD	PC,R4
	ADD	#XIBUF-.,R4
	MOVB	R5,(R4)
	DEC	XIBFRE
	INC	XIBIN
	CMP	XIBIN,#BUFSIZ
	BLO	30$
	CLR	XIBIN
30$:	CMP	XIBFRE,#STPSIZ
	BHI	50$
	TST	SNDS
	BGT	50$
40$:
	.IF EQ XL$PC
	MOV	#-1,SNDS
	BIS	#XC.IE,@XOS
	.IFF
	MOV	#1,SNDS
	MOVB	#CTRLS,@DBUF
	.ENDC
50$:	TST	XICQE
	BEQ	5$
	.IF NE XL$PC
	MOV	#CMD.EI,@CSRA
	.ENDC
	.DSABL	LSB
	.SBTTL	PROCESS INPUT RECIEVED FROM INTERRUPT SERVICER
	.ENABL	LSB
XIIN:	INC	INPRC
	BNE	110$
	JSR	PC,SAV30
5$:	CLR	INPRC
	CMP	XIBFRE,#RSTSIZ
	BLO	10$
	TST	SNDS
	BEQ	10$
	.IF EQ XL$PC
	MOV	#-2,SNDS
	BIS	#XC.IE,@XOS
	.IFF
	CLR	SNDS
	MOVB	#CTRLQ,@DBUF
	.ENDC
10$:	MOV	XICQE,R4
	BEQ	100$
	ASR	(PC)+
CTZFLG:	 .WORD	0
	BCS	90$
	CMP	XIBFRE,#BUFSIZ
	BEQ	100$
	MOV	XIBOUT,R5
	ADD	PC,R5
	ADD	#XIBUF-.,R5
	MOVB	(R5),R5
	INC	XIBFRE
	INC	XIBOUT
	CMP	XIBOUT,#BUFSIZ
	BLO	20$
	CLR	XIBOUT
20$:	TSTB	Q$FUNC(R4)
	BNE	30$
	CMP	R5,#CTRLZ
	BEQ	40$
30$:
	.IF EQ MMG$T
	ADD	#Q$WCNT,R4
	MOVB	R5,@-(R4)
	INC	(R4)+
	DEC	(R4)
	.IFF
	MOVB	R5,-(SP)
	JSR	PC,@$PTBYT
	DEC	Q$WCNT(R4)
	.ENDC
	BEQ	70$
	CMP	XIBFRE,#BUFSIZ
	BNE	5$
	MOV	XICQE,R4
	TSTB	Q$FUNC(R4)
	BEQ	5$
	BR	50$
40$:	INC	CTZFLG
50$:
	.IF EQ MMG$T
	ADD	#Q$WCNT,R4
60$:	CLRB	@-(R4)
	INC	(R4)+
	DEC	(R4)
	BNE	60$
	.IFF
	CLRB	-(SP)
	JSR	PC,@$PTBYT
	DEC	Q$WCNT(R4)
	BNE	50$
	.ENDC
70$:	MOV	XICQE,R4
	MOV	Q$LINK(R4),XICQE
80$:	JSR	PC,XLFIN
	BR	5$
90$:	BIS	#EOF$,@-(R4)
	BR	70$
100$:	DEC	INPRC
	BPL	5$
110$:	RTS	PC
INPRC:	.WORD	-1
	.DSABL	LSB
SAV30:	MOV	(SP)+,(PC)+
10$:	 .WORD	0
	MOV	R0,-(SP)
	MOV	R1,-(SP)
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	10$,-(SP)
	.MTPS	#0
	JSR	PC,@(SP)+
	MOV	(SP)+,R3
	MOV	(SP)+,R2
	MOV	(SP)+,R1
	MOV	(SP)+,R0
	RTS	PC
	.SBTTL	ENTER ENTRY ON INTERNAL QUEUE
Q:	CLR	XLCQE
	CLR	XLLQE
	TST	(R5)
	BNE	10$
	MOV	R4,(R5)+
	MOV	R4,(R5)+
	RTS	R5
10$:	TST	(R5)+
	MOV	R4,-(SP)
	MOV	(R5),R4
	MOV	(SP),Q$LINK(R4)
	MOV	(SP)+,(R5)+
	RTS	R5
	.SBTTL	REMOVE ENTRY FROM INTERNAL QUEUE
XLFIN:	.MTPS	#340
	TST	XLCQE-4
	BPL	999$
	MOV	(SP),-(SP)
.IF EQ	MMG$T
	CLR	2(SP)
.IFF
	MOV	@#PS,2(SP)
	BIC	#340,2(SP)
.ENDC
	.INTEN	XL$PRI,PIC
	.FORK	DQFBLK
.IF EQ	MMG$T
	.MTPS	#340
.IFF
	BIS	#340,@#PS
.ENDC
999$:	MOV	XLCQE,-(SP)
	MOV	R4,XLCQE
	MOV	R4,XLLQE
	CLR	Q$LINK(R4)
	MOV	PC,R4
	ADD	#XLCQE-.,R4
	MOV	@#SYSPTR,R5
	JSR	PC,@QCOMP(R5)
	MOV	(SP),XLCQE
	MOV	(SP)+,XLLQE
	RTS	PC
	.SBTTL	INPUT BUFFER AREA
XIBUF:	.BLKB	BUFSIZ
XIBIN:	.WORD	0
XIBOUT:	.WORD	0
XIBFRE:	.WORD	BUFSIZ
DQFBLK:	.WORD	0,0,0,0
	.DREND	XL
	.END
                                                                                                                                               