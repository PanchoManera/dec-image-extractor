.MCALL	.MODULE
.MODULE	NI,VERSION=16,COMMENT=<Ethernet Class Handler>,AUDIT=NO

;                        COPYRIGHT (c) 1986 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;                         ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
	.SBTTL	Class Handler Edit History
	.ENABL	LC
	.SBTTL	Class Handler Functional Description
	.SBTTL	Class Handler Definitions
	.IIF NDF NI$CNA NI$CNA = 0
	.IIF NE  NI$CNA NI$CNA = 1
	.IIF NDF NI$QNA NI$QNA = 0
	.IIF NE  NI$QNA NI$QNA = 1
	.IIF NDF NI$UNA NI$UNA = 0
	.IIF NE  NI$UNA NI$UNA = 1
	.IIF EQ MMG$T	.ERROR
	.IIF EQ <NI$CNA+NI$QNA+NI$UNA> .ERROR
	.IIF NE <NI$CNA+NI$QNA+NI$UNA>-1 .ERROR
	.MCALL	.DRDEF,	.ADDR,	.ASSUME
	.MCALL	.INTEN,	.BR
	NI$PRI	=: 5
	.IF NE NI$CNA
	.DRDEF	NI,61,<HNDLR$!SPFUN$!ABTIO$>,0,0,0
	NI$HND = <^RNC >
	.ENDC
	.IF NE NI$QNA
	 .IIF DF NQ$CSR NI$CSR = NQ$CSR
	 .IIF DF NQ$VEC NI$VEC = NQ$VEC
	.DRDEF	NI,61,<HNDLR$!SPFUN$!ABTIO$>,0,174440,120
	NI$HND = <^RNQ >
	.ENDC
	.IF NE NI$UNA
	 .IIF DF NU$CSR NI$CSR = NU$CSR
	 .IIF DF NU$VEC NI$VEC = NU$VEC
	.DRDEF	NI,61,<HNDLR$!SPFUN$!ABTIO$>,0,174510,120
	NI$HND = <^RNU >
	.ENDC
	.DRPTR	FETCH=*NO*
	.DREST	CLASS=DVC.NI
	.DRSPF	<200>
	.DRSPF	<201>
	.DRSPF	<202>
	.DRSPF	<203>
	.DRSPF	<204>
	.DRSPF	<205>
	SYSPTR	=: 54
	QCOMP	=: 270
	SPUSR	=: 272
	CONFG2	=: 370
		PROS$	= 020000
	MEMPTR	=: 430
		CORPTX	=: 4
	P1EXT	=: 432
		FINDGR	=: -10.
		XALLOC	=: -6
		BLKMOV	=: -2
	SP.POR	=: 200
	SP.PM	=: 201
	SP.PT	=: 202
	SP.MA	=: 203
	SP.XMT	=: 204
	SP.RCV	=: 205
	RC.SUC	=: 0
	RC.UNK	=: 1
	RC.CHN	=: 2
	RC.RES	=: 3
	RC.TRU	=: 4
	RC.NON	=: 5
	RC.EXC	=: 6
	RC.IMP	=: 7
	RC.PRO	=: 10
	RC.ACT	=: 11
	RC.INC	=: 12
	RC.XMT	=: 13
		SC.WFL =: 1
		SC.WEC =: 2
		SC.WCC =: 3
		SC.WSC =: 4
		SC.WOC =: 5
		SC.WRF =: 6
	RC.RLN	=: 14
	RC.INV	=: 15
	RC.ABO	=: 16
		SC.RFL =: 1
		SC.RBC =: 2
		SC.RFE =: 3
	JOBMK	=: 370
	UNITMK	=: 007
	KTGRAN	=: 32.
	KISAR1	=: 172342
	PSW	=: 177776
	.SBTTL	Class Handler Data Structure Definitions
	GR.SIZ	=: 0
	GR.ADR	=: 2
	GR.STA	=: 4
		GR.PVT = 100000
		GR.NRF = 000040
	GR.NAM	=: 6
	GR.ESZ	=: 10.
	UO.JOB	=: 0
	UO.OFG	=: 1
	UO.ESZ	=: 2
	UA.ADD	=: 0
	UA.ESZ	=: 6
	UP.TYP	=: 0
	UP.ESZ	=: 2
	EF.DST	=: 0
	EF.SRC	=: 6
	EF.TYP	=: 14
	EF.DAT	=: 16
	NIMFSZ	=: 1514.
	P.RTBS	= 003140
	.SBTTL	Psect Ordering
	.PSECT	NIDVR
	.PSECT	NIDAT
	.PSECT	NIEND
	.DREND	NI,PSECT=NIEND
	.SBTTL	Handler Entry Point
	.DRBEG	NI
	.IF NE NI$QNA!NI$UNA
	BR	NIBEG
NICSR:	.WORD	NI$CSR
NIVEC:	.WORD	NI$VEC
	.ENDC
NIBEG:	ASR	(PC)+
	 .WORD	1
	BCC	10$
	MOV	@#SYSPTR,R4
	MOV	P1EXT(R4),R4
	.ADDR	#NINAME,R5
	CALL	FINDGR(R4)
	MOV	GR.ADR(R1),NIXADR
	CALL	INIT
	BCS	10$
	MOV	SP,NICHFG
10$:	MOV	NICQE,R4
	MOVB	Q$FUNC(R4),R5
	MOVB	Q$UNIT(R4),R3
	BIC	#^C<UNITMK>,R3
	.ASSUME	UO.ESZ EQ 2
	ASL	R3
	.ADDR	#NIUOT,R3,ADD
	CMPB	R5,#SP.POR
	BNE	20$
	.ASSUME	Q$BLKN EQ 0
	TST	(R4)
	BNE	40$
20$:
	.ASSUME UO.JOB EQ 0
	.ASSUME UO.OFG EQ 1
	TST	(R3)
	BNE	30$
	MOV	#RC.UNK,-(SP)
	BR	SPERR
30$:
	.ASSUME	UO.JOB EQ 0
	CMPB	Q$UNIT(R4),(R3)
	BEQ	40$
	MOV	#RC.RES,-(SP)
	BR	SPERR
40$:	TSTB	R5
	BNE	SPFUN
	BR	NIERR
	.SBTTL	SPFUN	- Special Function Dispatcher
	.ENABL	LSB
SPFUN:	TST	NICHFG
	BEQ	30$
	CLR	-(SP)
	CALL	@$PTWRD
	SUB	#2,Q$BUFF(R4)
	.ADDR	#SPFTAB,R2
10$:	TST	(R2)
	BEQ	NIDONE
	CMPB	R5,(R2)
	BEQ	20$
	ADD	#4,R2
	BR	10$
20$:	MOV	2(R2),R2
	ADD	PC,R2
SPFDSP:	MOVB	Q$UNIT(R4),R5
	BIC	#^C<UNITMK>,R5
	JMP	@R2
30$:	MOV	#RC.CHN,-(SP)
SPERR:	CALL	@$PTWRD
NIERR:	BIS	#HDERR$,@-(R4)
NIDONE:	.DRFIN	NI
SPFTAB:	.WORD	SP.POR,	.SPPOR-SPFDSP
	.WORD	SP.PM,	.SPPM-SPFDSP
	.WORD	SP.PT,	.SPPT-SPFDSP
	.WORD	SP.MA,	.SPMA-SPFDSP
	.WORD	SP.XMT,	.SPXMT-SPFDSP
	.WORD	SP.RCV,	.SPRCV-SPFDSP
	.WORD	0
	.DSABL	LSB
	.SBTTL	.SPPOR	- Open/Close Portal
	.ENABL	LSB
.SPPOR:
	.ASSUME Q$BLKN EQ 0
	TST	(R4)
	BEQ	SPCLO.
SPOPP.:
	.ASSUME UO.JOB EQ 0
	.ASSUME UO.OFG EQ 1
	TST	NIPMFG
	BNE	30$
	TST	(R3)
	BNE	20$
	.ASSUME UO.JOB EQ 0
	.ASSUME UO.OFG EQ 1
	MOV	#-1,(R3)
	.ASSUME UO.JOB EQ 0
	MOVB	Q$UNIT(R4),(R3)
	INC	PORTCT
	BNE	10$
	CALL	ENABLE
	BCS	35$
10$:	MOV	NICQE,R4
	MOV	@#KISAR1,-(SP)
	MOV	Q$PAR(R4),@#KISAR1
	MOV	Q$BUFF(R4),R0
	ADD	#2,R0
	MOV	NIPHAD,(R0)+
	MOV	NIPHAD+2,(R0)+
	MOV	NIPHAD+4,(R0)+
	MOV	(SP)+,@#KISAR1
	BR	NIDONE
20$:	MOV	#RC.RES,-(SP)
	BR	SPERR
30$:	MOV	#RC.EXC,-(SP)
	BR	SPERR
35$:	CLR	NICHFG
	MOV	#RC.CHN,-(SP)
	BR	SPERR
SPCLO.:	MOVB	Q$UNIT(R4),R0
	MOV	NIOCQE,R1
	BEQ	50$
40$:	CMPB	R0,Q$UNIT(R1)
	BEQ	100$
	MOV	Q$LINK(R1),R1
	BNE	40$
50$:	MOV	NIICQE,R1
	BEQ	70$
60$:	CMPB	R0,Q$UNIT(R1)
	BEQ	100$
	MOV	Q$LINK(R1),R1
	BNE	60$
70$:	CLR	NIPMFG
80$:
	.ASSUME	UO.JOB EQ 0
	.ASSUME UO.OFG EQ 1
	CLR	(R3)
	.ASSUME	UP.ESZ EQ UO.ESZ
	CLR	NIUPT-NIUOT(R3)
	MOV	R5,R3
	MUL	#UA.ESZ,R3
	.ADDR	#NIUAT,R3,ADD
	CLR	(R3)+
	CLR	(R3)+
	CLR	(R3)+
	CALL	SETUP
	DEC	PORTCT
	BPL	90$
	CALL	DISABL
90$:	BR	NIDONE
100$:	MOV	#RC.ACT,-(SP)
	BR	SPERR
	.DSABL	LSB
	.SBTTL	.SPPM	- Enable/Disable Promiscuous Mode
	.ENABL	LSB
.SPPM:
	.ASSUME Q$BLKN EQ 0
	TST	(R4)
	BEQ	SPDPM.
SPEPM.:	TST	PORTCT
	BGT	10$
	MOV	#-1,NIPMFG
	MOVB	Q$UNIT(R4),NIPMFG
	CALL	SETUP
	BR	NIDONE
10$:	MOV	#RC.EXC,-(SP)
	JMP	SPERR
SPDPM.:	CLR	NIPMFG
	CALL	SETUP
	.ASSUME Q$BLKN EQ 0
	MOV	#1,(R4)
	.BR	.SPPT
	.DSABL	LSB
	.SBTTL	.SPPT	- Enable/Disable Protocol Type
	.ENABL	LSB
.SPPT:
	.ASSUME	UP.ESZ EQ 2
	ASL	R5
	.ADDR	#NIUPT,R5,ADD
	MOV	@#KISAR1,-(SP)
	MOV	Q$PAR(R4),@#KISAR1
	MOV	Q$BUFF(R4),R0
	MOV	2(R0),PROTMP
	MOV	(SP)+,@#KISAR1
	.ASSUME Q$BLKN EQ 0
	TST	(R4)
	BEQ	SPDPT.
SPEPT.:	TST	(R5)
	BEQ	10$
	MOV	#RC.RES,-(SP)
	JMP	SPERR
10$:	.ADDR	#NIUPT,R0
	MOV	#8.,R1
20$:	CMP	PROTMP,(R0)+
	BEQ	30$
	DEC	R1
	BGT	20$
	MOV	PROTMP,(R5)
	JMP	NIDONE
30$:	MOV	#RC.PRO,-(SP)
	JMP	SPERR
SPDPT.:	CMP	PROTMP,(R5)
	BNE	40$
	CLR	(R5)
40$:	JMP	NIDONE
	.DSABL	LSB
	.SBTTL	.SPMA	- Enable/Disable Multicast Address
	.ENABL	LSB
.SPMA:	MUL	#UA.ESZ,R5
	.ADDR	#NIUAT,R5,ADD
	MOV	@#KISAR1,-(SP)
	MOV	Q$PAR(R4),@#KISAR1
	MOV	Q$BUFF(R4),R0
	TST	(R0)+
	.ADDR	#ADDTMP,R1
	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
	MOV	(SP)+,@#KISAR1
	.ASSUME Q$BLKN EQ 0
	TST	(R4)
	BEQ	SPDMA.
SPEMA.:	MOV	(R5)+,-(SP)
	BIS	(R5)+,(SP)
	BIS	(R5)+,(SP)+
	BEQ	20$
	MOV	#RC.RES,-(SP)
	JMP	SPERR
20$:	.ADDR	#ADDTMP+UA.ESZ,R0
	MOV	-(R0),-(R5)
	MOV	-(R0),-(R5)
	MOV	-(R0),-(R5)
	BR	50$
SPDMA.:	MOV	R5,-(SP)
	.ADDR	#ADDTMP,R0
	MOV	#3,R1
30$:	CMP	(R0)+,(R5)+
	BNE	40$
	DEC	R1
	BGT	30$
	MOV	(SP),R5
	CLR	(R5)+
	CLR	(R5)+
	CLR	(R5)+
40$:	TST	(SP)+
50$:	CALL	SETUP
	JMP	NIDONE
	.DSABL	LSB
	.SBTTL	.SPXMT	- Transmit Ethernet Frame
	MNBFSZ	== 32.
	MXBFSZ	== 759.
.SPXMT:	CMP	Q$WCNT(R4),#MNBFSZ
	BGE	20$
10$:	MOV	#<SC.WFL*400+RC.XMT>,-(SP)
	JMP	SPERR
20$:	CMP	Q$WCNT(R4),#MXBFSZ
	BGT	10$
	INC	NOQCHG
	JSR	R5,ENQ
NIOCQE:	 .WORD	0
NIOLQE:  .WORD	0
	CLR	NOQCHG
	CALLR	XMIT
	.SBTTL	.SPRCV	- Receive Ethernet Frame
.SPRCV:	INC	NIQCHG
	JSR	R5,ENQ
NIICQE:	 .WORD	0
NIILQE:	 .WORD	0
	CLR	NIQCHG
	CALLR	RECV
	.SBTTL	SAV30	- Save Registers R0 to R3
SAV30:	MOV	R0,-(SP)
	MOV	R1,-(SP)
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	10(SP),-(SP)
	CALL	@(SP)+
	MOV	(SP)+,R3
	MOV	(SP)+,R2
	MOV	(SP)+,R1
	MOV	(SP)+,R0
	TST	(SP)+
	RETURN
	.SBTTL	SAVPAR	- Save PAR1 Mapping Context
SAVPAR:	MOV	(SP),-(SP)
	MOV	@#KISAR1,2(SP)
	CALL	@(SP)+
	MOV	(SP)+,@#KISAR1
	RETURN
	.SBTTL	FIXPAR	- Normalize Address/Par Information in Queue Element
FIXPAR:	CMP	Q$BUFF(R4),#20000
	BGE	10$
	ADD	#20000,Q$BUFF(R4)
	SUB	#200,Q$PAR(R4)
	BR	FIXPAR
10$:	CMP	Q$BUFF(R4),#20000+<KTGRAN*2>
	BLO	20$
	SUB	#<KTGRAN*2>,Q$BUFF(R4)
	INC	Q$PAR(R4)
	BR	10$
20$:	RETURN
	.SBTTL	ENQ	- Place Queue Element on Internal Queue
ENQ:	CLR	NICQE
	CLR	NILQE
	TST	(R5)
	BNE	10$
	MOV	R4,(R5)+
	MOV	R4,(R5)+
	BR	20$
10$:	TST	(R5)+
	MOV	R4,-(SP)
	MOV	(R5),R4
	MOV	(SP),Q$LINK(R4)
	MOV	(SP)+,(R5)+
20$:	RTS	R5
	.SBTTL	NIIDEQ	- Remove Queue Element from Internal Receive Queue
NIIDEQ:	MOV	R0,-(SP)
	MOV	SP,NIQCHG
	.ADDR	#NIICQE-Q$LINK,R0
10$:	CMP	Q$LINK(R0),R4
	BEQ	20$
	MOV	Q$LINK(R0),R0
	BNE	10$
	HALT
	BR	.-2
20$:	MOV	Q$LINK(R4),Q$LINK(R0)
	CLR	Q$LINK(R4)
	CLR	NIQCHG
	MOV	(SP)+,R0
	.BR	NIFIN
	.SBTTL	NIFIN	- Internal Queue Element Completion
NIFIN:	BIS	#340,@#PSW
	TST	NICQE-4
	BPL	10$
	MOV	(SP),-(SP)
	MOV	@#PSW,2(SP)
	BIC	#340,2(SP)
	.INTEN	NI$PRI,PIC
	.FORK	NIFBLK
	BIS	#340,@#PSW
10$:	MOV	NICQE,-(SP)
	MOV	R4,NICQE
	MOV	R4,NILQE
	CLR	Q$LINK(R4)
	.ADDR	#NICQE,R4
	MOV	@#SYSPTR,R5
	CALL	@QCOMP(R5)
	MOV	(SP),NICQE
	MOV	(SP)+,NILQE
	RETURN
	.SBTTL	NIABRT	- Class Handler Abort Code
NIABRT:	CALL	SAV30
	MOV	SP,NIQCHG
	JSR	R4,60$
	 .WORD	NIICQE-70$-Q$LINK
	CLR	NIQCHG
	MOV	SP,NOQCHG
	JSR	R4,60$
	 .WORD	NIOCQE-70$-Q$LINK
	CLR	NOQCHG
	.ADDR	#NIUOT,R0
	MOV	#8.,R1
10$:	MOV	(R0),R2
	BEQ	15$
	MOV	R2,-(SP)
	BIC	#^C<UNITMK>,(SP)
	BIC	#^C<JOBMK>,R2
	ASR	R2
	ASR	R2
	ASR	R2
	CMPB	R2,R4
	BNE	14$
	CLR	(R0)
	.ASSUME UP.ESZ EQ UO.ESZ
	CLR	NIUPT-NIUOT(R0)
	MOV	(SP),R3
	MUL	#UA.ESZ,R3
	.ADDR	#NIUAT,R3,ADD
	CLR	(R3)+
	CLR	(R3)+
	CLR	(R3)+
14$:	TST	(SP)+
15$:	TST	(R0)+
	DEC	R1
	BGT	10$
	MOV	PORTCT,-(SP)
	MOV	#-1,PORTCT
	.ADDR	#NIUOT,R0
	MOV	#8.,R1
20$:	TST	(R0)+
	BEQ	30$
	INC	PORTCT
30$:	DEC	R1
	BGT	20$
	MOV	NIPMFG,R0
	BEQ	40$
	BIC	#^C<JOBMK>,R0
	ASR	R0
	ASR	R0
	ASR	R0
	CMPB	R0,R4
	BNE	40$
	CLR	NIPMFG
40$:	CMP	PORTCT,(SP)+
	BEQ	50$
	TST	PORTCT
	BPL	45$
	CLR	NIPMFG
	CALL	DISABL
	BR	50$
45$:	CALL	SETUP
50$:	TST	NICQE
	BNE	55$
	RETURN
55$:	.DRFIN	NI
	SP.CCB	= 4
	SP.JOB	= 6
60$:	MOV	R5,-(SP)
	MOV	(R4)+,R5
	MOV	R4,-(SP)
	ADD	PC,R5
70$:	MOV	R5,-(SP)
80$:	MOV	Q$LINK(R5),R4
	BEQ	110$
	TST	SP.CCB(SP)
	BEQ	82$
	CMP	Q$CSW(R4),SP.CCB(SP)
	BNE	100$
	BR	84$
82$:	MOVB	Q$JNUM(R4),R0
	BIC	#^C<JOBMK>,R0
	ASR	R0
	ASR	R0
	ASR	R0
	CMP	R0,SP.JOB(SP)
	BNE	100$
84$:	MOV	Q$LINK(R4),Q$LINK(R5)
	CLR	Q$LINK(R4)
	TST	NICQE
	BNE	90$
	MOV	R4,NICQE
	MOV	R4,NILQE
	BR	80$
90$:	MOV	NILQE,R0
	MOV	R4,Q$LINK(R0)
	MOV	R4,NILQE
	BR	80$
100$:	MOV	R4,R5
	BR	80$
110$:	MOV	(SP)+,R4
	MOV	R5,Q$LINK+2(R4)
	MOV	(SP)+,R4
	MOV	(SP)+,R5
	RTS	R4
	.SBTTL	Class Handler Impure Data Area
	.PSECT	NIDAT
NIXADR:	.BLKW
NICHFG:	.WORD	0
PORTCT:	.WORD	-1
NIPMFG:	.WORD	0
NIAMFG:	.WORD	0
NOQCHG:	.WORD	0
NIQCHG:	.WORD	0
PROTMP:	.BLKW
ADDTMP:	.BLKW	3
NIUOT:
	.REPT	8.
	.WORD	0
	.ENDR
NIUPT:
	.REPT	8.
	.WORD	0
	.ENDR
NIPHAD:	.BLKB	6
NIBROD:	.WORD	177777,177777,177777
NIUAT:
	.REPT	8.
	.WORD	0,0,0
	.ENDR
NIFBLK:	.WORD	0,0,0,0
                 