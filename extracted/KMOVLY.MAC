.MCALL .MODULE
.MODULE KMOVLY,VERSION=63,COMMENT=<KMON Overlays>

;                     COPYRIGHT (c) 1984, 1985, 1986 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;                         ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
.IIF DF	NLOVLY,	.NLIST
.SBTTL	*********************************
.SBTTL	*	KMON OVERLAYS		*
.SBTTL	*********************************
.SBTTL	OVERLAY DEFINITIONS
.MACRO	OVERLAY
.IF GE	OVLYN
.IIF GT <.-OVLYST>-<1000*OVLYSZ>, .ERROR
.IRP	N,<\OVLYN>
OVSZ'N==.-OVLYST
.ENDR
.=OVLYST+<1000*OVLYSZ>
.ENDC
OVLYN=OVLYN+OVLYSZ
.IRP	N,<\OVLYN>
.CSECT	OVLY'N
.ENDR
OVLYST=.
.ENDM
.MACRO	OVCMD	CMD
N.'CMD=OVLYN
O.'CMD=.-OVLYST
CMD::
.ENDM
.MACRO	OJSR	R,DEST,AT
.IF B	AT
	 JSR	R,<DEST-OVLY>-<.+4-OVLYST>(PC)
.IFF
	 JSR	R,@<DEST-OVLY>-<.+4-OVLYST>(PC)
.ENDC
.ENDM
.MACRO	OJMP	DEST
	 JMP	<DEST-OVLY>-<.+4-OVLYST>(PC)
.ENDM
.MACRO	OINST	INST,OP1,OP2,FLG1,FLG2
.IF B	FLG1
.IF B	FLG2
.IF B	OP2
	INST	OP1
	.ERROR
.IFF
	INST	OP1,OP2
	.ERROR
.ENDC
.IFF
	INST	OP1,OP2-OVLY+OVLYST
.ENDC
.IFF
.IF B	OP2
	INST	OP1-OVLY+OVLYST
.IFF
.IF B	FLG2
	INST	OP1-OVLY+OVLYST,OP2
.IFF
	INST	OP1-OVLY+OVLYST,OP2-OVLY+OVLYST
.ENDC
.ENDC
.ENDC
.ENDM
.MACRO	OADDR	ADR,REG,PUSH
.IF IDN	REG,SP
	 MOV	PC,-(SP)
	 ADD	#<ADR-OVLY>-<.-OVLYST>,@SP
.IFF
.IF B	PUSH
	 MOV	PC,REG
.IFF
   .IF IDN PUSH,<ADD>
	 ADD	PC,REG
   .IFF
	 JSR	REG,@PC
   .ENDC
.ENDC
	 ADD	#<ADR-OVLY>-<.-OVLYST>,REG
.ENDC
.ENDM
.MACRO	OINTON	ABC
	CLR	-(SP)
	CALL	ABC
.ENDM
.MACRO	OINTOF	ABC
	MOV	#PR7,-(SP)
	CALL	ABC
.ENDM
.MACRO	ITBLE	NUM,?LAB
	JSR	R1,LAB
	.WORD	$NOFFS
	.WORD	<$SWTAD-OVLYST>+OVLY-SWTBAS
	.WORD	<$SYN-OVLYST>+OVLY-STRBAS
.IF EQ	$$$1
	.WORD	0
.IFF
	.IRP	N,<\$OPTX>
	.WORD	<OPTX'N-OVLYST>+OVLY-OPTBAS
	.ENDR
.ENDC
	.BYTE	$NONUM
	.BYTE	NUM
LAB:
.ENDM
.IF EQ	MMG$T
.MACRO	OSPL	PRIO
.IF NE	PRIO
	 MOV	#PRIO*40,-(SP)
.IFF
	 CLR	-(SP)
.ENDC
	OJSR	PC,.$MTPS,*
.ENDM	OSPL
.IFF
.MACRO	OSPL	PRIO
.IF NE	PRIO
	MOVB	#PRIO*40,@#PS
.IFF
	CLRB	@#PS
.ENDC
.ENDM	OSPL
.ENDC
.SBTTL	KMON ERROR OVERLAY
	OVERLAY
.CSECT	OVLYE
.	= STADDR
OVLYST	= .
	OVCMD	ERRCOD
STADDR: ADDR	OERBEG,R5,ADD
	BISB	@R5,@#USERRB
	MOVB	(R5)+,R1
	ADDR	LEVLST-1,R0
1$:	TSTB	(R0)+
	ROR	R1
	BCC	1$
	MOVB	@R0,KMLEV
	ADDR	KMTXT,R0
	.RCTRLO
	.PRINT
	MOV	R5,R0
	OJMP	MSGKM1
KMTXT:	.ASCII	"?KMON-"
KMLEV:	.ASCII	"F-"<200>
LEVLST:	.ASCII	"IWEFU"
OERBEG:
.SBTTL	KMON RUNTIME ERROR MESSAGE OVERLAY
	OVERLAY
.CSECT	OVLYE2
.	= STADD2
OVLYST	= .
	OVCMD	RTERR
STADD2:	TST	R4
	BNE	1$
 OINST	CLR	INPFN+2,,*
1$:	OADDR	INPFN,R0
	ADDR	OUTFN+1,R1
	CALL	FNASC
	CLRB	(R1)+
	BR	OUTMSG
	OVCMD	BRTERR
	ADDR	OUTFN+1,R0
	INC	R4
1$:	MOVB	-(R4),(R0)+
	BNE	1$
OUTMSG:	ADDR	OERBG2,R5,ADD
	BISB	@R5,@#USERRB
	MOVB	(R5)+,R1
	ADDR	LEVLT2-1,R0
2$:	TSTB	(R0)+
	ROR	R1
	BCC	2$
	MOVB	@R0,KMLEV2
	ADDR	KMTXR,R0
	.RCTRLO
	.PRINT
	MOV	R5,R0
	.RCTRLO
	.PRINT
	ADDR	OUTFN,R0
	OJMP	MSGKM1
OUTFN:	.BYTE	SPACE
	.BLKB	14.
	.BYTE	0
	.EVEN
.SBTTL RAD50 FILENAME TO ASCII ROUTINE
FNASC:	MOV	R1,R4
	MOV	R0,R3
	CALL	2$
	MOVB	#':,(R1)+
1$:	TST	@R3
	BEQ	4$
	CALL	2$
	CALL	2$
	TST	@R3
	BEQ	4$
	MOVB	#'.,(R1)+
2$:	MOV	(R3)+,R0
.IF NE	SYT$K
	OJSR	PC,R50ASC
.IFF
	CALL	R50ASC
.ENDC
3$:	CMPB	#SPACE,-1(R1)
	BNE	4$
	DEC	R1
	CMP	R1,R4
	BNE	3$
4$:	RETURN
.IF EQ	SYT$K
.SBTTL	RAD50 TO ASCII CONVERSION ROUTINE
	.WORD	0,1,50
DIVTAB:	.WORD	50*50
R50ASC:	MOV	R4,-(SP)
	MOV	R3,-(SP)
1$:	ADDR	DIVTAB,R3
2$:	MOV	#-1,R4
	CMP	#174777,R0
	BLO	5$
3$:	INC	R4
	SUB	@R3,R0
	BCC	3$
	ADD	@R3,R0
	TST	R4
	BEQ	6$
	CMP	#33,R4
	BLO	7$
	BEQ	8$
5$:	ADD	#40,R4
6$:	ADD	#16,R4
7$:	ADD	#11,R4
8$:	ADD	#11,R4
	MOVB	R4,(R1)+
	TST	-(R3)
	BNE	2$
	MOV	(SP)+,R3
	MOV	(SP)+,R4
	RETURN
.ENDC
	OVCMD	RADERR
	OADDR	INPFN,R3
	ADDR	OUTFN+1,R1
	MOV	(R3)+,R0
.IF NE	SYT$K
	OJSR	PC,R50ASC
.IFF
	CALL	R50ASC
.ENDC
	MOV	(R3)+,R0
	BEQ	1$
.IF NE	SYT$K
	OJSR	PC,R50ASC
.IFF
	CALL	R50ASC
.ENDC
1$:	CLRB	(R1)+
	CALLR	OUTMSG
KMTXR:	.ASCII	"?KMON-"
KMLEV2:	.ASCII	"F-"<200>
LEVLT2:	.ASCII	"IWEFU"
OERBG2:
.SBTTL	DATE
	OVERLAY
.IF NE	CLOS$$
	OVCMD	CLOSE
	CALLR	CLOSEO
.ENDC
.IF NE	DATE$$
	OVCMD	DATE
.ENABL	LSB
	ADDR	TMRLST,R3
	MOV	R3,R0
	MOV	R3,-(R0)
	TST	-(R0)
	EMT	375
	ADDR	MONTHS,R4
	MOV	@#SYSPTR,R0
	TSTB	@R5
	BEQ	6$
	CMPB	@R5,#SPACE
	BEQ	1$
	INC	R5
1$:	CLR	R1
	JSR	R3,NUMK
	 .BYTE	0.,31.-0.
	SWAB	R1
	ASR	R1
	ASR	R1
	ASR	R1
	INC	R5
	MOV	R5,R3
2$:	ADD	#2000,R1
	TSTB	1(R4)
	BEQ	10$
	MOV	R3,R5
	MOV	R4,R2
	CMP	(R4)+,(R4)+
3$:	MOVB	(R2)+,-(SP)
	BICB	#40,@SP
	MOVB	-(R5),-(SP)
	BICB	#40,@SP
	CMPB	(SP)+,(SP)+
	BNE	2$
4$:	CMP	R2,R4
	BLOS	3$
	JSR	R3,NUMK
	 .BYTE	72.,99.-72.
	TSTB	@R5
	BNE	10$
	ADDR	TMRLST,R0
	MOV	#-1,@R0
	MOV	R1,-(R0)
	MOV	R0,SDTM+2-<TMRLST-2>(R0)
	ADD	#SDTM-<TMRLST-2>,R0
	.SDTTM
	RETURN
6$:	MOV	$DATE-$RMON(R0),R2
	BIT	#140000,R2
	BNE	10$
	BIT	#37,R2
	BEQ	9$
7$:	MOV	@SP,R0
	MOV	R2,-(SP)
	BIC	#^C<37>,@SP
	ASR	R2
	ASR	R2
	ASR	R2
	ASR	R2
	ASR	R2
	BNE	7$
	CALL	R10ONF
	DEC	@SP
	ASL	@SP
	ASL	@SP
	ADD	(SP)+,R4
	MOV	#5,R2
8$:	.TTYOUT	(R4)+
	DEC	R2
	BNE	8$
	TST	(SP)+
	MOV	(SP)+,R0
	ADD	#72.,R0
	CALL	R10OUT
K0CRLF:	OJMP	KCRLF
9$:	KMEROR	<No date>,,WARN$
10$:
.IF EQ	CONT$N
	KMEROR	<Invalid date>
.IFF
	KMEROR	<Invalid date>,,WARN$
.ENDC
NUMK:	OJSR	PC,DECNUM
	MOVB	(R3)+,R2
	SUB	R2,@SP
	BLE	10$
	MOVB	(R3)+,R2
	CMP	@SP,R2
	BGT	10$
	ADD	(SP)+,R1
	RTS	R3
.DSABL	LSB
.ENDC
.IF NE	TIME$$
.SBTTL	TIME
	OVCMD	TIME
.ENABL	LSB
OTIME:	MOV	@#SYSPTR,R0
	ADD	#CONFIG-$RMON,R0
	TST	@R0
	BPL	13$
	BIT	#CLK50$,@R0
	BEQ	1$
	MOVB	#50.,9$
	MOVB	#50.,CLKFRQ
1$:	ADDR	TMRLST,R3
	MOV	R3,R0
	MOV	R3,-(R0)
	TST	-(R0)
	EMT	375
	TSTB	@R5
	BEQ	8$
	CMPB	@R5,#SPACE
	BEQ	2$
	INC	R5
2$:	CMP	(R3)+,(R3)+
	CLR	R1
	CLR	-(SP)
3$:	OJSR	PC,DECNUM
	MOVB	(R3)+,R4
	CMP	R4,@SP
	BLOS	12$
	CMPB	@R5,(R3)+
	BEQ	4$
	TSTB	@R5
	BNE	12$
	INC	R5
4$:	ADD	(SP)+,@SP
	ADC	R1
	MOVB	@R3,R4
	BEQ	6$
	MOV	R1,R2
	MOV	@SP,R0
5$:	DEC	R4
	BEQ	3$
	ADD	R0,@SP
	ADC	R1
	ADD	R2,R1
	BR	5$
6$:	MOV	@#SYSPTR,R0
.IF NE	BF!TIME$R
	SUB	TMRLST+2,@SP
	SBC	R1
	SUB	TMRLST,R1
	ADD	(SP)+,$TIME+2-$RMON(R0)
	ADC	R1
	ADD	R1,$TIME-$RMON(R0)
K0RTS:	RETURN
.IFF
	OINTOF	7$
	MOV	(SP)+,$TIME+2-$RMON(R0)
	MOV	R1,$TIME-$RMON(R0)
	MOV	@SP,-(SP)
	CLR	2(SP)
7$:	RTI
.ENDC
8$:	MOV	(R3)+,R1
	MOV	(R3)+,R2
	JSR	R4,DIVIDE
9$:	 .WORD	60.
	MOV	R5,R0
	MOV	#3,R3
10$:	MOV	R0,-(SP)
	JSR	R4,DIVIDE
	 .WORD	60.
	DEC	R3
	BNE	10$
11$:	CALL	R10OUT
	MOV	(SP)+,R2
	BMI	14$
	.TTYOUT	#':
	MOV	R2,R0
	BR	11$
12$:
.IF EQ	CONT$N
	KMEROR	<Invalid time>
.IFF
	KMEROR	<Invalid time>,,WARN$
.ENDC
13$:	KMEROR	<No clock>,,WARN$
14$:	OJMP	KCRLF
.DSABL	LSB
.ENDC
.IF NE	TIME$$!DATE$$
.SBTTL	DECIMAL OUTPUT AND CONVERSION
.ENABL	LSB
R10ONF:	CMP	#10.,R0
	BHI	2$
R10OUT:	SWAB	R0
1$:	ADD	#173001,R0
	BPL	1$
	ADD	#'0+<10.*400-1>,R0
	.TTYOUT
	SWAB	R0
2$:	ADD	#'0,R0
	.TTYOUT
	RETURN
.DSABL	LSB
DIVIDE:	CLR	R0
	MOV	#31.,R5
1$:	ASL	R2
	ROL	R1
	ROL	R0
	CMP	R0,@R4
	BLO	2$
	SUB	@R4,R0
	INC	R2
2$:	DEC	R5
	BPL	1$
	TST	(R4)+
	RTS	R4
SDTM:	.BYTE	0,..SDTM
	.WORD	0
.NLIST	BEX
..MNTH	== .
MONTHS:	.ASCIZ	"-Jan-Feb-Mar-Apr-May-Jun-Jul-Aug-Sep-Oct-Nov-Dec-"
.LIST	BEX
	.BYTE	0,..GTIM
	.WORD	0
TMRLST:	.WORD	0,0
	.BYTE	24.,':,60.,':,60.,'.
CLKFRQ:	.BYTE	60.,377,0
	.EVEN
.ENDC
.IF NE	CLOS$$
.SBTTL	CLOSE
CLOSEO:	TSTB	@R5
	BNE	12$
	CLR	R2
	CLR	R4
1$:	MOV	@#SYSPTR,R3
	ADD	#$CSW-$RMON,R3
	MOV	(PC)+,R5
	 .CLOSE	0
2$:	MOV	@R3,R0
	BPL	6$
	BIC	#^C<76>,R0
	ADD	@#SYSPTR,R0
	ADD	#$PNAME-$RMON,R0
 OINST	MOV	@R0,INPFN,,*
	TST	R2
	BNE	4$
	OADDR	DEVSTS,SP
	EMT	342
	BCS	11$
	TST	4(R0)
	BNE	3$
	MOV	2(R0),R0
	CMP	R0,R4
	BLOS	3$
	MOV	R0,R4
3$:	BR	6$
4$:	MOV	R0,-(SP)
	TST	R4
	BEQ	5$
	.SERR
	MOV	@SP,R0
	.FETCH	R4
	BCS	10$
	.HERR
5$:
.IF EQ	BF
	CLRB	C.DEVQ(R3)
.ENDC
	MOV	R5,@PC
	 HALT
	BCS	13$
	MOV	(SP)+,R0
	.RELEASE
6$:	INC	R5
	ADD	#12,R3
	CMP	R5,(PC)+
	 .CLOSE	20
	BLO	2$
	TST	R2
	BNE	8$
	MOV	R4,R0
	BEQ	7$
 OINST	MOV	SP,@.EXTFL,,*
	OJSR	PC,GETBLK
	BCC	7$
	SUB	R0,@SP
7$:
 OINST	CLR	@.EXTFL,,*
	MOV	SP,R2
	BR	1$
8$:	TST	R4
	BEQ	9$
 OINST	MOV	SP,@.EXTFL,,*
	OJSR	PC,PUTBLK
	BCC	9$
	ADD	R0,@SP
9$:
 OINST	CLR	@.EXTFL,,*
.IF NE	BF
	.SRESET
.IFF
	OJSR	PC,RSTSRS
.ENDC
	RETURN
10$:	OJSR	PC,PUTBLK
	TSTB	@#ERRBYT
	BPL	11$
	OJMP	BADFET
11$:	OJMP	BADHAN
12$:	OJMP	BADCOM
13$:	KMEROR	<File created; protected file already exists>,,WARN$
.ENDC
	OVERLAY
.SBTTL	LOAD
.IF NE	LOAD$$
	SYNTAX	LOAD
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	LOAD
 ENDNO
 NOS
 ENDS
	OVCMD	LOAD
.IFTF
	.ENABL	LSB
.IFT
	ITBLE	0
	OJSR	PC,INITIT
	MOV	R5,R2
	MOV	R5,R3
5$:	MOVB	-(R2),-(R3)
	BEQ	OLOAD
	CMPB	#<SPACE>,@R2
	BNE	5$
	TSTB	(R3)+
	BR	5$
OLOAD:	OADDR	DEVSTS,R2
	OJSR	PC,GETNAM
	OJSR	PC,OPTCOL
.ENDC
	OVCMD	OL1
	CALL	MAPIT1
	CLR	FTEMP
.IF NE	BF
 .IF EQ	SYT$K
	CLR	R3
	CMPB	#<'=>,@R5
	BNE	20$
	BICB	#40,-(R5)
	CMPB	#<'B>,@R5
	BEQ	10$
	CMPB	#<'F>,@R5
	BNE	IMSG3
	TST	(R3)+
10$:	INC	R3
	DEC	R5
 .IFF
	MOV	#<-1>,R3
	CMPB	#<'=>,@R5
	BNE	20$
	MOV	R2,-(SP)
	CALL	CKLJN1
	BNE	15$
	DEC	R5
	MOV	R5,R4
	CLRB	@R3
	KMRTMG	<No such job ->,,<BCKASZ>
15$:	MOV	(SP)+,R2
 .ENDC
.ENDC
20$:	MOV	@R2,-(SP)
 OINST	MOV	@R2,INPFN,,*
	.DSTAT	R2,R2
	BCS	IMSG1
	TST	4(R2)
	BNE	50$
	MOV	(SP)+,@R2
	MOV	2(R2),R0
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	OJSR	PC,GETBLK
	MOV	(SP)+,R3
	BCC	25$
	SUB	R0,R5
	SUB	R0,2(SP)
	SUB	R0,@SP
25$:	.SERR
	MOV	@SP,R0
	.FETCH	R4
	BCS	IMSG0
	.HERR
	MOV	R4,FTEMP
	CLR	-(SP)
	MOV	(R4)+,R2
	BPL	40$
	ASL	R2
	ADD	R2,R4
	MOV	(R4)+,R2
	BPL	35$
	MOV	(R4)+,@SP
	MOV	@#SYSPTR,R2
	CALL	@GETVEC-$RMON(R2)
	BCS	IMSG0X
30$:	MOV	(R4)+,R2
35$:	ADD	@SP,R2
40$:	BLE	45$
	MOV	R4,-(SP)
	MOV	#1,R4
	MOV	@#SYSPTR,R0
	ADD	#LOWMAP-$RMON,R0
	OJSR	PC,SETBT2
	MOV	(SP)+,R4
	CMP	(R4)+,(R4)+
	BR	30$
45$:	TST	(SP)+
	MOV	(SP)+,R2
	BR	20$
IMSG3:	OJMP	BADCOM
IMSG0X:	TST	(SP)+
	MOV	FTEMP,R4
IMSG0:	OJSR	PC,PUTBLK
	TSTB	@#ERRBYT
	BPL	IMSG1
	OJMP	BADFET
IMSG1:	OJMP	BADHAN
50$:
.IF NE	BF
	CLR	R1
 OINST	MOV	.$ENTR,R0,*
55$:	CMP	4(R2),(R0)+
	BNE	60$
	MOV	@SP,R4
	MOV	R1,-(SP)
 OINST	ADD	.$PNAM,@SP,*
	SUB	@(SP)+,R4
	BEQ	65$
	SUB	#<^R  0>,R4
	CMP	R4,#7
	BLOS	65$
60$:	TST	(R1)+
	CMP	R1,#$SLOT*2
	BLO	55$
	MOV	FTEMP,R4
	BEQ	IMSG3
	OJSR	PC,PUTBLK
	BR	IMSG3
65$:	MOV	@#SYSPTR,R0
	CMP	R1,SYINDX-$RMON(R0)
	BNE	70$
	TST	R3
 .IF NE	SYT$K
	BMI	70$
 .IFF
	BEQ	70$
 .ENDC
	CMPB	SYUNIT+1-$RMON(R0),R4
	BEQ	IMSG1
70$:
 .IF NE	SYT$K
	INC	R3
 .ENDC
	BIT	#FILST$!SPECL$,@R2
	BEQ	75$
	MOV	#17,FTEMP
	CLC
	ROR	R4
	BCC	ESRCH
	ASL	R3
	ASL	R3
	ASL	R3
	ASL	R3
	COMB	FTEMP
	BR	ESRCH
75$:	TST	R3
	BEQ	ESRCH
 .IF EQ	SYT$K
	DEC	R3
	BEQ	80$
	MOV	#^B<0010001000100010>,R3
80$:	ADD	#^B<0001000100010001>,R3
 .IFF
	MOV	R3,R0
	SWAB	R0
	BIS	R0,R3
	MOV	R3,R0
	ASL	R3
	ASL	R3
	ASL	R3
	ASL	R3
	BIS	R0,R3
 .ENDC
ESRCH:	CLR	R1
 OINST	MOV	.$ENTR,R0,*
85$:	CMP	4(R2),(R0)+
	BNE	100$
	MOV	R1,-(SP)
 OINST	ADD	.$OWNE,R1,*
	BIT	#FILST$!SPECL$,@R2
	BEQ	90$
	ADD	R4,R1
	BICB	FTEMP,@R1
	BISB	R3,@R1
	BR	95$
90$:	MOV	R3,(R1)+
	MOV	R3,@R1
95$:	MOV	(SP)+,R1
100$:	CMP	(R1)+,(R1)+
	CMP	R1,#$SLOT*4
	BLO	85$
.ENDC
	TST	(SP)+
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
.IF NE LOAD$$
	CMPB	@R5,#<COMMA>
	BEQ	105$
.ENDC
	TSTB	@R5
	BNE	IMSG3
	RETURN
.IF NE LOAD$$
105$:	CALLR	OLOAD
.ENDC
	.DSABL	LSB
FTEMP:	.WORD	0
MAPIT1:	MOV	#$SLOT+3,R3
 OINST	MOV	.$UNAM,R1,*
1$:	DEC	R3
	BEQ	2$
	CMP	@R2,(R1)+
	BNE	1$
	MOV	$UNAM1-$UNAM2-2(R1),@R2
2$:	RETURN
 .IF NE	SYT$K
	.ENABL	LSB
CKLJN1:	MOV	R5,(PC)+
R5STA1:	 .WORD	0
	ADDR	NBUFF1+6,R0
	CLR	-(R0)
	CLR	-(R0)
	CLR	-(R0)
	MOV	R0,-(SP)
	MOV	#6,R1
	TSTB	-(R5)
	BNE	10$
	OJMP	BADCOM
5$:	TSTB	-(R5)
	BEQ	15$
	CMPB	#COMMA,@R5
	BEQ	15$
10$:	MOVB	@R5,(R0)+
	DEC	R1
	BNE	5$
	DEC	R5
	MOV	R5,R3
15$:	MOV	(SP)+,R0
	MOV	R5,-(SP)
	MOV	@#SYSPTR,R5
	ADD	#$IMPUR-$RMON,R5
	MOV	R5,(PC)+
IMSTA1:	 .WORD	0
	CLR	R4
	CALL	FNDJOB-$IMPUR(R5)
	BEQ	20$
	MOV	R5,R4
	SUB	IMSTA1,R5
	MOV	R5,R3
	BR	25$
20$:	MOV	R5STA1,@SP
25$:	MOV	(SP)+,R5
	TST	R4
	RETURN
NBUFF1:	.BLKW	3
	.DSABL	LSB
  .ENDC
.IF NE	UNLO$$!REMO$$
.IF NE	REMO$$
	OVERLAY
.SBTTL	REMOVE
	SYNTAX	REMOVE
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	REMOVE
 ENDNO
 NOS
 ENDS
	.ENABL	LSB
	OVCMD	REMOVE
	ITBLE	0
	OJSR	PC,INITIT
OREMOV:	MOV	R5,R2
	MOV	R5,R3
5$:	MOVB	-(R2),-(R3)
	BEQ	15$
	CMPB	#<'a>,@R3
	BHI	10$
	CMPB	#<'z>,@R3
	BLO	10$
	BICB	#<40>,@R3
10$:	CMPB	#<SPACE>,@R2
	BNE	5$
	TSTB	(R3)+
	BR	5$
15$:	MOV	R5,-(SP)
.IF NE	MMG$T
	CLR	(PC)+
HNDREM:	 .WORD	0
.ENDC
	CLR	(PC)+
CLNFLG:  .WORD	0
	ADDR	NAME,R2
	OJSR	PC,GETNAM
	TST	@R2
	BEQ	45$
	MOV	R2,R0
	OJSR	PC,COPYFN
	TSTB	@R5
	BEQ	20$
	CMPB	#<COMMA>,@R5
	BEQ	20$
	CMPB	#<COLON>,@R5
	BNE	45$
	MOV	SP,CLNFLG
20$:	SUB	R5,@SP
	TST	CLNFLG
	BEQ	25$
	CMPB	#<COMMA>,-(R5)
	BEQ	25$
	TSTB	@R5
	BNE	45$
25$:	CMP	#<3>,(SP)+
.IF EQ	MMG$T
	BNE	45$
.IFF
	BEQ	35$
	TST	CLNFLG
	BNE	45$
	TST	2(R2)
	BNE	80$
	CMP	@R2,#<^RIND>
	BNE	80$
 OINST	TSTB	@.INDSTA,,*
	BPL	80$
30$:	KMRTMG	<Region is permanent or active>,,<JSTNAM>
.ENDC
35$:	CMP	@R2,#<^RSY >
	BEQ	105$
	CMP	@R2,#<^RBA >
	BEQ	105$
	CMP	@R2,#<^RTT >
	BEQ	105$
	MOV	#<$SLOT>,R3
 OINST	MOV	.$PNAM,R1,*
40$:	CMP	@R2,(R1)+
	BEQ	50$
	DEC	R3
	BNE	40$
.IF EQ	MMG$T
	KMRTMG	<Device not installed>,,<JSTNAM>
.IFF
	BR	80$
.ENDC
45$:	OJMP	BADCOM
50$:	MOV	@R2,-(SP)
	CLR	@R2
 OINST	MOV	.$UNAM,R4,*
	MOV	#$SLOT+1,R3
55$:	DEC	R3
	BEQ	60$
	CMP	#<^RSY >,(R4)+
	BNE	55$
	MOV	$UNAM1-$UNAM2-2(R4),@R2
60$:	CMP	@SP,@R2
	BEQ	105$
	MOV	SP,R4
	CALL	DVCHK
	BCS	105$
	OADDR	DEVSTS,R3
	MOV	(SP)+,@R2
	.DSTAT	R3,R2
	BCS	65$
	TST	4(R3)
	BNE	105$
65$:	MOV	R2,R4
	MOV	#$SLOT,R3
 OINST	MOV	.$UNAM,R2,*
	ADD	#$UNAM1-$UNAM2,R2
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
70$:	CALL	DVCHK
	BCC	75$
	CLR	$UNAM2-$UNAM1(R2)
	CLR	(R2)+
75$:	DEC	R3
	BNE	70$
	CLR	-(R1)
	CLR	$STAT-$PNAME(R1)
	CLR	$DVREC-$PNAME(R1)
.IF NE	MMG$T
	MOV	SP,HNDREM
	MOV	#<^R$  >,NAME+2
80$:	MOV	@#SYSPTR,R4
	JSR	R5,<VMDALC-$RMON>(R4)
NAME:	 .BLKW	2
	BCC	85$
	BNE	30$
	TST	HNDREM
	BNE	85$
	KMRTMG	<Region does not exist>,,<JSTNAM>
85$:
.ENDC
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
90$:	CMPB	#<COLON>,@R5
	BNE	95$
	TSTB	-(R5)
95$:	TSTB	@R5
	BEQ	100$
	CALLR	15$
100$:	RETURN
105$:	KMRTMG	<Device loaded or not removable>,,<JSTNAM>
.IF EQ	MMG$T
NAME:	 .BLKW	2
.ENDC
	.DSABL	LSB
DVCHK:	MOV	@R4,-(SP)
	CMP	@R2,@SP
	BEQ	2$
	ADD	#<^R  0>,@SP
	CMP	@SP,@R2
	BHI	1$
	ADD	#'7-'0,@SP
	CMP	@R2,@SP
	BLOS	2$
1$:	TST	(PC)+
2$:	SEC
	MOV	R2,(SP)+
	RETURN
.ENDC
.IF NE	UNLO$$
.SBTTL	UNLOAD
	SYNTAX	UNLOAD
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	UNLOAD
 ENDNO
 NOS
 ENDS
	OVCMD	UNLOAD
	ITBLE	0
	OJSR	PC,INITIT
	.ENABL	LSB
UNLDIN:
.IF NE	SYT$K
	MOV	R5,(PC)+
ERPTR:	 .WORD	0
	DEC	ERPTR
	CALL	CKLJN2
	BEQ	5$
	CALLR	110$
.ENDC
5$:	OADDR	DEVSTS,R2
	OJSR	PC,GETNAM
	BNE	10$
	OJMP	BADCOM
10$:	OJSR	PC,OPTCOL
 OINST	MOV	@R2,INPFN,,*
	MOV	R5,-(SP)
	MOV	@#SYSPTR,R5
.IF NE	BF
 .IF EQ	SYT$K
	MOV	SP,(PC)+
FGRUN:	 .WORD	0
	MOV	FCNTXT-$RMON(R5),R4
	BEQ	15$
	MOV	I.BLOK(R4),FGRUN
	BIC	#^C<NORUN$>,FGRUN
15$:	CMP	@R2,#<^RF  >
	BNE	20$
	TST	FGRUN
	BEQ	FJERR
	TST	R4
	BNE	110$
NOFERR:	KMEROR	<No foreground job>
FJERR:	KMEROR	<Foreground active>
 .ENDC
.ENDC
20$:	MOV	#<$SLOT+3>,R3
 OINST	MOV	.$UNAM,R1,*
25$:	DEC	R3
	BEQ	30$
	CMP	@R2,(R1)+
	BNE	25$
	MOV	$UNAM1-$UNAM2-2(R1),@R2
30$:
 OINST	MOV	@R2,INPFN,,*
	CLC
	MOV	R2,R0
	OJSR	R4,LK4DEV
	 BR	100$
	MOV	@R5,R4
	BEQ	80$
	MOV	@#SYSPTR,R1
	BIS	#<LDREL$>,CONFG2-$RMON(R1)
	CLR	R1
 OINST	MOV	.$ENTR,R0,*
35$:	CMP	R4,@R0
	BEQ	40$
	CMP	(R1)+,(R1)+
	TST	(R0)+
	CMP	R1,#<$SLOT*4>
	BLT	35$
40$:	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
.IF NE	BF
	MOV	R1,R2
 OINST	ADD	.$OWNE,R2,*
 .IF EQ	SYT$K
	TST	FGRUN
	BNE	45$
	MOV	@R2,-(SP)
	BIS	2(R2),@SP
	BIT	#<21042>,(SP)+
	BNE	FJERR
 .IFF
	CALL	OWNRNM
 .ENDC
.ENDC
45$:	MOV	R0,R3
	MOV	@#SYSPTR,R5
	CMP	R5,R4
	BLOS	80$
	MOV	#<6>,R1
	CALL	DRCALL-$RMON(R5);Call the handler is required on UNLOAD
	BCC	50$
	TST	R0
	BEQ	105$
	.PRINT	R0
	BR	80$
50$:	CLR	@R3
.IF NE	BF
	CLR	(R2)+
	CLR	@R2
.ENDC
55$:	SUB	#6,R4
	CLR	-(SP)
	MOV	R4,R1
	MOV	(R1)+,R5
	BPL	70$
	ASL	R5
	ADD	R5,R1
	MOV	(R1)+,R5
	BPL	65$
	MOV	(R1)+,@SP
	MOV	@#SYSPTR,R5
	CALL	@GETVEC-$RMON(R5)
	BCS	75$
60$:	MOV	(R1)+,R5
65$:	ADD	@SP,R5
70$:	BLE	75$
.IF NE	BF
	MOV	R5,-(SP)
	CLR	-(SP)
	.UNPROT	SP
	CMP	(SP)+,(SP)+
.ENDC
	CLR	(R5)+
	CLR	@R5
	CMP	(R1)+,(R1)+
	BR	60$
75$:	TST	(SP)+
	OJSR	PC,PUTBLK
	BCC	80$
	ADD	R0,@SP
	ADD	R0,2(SP)
80$:	MOV	(SP)+,R5
85$:	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	CMPB	@R5,#<COMMA>
	BNE	90$
	CALLR	UNLDIN
90$:	TSTB	@R5
	BEQ	95$
	OJMP	BADCOM
95$:	RETURN
100$:
.IF EQ	SYT$K
	OJMP	BADHAN
.IFF
	CLRB	@(SP)+
	MOV	ERPTR,R4
	CLRB	@R3
	KMRTMG	<No such job or device ->,,<BCKASZ>
.ENDC
105$:	KMEROR	<Unable to unload handler>
.IF NE	BF
110$:	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
 .IF EQ	SYT$K
	CLR	FCNTXT-$RMON(R5)
	BIC	#<FJOB$>,CONFIG-$RMON(R5)
 .IFF
	MOV	R4,R2
	MOV	@R4,R4
	BIT	#<NORUN$>,I.BLOK(R4)
	BNE	115$
	MOV	R5,R3
	MOV	ERPTR,R5
	MOV	R5,R4
	CLRB	@R3
	KMRTMG	<Job active - cannot unload >,,<BCKASZ>
115$:	CLR	@R2
	MOV	R5,-(SP)
 .ENDC
 .IF NE	ERL$G
	OJSR	PC,ERLCHK
	BNE	120$
	MOV	@#SYSPTR,R5
	CLR	$ELHND-$RMON(R5)
120$:
 .ENDC
	OJSR	PC,PUTBLK
	BCC	125$
	ADD	R0,2(SP)
	ADD	R0,@SP
125$:
 .IF NE	SYT$K
	MOV	#<MXJBNM>,R3
	MOV	@#SYSPTR,R5
	ADD	#<$IMPUR-$RMON+MXJBNM+2>,R5
130$:	TST	-(R5)
	BNE	80$
	SUB	#<2>,R3
	BNE	130$
	BIC	#<FJOB$>,<CONFIG-$IMPUR-2>(R5)
 .ENDC
	BR	80$
.ENDC
.DSABL	LSB
.IF NE	SYT$K
	.ENABL	LSB
CKLJN2:	MOV	R5,(PC)+
R5STA2:	 .WORD	0
	ADDR	NBUFF2+6,R0
	CLR	-(R0)
	CLR	-(R0)
	CLR	-(R0)
	MOV	R0,-(SP)
	MOV	#6,R1
	TSTB	-1(R5)
	BEQ	15$
5$:	TSTB	-1(R5)
	BEQ	25$
10$:	OJSR	PC,ALPHNT
	BCS	20$
	CMPB	@R5,#<COMMA>
	BEQ	30$
	CLR	R4
	CMPB	@R5,#':
	BEQ	35$
15$:	OJMP	BADCOM
20$:	MOVB	@R5,(R0)+
	DEC	R1
	BNE	5$
25$:	DEC	R5
30$:	MOV	R5,R3
	MOV	(SP)+,R0
	MOV	R5,-(SP)
	MOV	@#SYSPTR,R5
	ADD	#$IMPUR-$RMON,R5
	MOV	R5,(PC)+
IMSTA2:	 .WORD	0
	CLR	R4
	CALL	FNDJOB-$IMPUR(R5)
	BEQ	35$
	MOV	R5,R4
	SUB	IMSTA2,R5
	MOV	R5,R3
	BR	40$
35$:	MOV	R5STA2,@SP
40$:	MOV	(SP)+,R5
	TST	R4
	RETURN
NBUFF2:	.BLKW	3
	.DSABL	LSB
OWNRNM:	MOV	R3,-(SP)
	MOV	R5,-(SP)
	MOV	#4,R3
1$:	MOVB	@R2,R5
	CALL	3$
	MOVB	(R2)+,R5
	ASRB	R5
	ASRB	R5
	ASRB	R5
	ASRB	R5
	CALL	3$
	DEC	R3
	BNE	1$
	CMP	-(R2),-(R2)
	MOV	(SP)+,R5
	MOV	(SP)+,R3
2$:	RETURN
3$:	BIT	#1,R5
	BEQ	2$
	BIC	#^C<16>,R5
	BEQ	2$
	ADD	@#SYSPTR,R5
	MOV	$IMPUR-$RMON(R5),R5
	BEQ	2$
	BIT	#NORUN$,I.BLOK(R5)
	BNE	2$
	KMRTMG	<Job active - cannot unload>
.ENDC
 .ENDC
.ENDC
.IF NE	FRUN$$!SRUN$$
.SBTTL	FRUN/SRUN PART 1
	OVERLAY
	SYNTAX	SRUN
	PROMPT	$FILE
	SCALL	GSWIT,<1>
	REQBLNK
	ROUTINE	FSP
	SCALL	RINSPC,<1>
	END
 SWITS	SRUN
 ENDNO
SWIT	PAUSE		1	-	-	PAU
SWIT	TERMINAL	1	-	-	TTY
SWIT	BUFFER		1	-	-	BUF
SWIT	NAME		1	-	-	NAM
SWIT	LEVEL		1	-	-	LEV
 NOS
 ENDS
STA	= 40
STK	= 42
RSZ	= 52
FRJSTK	= 54
OSZ	= 56
RID	= 60
RBD	= 62
FJOBNM	= FJOBS*2
MXJBNM	= FJOBNM
OFLEV	= FSIZ
OFPSW	= OFLEV+2
OFLJN	= OFPSW+2
OFBUF	= OFLJN+6
OFTTY	= OFBUF+2
OFTCB	= OFTTY+2
.ENABL	LSB
.IF NE	FRUN$$
	OVCMD	FRUN
	MOV	#FJOBNM,(PC)+
.ENDC
JLVL:	 .WORD	0
.IF NE	SYT$K
	BR	FSRUN
.IF NE	SRUN$$
	OVCMD	SRUN
	CLR	JLVL
.ENDC
.ENDC
FSRUN:	MOV	#FSIZ,R2
	OADDR	FILST+OFLEV,R3
.IF NE	SYT$K
	MOV	R3,-(SP)
.ENDC
1$:	CLR	(R3)+
	DEC	R2
	BNE	1$
	ITBLE	1
	OJSR	PC,INITIT
	MOV	@#SYSPTR,R5
.IF NE	SYT$K
	MOV	(SP)+,R0
	ADD	#OFLJN-OFLEV,R0
	TST	@R0
	BNE	2$
	SUB	#FSIZ,R0
2$:	CALL	FNDJOB-$RMON(R5)
	BEQ	3$
	BIT	#NORUN$,I.BLOK(R2)
	BEQ	BADNAM
	CALL	DEADJB
3$:	MOV	@#SYSPTR,R5
	MOV	JLVL,R3
	BNE	5$
	MOV	#MXJBNM,R3
	ADD	#<$IMPUR-$RMON+MXJBNM>,R5
4$:	SUB	#2,R3
	BEQ	MAXACT
	TST	-(R5)
	BEQ	7$
	MOV	@R5,R2
	BIT	#NORUN$,I.BLOK(R2)
	BNE	6$
	BR	4$
5$:	ADD	R3,R5
	ADD	#<$IMPUR-$RMON>,R5
.IFF
	MOV	#FJOBNM,R3
	ADD	#<FCNTXT-$RMON>,R5
.ENDC
	TST	@R5
	BEQ	7$
	MOV	@R5,R2
	BIT	#NORUN$,I.BLOK(R2)
	BNE	6$
.IF NE	SYT$K
	CMP	#FJOBNM,R3
	BNE	BADLVL
.ENDC
	KMEROR	<Foreground active>
6$:	CALL	DEADJB
7$:	MOV	R5SAV,R5
	MOV	R3,-(SP)
..FRDK	== .+2
	MOV	#<^RDK >,R3
.IF NE	SYT$K
	CMP	#FJOBNM,@SP
	BEQ	8$
..SRDK	== .+2
	MOV	#<^RSY >,R3
	OJSR	PC,SFILE
	BR	9$
8$:
.ENDC
	OJSR	PC,RFILE
9$:	OADDR	FILST+OFLEV,R4
	MOV	(SP)+,@R4
.IF NE	MTT$Y
	ADD	#OFTTY-OFLEV,R4
	MOV	(R4)+,R2
	MOV	@#SYSPTR,R0
	MOV	BKCNSL-$RMON(R0),@R4
	MOV	(R4)+,@R4
	TST	R2
	BEQ	10$
	COM	R2
	ADD	#TCBLST-$RMON,R0
	ADD	R2,R0
	MOV	@R0,R0
	BEQ	ILLUN
	TST	T.CSR(R0)
	BEQ	ILLUN
	TST	T.OWNR(R0)
	BNE	ILLUN
	BIT	#CONSL$,T.STAT(R0)
	BNE	ILLUN
	MOV	R0,@R4
10$:
.ENDC
	MOV	R5SAV,R5
	MOV	R3,R0
	OJMP	FSGHAR
OVCMD	FSR2
	MOV	(SP)+,R0
	OJSR	PC,COPYFN
	.LOOKUP	CHOVLY
	BCC	11$
	OJMP	NOTFND
11$:
 OINST	CLR	@.BLKEY,,*
	OVLINK	FSRU2
BDCMND: OJMP	BADCOM
ILLUN:	KMEROR	<Invalid terminal>
.IF NE	SYT$K
BADNAM:	KMEROR	<Invalid logical job name>
BADLVL:	KMEROR	<Invalid priority level>
MAXACT:	KMEROR	<Six system tasks already running - cannot SRUN task>
.ENDC
.DSABL	LSB
.SBTTL	FRUN/SRUN PART 3
	.ENABL	LSB
	OVCMD	STRTPG
	MOV	(SP)+,R4
	MOV	@#SYSPTR,R3
.IF NE	MTT$Y
	OADDR	FILST+OFTTY,R2
	MOV	(R2)+,R1
	BEQ	5$
	COM	R1
	ASR	R1
	BR	10$
5$:	MOV	BKGND+I.CLUN-$RMON(R3),R1
10$:	MOV	R1,I.CLUN(R4)
	MOV	(R2)+,R0
	MOV	@R2,R1
	MOV	R1,I.CNSL(R4)
	CMP	R0,R1
	BEQ	15$
	BIS	#CONSL$,T.STAT(R1)
	MOV	R4,T.OWNR(R1)
.IF NE	SYT$K
	DEC	T.CNT(R0)
	CMP	#1,T.CNT(R0)
	BNE	15$
.ENDC
	MOV	BCNTXT-$RMON(R3),T.OWNR(R0)
	BIC	#SHARE$,T.STAT(R0)
15$:	BIC	#^C<TTSPC$!TTLC$!TCBIT$>,I.TERM(R4)
	BIC	#<TTSPC$!TTLC$!TCBIT$>,@R1
	BIS	@R1,I.TERM(R4)
.ENDC
	BIS	#FJOB$,CONFIG-$RMON(R3)
	MOV	R3,R2
.IF NE	MMG$T
	MOV	@SP,R5
	ADD	R3,R5
	CLR	SCCATB-$RMON(R5);Clear possible old value in SCCA table
.ENDC
	MOV	(SP)+,R5
	ADD	R5,R2
	ASL	R5
	ADD	R5,R3
	MOV	(SP)+,$JBLIM+2-$RMON(R3)
	MOV	(SP)+,$JBLIM-$RMON(R3)
	MOV	R4,R3
	ADD	#I.JID,R3
	MOV	(PC)+,(R3)+
	 .ASCII	<CR><LF>
.IF NE	SYT$K
	OADDR	FILST+OFLEV,R5
	MOV	@R5,R1
	ADD	#OFLJN-OFLEV,R5
	TST	@R5
	BNE	20$
	SUB	#FSIZ,R5
20$:	MOV	R5,-(SP)
	CMP	#FJOBNM,R1
	BEQ	35$
	MOV	#6,R1
25$:	MOVB	(R5)+,(R3)+
	TSTB	@R5
	BEQ	30$
	DEC	R1
	BNE	25$
30$:	MOVB	#'>,(R3)+
	MOVB	#CR,(R3)+
	MOVB	#LF,(R3)+
	CLRB	@R3
	BR	40$
35$:
.ENDC
	MOV	(PC)+,(R3)+
	 .ASCII	"F>"
	MOV	(PC)+,(R3)+
	 .ASCII	<CR><LF>
	CLR	@R3
.IF NE	SYT$K
40$:	MOV	(SP)+,R5
	MOV	R4,R3
	ADD	#I.LNAM,R3
	MOV	#<6>,R1
45$:	MOVB	(R5)+,@R3
	CMPB	#<'a>,@R3
	BHI	50$
	CMPB	#<'z>,@R3
	BLO	50$
	BICB	#<40>,@R3
50$:	TSTB	(R3)+
	DEC	R1
	BNE	45$
.ENDC
	MOV	@#SYSPTR,R3
	MOV	(SP)+,R1
	BIT	#WINDW$,@R4
	BEQ	55$
	MOV	R3,SYSPTR(R1)
	TST	V.EMT(R1)
	BNE	55$
	MOV	@#V.EMT,V.EMT(R1)
55$:	TST	(SP)+
	BNE	60$
	MOV	R4,$IMPUR-$RMON(R2)
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
.IF NE	ERL$G
	CALL	ERLOAD
.ENDC
	MOVB	#MXJBNM/2+200,INTACT-$RMON(R3)
	.EXIT
60$:	BIS	#KSPND$,I.BLOK(R4)
	MOV	R4,$IMPUR-$RMON(R2)
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
.IF NE	ERL$G
	CALL	ERLOAD
.ENDC
	JSR	R0,65$
.NLIST	BEX
	 .ASCII	"Loaded at "<200>
.LIST	BEX
	.EVEN
65$:	TST	(SP)+
	.PRINT
	MOV	#30,R0
	SEC
70$:	ROL	R1
	ROLB	R0
	.TTYOUT
	MOV	#206,R0
75$:	ASL	R1
	BEQ	80$
	ROLB	R0
	BCS	75$
	BR	70$
80$:	OJMP	KCRLF
	.DSABL	LSB
.IF NE	ERL$G
ERLOAD:	OJSR	PC,ERLCHK
	BNE	1$
	MOV	R4,$ELIMP-$RMON(R3)
	MOV	@R1,$ELHND-$RMON(R3)
1$:	RETURN
.ENDC
DEADJB:	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	MOV	R2,R4
.IF NE	ERL$G
	OJSR	PC,ERLCHK
	BNE	1$
	MOV	@#SYSPTR,R2
	CLR	$ELHND-$RMON(R2)
1$:
.ENDC
	CLR	@R5
	MOV	R3,-(SP)
	OJSR	PC,PUTBLK
	MOV	(SP)+,R3
	BCC	2$
	ADD	R0,R5SAV
	ADD	R0,@SP
	ADD	R0,2(SP)
2$:	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	RETURN
OVAFSP:	MOV	R5,(PC)+
R5SAV:	 .WORD	0
	RETURN
OVANAM:
.IF EQ	SYT$K
	BR	BDSWIT
.IFF
	CMPB	#':,@R5
	BNE	BDSWCH
	OADDR	FILST+OFLJN,R2
	MOV	R2,-(SP)
	MOV	#6,R3
1$:	OJSR	PC,ALPHNT
	BCC	BDNAM
	MOVB	@R5,(R2)+
	DEC	R3
	BEQ	2$
	TSTB	-(R5)
	BEQ	3$
	CMPB	#SLASH,@R5
	BEQ	3$
	CMPB	#SPACE,(R5)+
	BNE	1$
2$:	DEC	R5
3$:	MOV	(SP)+,R2
	CMP	#'F,@R2
	BEQ	BDNAM
	CMP	#'B,@R2
	BEQ	BDNAM
	RETURN
.ENDC
OVALEV:
.IF EQ	SYT$K
	BR	BDSWIT
.IFF
	CMP	#FJOBNM,JLVL
	BEQ	BDSWIT
	CMPB	#':,@R5
	BNE	BDSWCH
	CALL	SWVAL
	TST	@SP
	BLE	BDLVL
	CMP	#MXJBNM,@SP
	BLE	BDLVL
	MOV	(SP)+,JLVL
	RETURN
.ENDC
OVABUF:	CMPB	#':,@R5
	BNE	BDSWCH
	CALL	SWVAL
 OINST	MOV	(SP)+,FILST+OFBUF,,*
	RETURN
OVAPAU:
 OINST	INC	FILST+OFPSW,,*
	RETURN
OVATTY:
.IF NE	MTT$Y
	CMPB	#':,@R5
	BNE	BDSWCH
	CALL	SWVAL
	CMP	@SP,#TCBMAX*2
	BGE	BDSWCH
	OADDR	FILST+OFTTY,R2
	MOV	(SP)+,@R2
	COM	@R2
	RETURN
.ENDC
BDSWCH:	OJMP	BADCOM
BDSWIT:	OJMP	ILSWIT
.IF NE	SYT$K
BDNAM:	CALLR	BADNAM
BDLVL:	CALLR	BADLVL
.ENDC
SWVAL:	MOV	@SP,-(SP)
	MOV	R5,-(SP)
	OJSR	PC,DECNUM
	DEC	R5
	CMPB	1(R5),#PERIOD
	BEQ	1$
	TST	(SP)+
	MOV	@SP,R5
	OJSR	PC,OCTNUM
1$:	MOV	(SP)+,@SP
	BCS	BDSWCH
	ASL	@SP
	MOV	(SP)+,2(SP)
	RETURN
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<TERMINAL>
	FLGTXT		<TE_RMINAL>
	SWTDEF	<PAUSE>
	FLGTXT		<P_AUSE>
	SWTDEF	<BUFFER>
	FLGTXT		<B_UFFER>
	SWTDEF	<NAME>
	FLGTXT		<NA_ME>
	SWTDEF	<LEVEL>
	FLGTXT		<L_EVEL>
	.EVEN
	.ENABL	CRF
	NEXTL
.SBTTL	FRUN/SRUN (PART 2)
	OVERLAY
	OVCMD	FSRU2
.ENABL	LSB
 OINST	MOV	FILST+OFLEV,(PC)+,*
NWJBNM:	 .WORD	0
 OINST	MOV	FILST+OFLEV+2,-(SP),*
 OINST	MOV	FILST+OFLEV+12,(PC)+,*
NVAL:	 .WORD	0
 OINST	MOV	.USRBU,RELBUF,*
	CALL	RDBUF
	MOV	R4,R5
.IF NE	MMG$T
 OINST	MOV	66(R4),$VLY,,*
	BEQ	1$
 OINST	MOV	64(R4),$VLY,,*
1$:
.ENDC
	MOV	R5,R3
	ADD	#RSZ,R3
	MOV	(R3)+,R4
.IF EQ	MMG$T
	MOV	JSW(R5),OVFLG
	BIC	#^C<OVLY$>,(PC)+
OVFLG:	 .WORD	0
.IFF
	MOV	JSW(R5),-(SP)
	MOV	@SP,OVFLG
	BIC	#^C<OVLY$>,(PC)+
OVFLG:	 .WORD	0
	BIT	#VIRT$,(SP)+
	BEQ	2$
	CLR	@R3
	ADD	#1000,R4
	CLR	NVFLG
2$:
.ENDC
	MOV	(R3)+,R0
	TST	(R3)+
	MOV	#FMPUR,R2
	MOV	STK(R5),-(SP)
	SUB	(PC)+,@SP
NVFLG:	 .WORD	1000
.IF EQ	MMG$T
	BNE	4$
.IFF
	BEQ	3$
	TST	NVFLG
	BEQ	4$
	ADD	R2,@SP
	BR	4$
3$:
.ENDC
	ADD	R0,R2
4$:	MOV	R2,-(SP)
	MOV	R2,R1
	SUB	NVFLG,R1
	MOV	R1,FBASE
	CMP	#<^RREL>,(R3)+
	BEQ	6$
.IF NE MMG$T
	TST	NVFLG
	BEQ	5$
.ENDC
	KMRTMG	<Invalid file format>,,PFILE
.IF NE	MMG$T
5$:	MOV	USERTOP(R5),R4
	ADD	#2,R4
	CLR	@R3
	CMP	#<^RVIR>,@R5
	BNE	6$
	CLR	NVAL
	MOV	VIRTOP(R5),(PC)+
VHGH:	 .WORD	0
.ENDC
6$:	MOV	@R3,RELBLK
	ADD	R4,R2
	ROR	R4
	MOV	R4,OVSIZ
	MOV	R2,-(SP)
	ADD	OVSZ(R5),R2
	MOV	NVAL,R0
	ADD	R2,R0
.IF NE	MMG$T
	TST	NVFLG
	BNE	7$
	MOV	#77,R3
	MOV	R0,R1
	SUB	#FMPUR,R1
	ADD	R3,R1
	BIC	R3,R1
	MOV	R1,(PC)+
PVSIZ:	 .WORD	0
	ADD	#177,R0
	BIC	R3,R0
	ADD	#100,@SP
7$:
.ENDC
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	OJSR	PC,GETBLK
	BCC	8$
	SUB	R0,R5
	SUB	R0,10(SP)
	SUB	R0,RELBUF
8$:
.IF NE	MMG$T
	MOV	R4,R0
	ADD	#FMPUR,R0
	ADD	#77,R0
	BIC	#77,R0
	MOV	R0,STOVL
	ADD	PVSIZ,R0
	MOV	R0,(PC)+
RHLIM:	 .WORD	0
.ENDC
	MOV	#FMPUR/2,R0
	MOV	R4,R1
9$:	CLR	(R1)+
	DEC	R0
	BNE	9$
	ADD	R4,FBASE
	ADD	R4,@SP
	MOV	(SP)+,(PC)+
FRJOOF:	 .WORD	0
	MOV	(SP)+,R0
	MOV	(SP)+,R1
	BNE	10$
	MOV	R0,R1
10$:
.IF EQ	MMG$T
	ADD	R4,R1
	MOV	R1,R3
.IFF
	TST	NVFLG
	BNE	11$
	BIS	#WINDW$,@R4
	SUB	#FMPUR,R2
	MOV	VHGH,I.VHI(R4)
	CLR	FBASE
	CLR	R0
	BR	12$
11$:	ADD	R4,R1
.ENDC
	ADD	R4,R2
	ADD	R4,R0
	MOV	R0,STOVL
	SUB	NVFLG,R0
12$:
	MOV	STOVL,-(SP)
	MOV	R1,-(SP)
13$:	MOV	R5,R1
.IF EQ	MMG$T
	ADD	#V.TRAP,R1
	CLR	-(R3)
	MOV	STA(R5),-(R3)
	ADD	R0,@R3
	SUB	#6*2,R3
.IFF
	ADD	#V.MMU,R1
	MOV	R4,R3
	ADD	#I.RSAV+4,R3
	MOV	STA(R5),-(R3)
	ADD	R0,@R3
	MOV	#CMODE,-(R3)
	MOV	#200,-(R3)
	CALL	MOVVEC
	ADD	#V.BPT-<V.MMU+4>,R1
	CALL	MOVVC2
	ADD	#V.TRAP-<V.IOT+4>,R1
	MOV	@SP,I.SP(R4)
	MOV	@SP,I.SPSV(R4)
.ENDC
	CALL	MOVVC2
	MOV	(SP)+,@R3
	MOV	(R1)+,-(R3)
.IF NE	MTT$Y
	MOV	@R3,I.TERM(R4)
.ENDC
	CALL	MOVVEC
	MOV	R2,@R3
	SUB	#2,@R3
	MOV	R2,-(SP)
	ADD	NVAL,@SP
	CLR	-(R3)
.IF NE	MTT$Y
	OADDR	FILST+OFTCB+2,R2
	MOV	@R2,R2
	MOV	T.TFIL(R2),-(R3)
.ENDC
.IF EQ	MMG$T
	MOV	R3,I.SP(R4)
.ENDC
.DSABL	LSB
.ENABL	LSB
	MOV	R4,(PC)+
STMPUR:	 .WORD	0
	ADDR	IMPINI,R1
1$:	MOV	(R1)+,R2
	ADD	R4,R2
	MOV	(R1)+,@R2
	ADD	R4,@R2
	TST	@R1
	BNE	1$
	MOV	NWJBNM,I.JNUM(R4)
	MOV	#FCHNM,I.CNUM(R4)
	ADD	#<CHOVLY*5*2>+IMPSIZ-I.CSW,R2
	MOV	R2,R0
	MOV	#$CSW+<CHOVLY*5*2>-$RMON,R1
	ADD	@#SYSPTR,R1
.REPT	CHNWDS
	MOV	(R1)+,(R2)+
.ENDR
	TST	OVFLG
	BNE	2$
	CLR	@R0
2$:	MOV	R2,-(SP)
.IF NE	MMG$T
	ADD	#I.WNUM-<IMPSIZ+<FCHNM*5*2>>,R2
	MOV	#W.NNUM,(R2)+
	TST	NVFLG
	BNE	4$
	CLR	@SP
	MOV	R4,R0
	ADD	#I.RGN,R0
	MOV	R0,(R2)+
	CLR	(R0)+
	MOV	RHLIM,R1
	ASHC	#-6,R1
	MOV	R1,(R0)+
	MOV	#400,@R0
	CLR	(R2)+
	MOV	PVSIZ,R1
	MOV	R1,(R2)+
	ASHC	#-6,R1
	MOV	R1,(R2)+
	MOV	R1,R0
	MOV	STOVL,R1
	ASHC	#-6,R1
	MOV	R1,(R2)+
	MOV	#200,(R2)+
3$:	INCB	-1(R2)
	SUB	#200,R0
	BGT	3$
	SWAB	R0
	CLRB	R0
	ADD	#77406,R0
	MOV	R0,@R2
4$:
 OINST	TST	$VLY,,*
	BEQ	6$
	OJSR	PC,$VRAW
	MOV	R4,R1
	ADD	#<I.RGN+R.BLGH>,R1
	MOV	@#SYSPTR,R0
	ADD	#BKGND+I.RGN+R.BLGH-$RMON,R0
	MOV	#3,R2
5$:	MOV	@R0,(R1)+
	CLR	(R0)+
	DEC	R2
	BNE	5$
6$:
.ENDC
 OINST	MOV	@.CNTXT,R1,*
.IF NE	SYT$K
	CMP	#FJOBNM,I.JNUM(R4)
	BNE	7$
.ENDC
	MOV	I.MSG(R1),I.MSG(R4)
7$:	MOV	#I.NAME,R2
	ADD	R2,R1
	ADD	R4,R2
.REPT	4
	MOV	(R1)+,(R2)+
.ENDR
.DSABL	LSB
.ENABL	LSB
	ADDR	OVBK,R0
	MOV	R0,-(SP)
.IF NE	MMG$T
	TST	NVFLG
	BEQ	1$
.ENDC
	INC	@R0
1$:	MOV	#10*400+CHOVLY,-(R0)
	EMT	375
	BCS	FRERR
RELSET:	MOV	(PC)+,R1
FBASE:	 .WORD	0
	MOV	STOVL,R4
.IF NE	MMG$T
	TST	NVFLG
	BNE	2$
	MOV	(PC)+,(R4)+
	 BIC	R0,R0
	MOV	(PC)+,(R4)+
	 .ASTX
	ADD	#1000-4,R4
	TST	RELBLK
	BEQ	6$
2$:
.ENDC
	MOV	R4,(PC)+
SAVLOD:	 .WORD	0
	CLR	R5
RLROOT:	MOV	SAVLOD,STOVL
	CALL	RELSEG
	MOV	FRJOOF,STOVL
3$:	TST	FLG2
	BNE	6$
	CALL	GET2WD
	MOV	@SP,R0
	MOV	R3,@R0
	MOV	R2,OVSIZ
	BEQ	RLROOT
	MOV	#10*400+CHOVLY,-(R0)
	EMT	375
	BCS	FRERR
	CALL	RELSEG
	MOV	@SP,R0
	MOV	#11*400+CHOVLY,-(R0)
	EMT	375
	BCC	3$
	MOV	2(SP),R4
	BEQ	4$
	OJSR	PC,PUTBLK
4$:	KMRTMG	<Output error>,,PFILE
FRERR:	MOV	2(SP),R4
	BEQ	5$
	OJSR	PC,PUTBLK
5$:	OJMP	FIPERR
6$:	MOV	NWJBNM,@SP
	MOV	STMPUR,-(SP)
	OVLINK	STRTPG
.DSABL	LSB
.ENABL	LSB
1$:	SUB	R1,@R0
RELSEG:	CALL	GET2WD
	BCS	2$
	MOV	R3,R0
	ASL	R0
	ADD	STOVL,R0
	MOV	R2,@R0
	ASL	R3
	BCS	1$
	ADD	R1,@R0
	BR	RELSEG
RDBUF:	ADDR	RLIOBK,R0
	EMT	375
	BCS	FRERR
	ADD	#2,RELBLK
	MOV	RELBUF,R4
	MOV	R4,R5
	ASL	R0
	ADD	R0,R5
2$:	RETURN
.DSABL	LSB
GET2WD:	CALL	1$
	BCS	3$
	MOV	R2,R3
1$:	CMP	R4,R5
	BLO	2$
	CALL	RDBUF
2$:	MOV	(R4)+,R2
	CMP	#-2,R2
	BNE	3$
	INC	FLG2
	SEC
3$:	RETURN
MOVVC2:	MOV	PC,-(SP)
MOVVEC:	MOV	(R1)+,-(R3)
	BEQ	10$
	ADD	R0,@R3
10$:	MOV	(R1)+,-(R3)
.IF NE	MMG$T
	BIS	#CMODE,@R3
.ENDC
	RETURN
IMPINI:	.WORD	I.QHDR,I.QUE
	.WORD	I.TID, I.JID
	.WORD	I.SCHP,I.SYCH
	.WORD	I.IRNG,I.ITOP+2
	.WORD	I.IPUT,I.ITOP+2
	.WORD	I.IGET,I.ITOP+2
	.WORD	I.ITOP,I.ITOP+2+TTYIN
	.WORD	I.OPUT,I.OTOP+2
	.WORD	I.OGET,I.OTOP+2
	.WORD	I.OTOP,I.OTOP+2+TTYOUT
.IF NE	MMG$T
.IF NE	FPU$11
	.WORD	I.FPSA,I.FSAV
.ENDC
	.WORD	I.WPTR,I.WNUM
.ENDC
	.WORD	I.CSW, IMPSIZ
	.WORD	0
RLIOBK:	.BYTE	CHOVLY,10
RELBLK:	.WORD	0
RELBUF:	.WORD	0,1000,0
OVIOBK:	.BYTE	CHOVLY,10
OVBK:	.WORD	0
STOVL:	.WORD	0
OVSIZ:	.WORD	0
	.WORD	0
FLG2:	.WORD	0
.ENDC
$$$EDIT	= 0
$$$FORT	= 1
$$$WILD	= 2
.IF NE	SET$$
	OVERLAY
.SBTTL	SET
	OVCMD	SET
.ENABL	LSB
	MOV	@#SYSPTR,R0
.IF EQ	MTT$Y
 .IF NE	BF
	MOV	TTCNFG-$RMON(R0),SET58$
	MOVB	TTWIDTH-$RMON(R0),SET59$
 .ENDC
.IFF
	MOV	BKCNSL-$RMON(R0),R4
	MOV	@R4,SET58$
	MOV	T.WID(R4),SET59$
.ENDC
.IF EQ	MMG$T
	MOV	CONFIG-$RMON(R0),R2
	BIC	#^C<USR$>,R2
	MOV	R2,SET62$
.ENDC
	MOV	CONFG2-$RMON(R0),R2
	BIC	#^C<XITSW$>,R2
	MOV	R2,SET63$
	CALL	33$
	ADDR	SETMOF,R1
1$:	CMP	@R2,(R1)+
	BEQ	2$
	TST	@R1
	BEQ	4$
	ADD	@R1,R1
	BR	1$
2$:	CALL	33$
	TST	(R1)+
	ADD	@R1,R0
3$:	TST	(R1)+
	TST	@R1
	BEQ	5$
	CMP	(R1)+,@R2
	BNE	3$
	MOVB	@R1,@R0
	RETURN
4$:	CLR	(PC)+
UNUM:	.WORD	0
	CMP	#<^RTER>,@R2
	BEQ	11$
	ADDR	SETKMO,R4
	CMP	#<^RKMO>,@R2
	BEQ	13$
	ADD	#SETXIT-SETKMO,R4
	CMP	#<^REXI>,@R2
	BEQ	13$
	TST	2(R2)
	BNE	5$
	ADD	#SETUSR-SETXIT,R4
	CMP	@R2,#<^RUSR>
	BEQ	13$
	.BR	NXTINS
NXTINS:	ROR	UNUM
	MOV	@R2,R0
	MOV	#120000,R1
	BR	8$
7$:	CLC
	ROR	R1
8$:	SUB	R1,R0
	BHI	9$
	BEQ	10$
	ADD	R1,R0
9$:	CMP	R1,#120
	BHIS	7$
	CMP	R0,#36
	BLO	5$
	CMP	R0,#45
	BHI	5$
	SUB	R0,@R2
	SUB	#36,R0
	MOV	R0,UNUM
10$:	JSR	R4,36$
	 .WORD	':
	CMP	@R2,#<^RTT >
	BNE	12$
11$:	ADDR	SETTTY,R4
	BR	13$
12$:	MOV	@#SYSPTR,R0
	ADD	HSUFFX-$RMON(R0),@R2
	MOV	#<^RSY >,-(R2)
	MOV	#<^RSYS>,6(R2)
	MOV	#3*400+CHOVLY,R0
	EMT	374
	MOV	R2,R0
	OJSR	PC,COPYFN
	.LOOKUP	CHOVLY,R2
	BCS	27$
 OINST	MOV	.USRBUF,R4,*
	CLR	@<.BLKEY-OVLY>-<.+4-OVLYST>(PC)
	CLR	R0
	.READW	CHOVLY,R4,#512.
	BCS	29$
	ADD	#400,R4
13$:	MOVB	-(R5),R0
	SWAB	R0
	CLRB	R0
	BISB	-(R5),R0
	BIC	#20040,R0
	SUB	#"ON,R0
	BEQ	14$
	CMPB	(R5)+,(R5)+
	BR	15$
14$:	CALL	35$
15$:	CALL	33$
	MOV	R4,R1
	BR	18$
5$:	BR	555$
16$:	TST	(R1)+
17$:	CMP	(R1)+,-(R2)
18$:	MOV	(R1)+,R3
	BEQ	30$
	CMP	(R2)+,(R1)+
	BNE	16$
	CMP	@R2,(R1)+
	BNE	17$
	MOV	R4,R2
	MOV	@R1,R1
	BMI	19$
	TST	R0
	BEQ	30$
19$:	TST	R0
	BNE	20$
	CMP	(R2)+,(R2)+
20$:	ASL	R1
	BPL	25$
	JSR	R4,36$
	 .WORD	'=
21$:	MOV	R5,R0
	DEC	R0
	ASL	R1
	SEC
	BPL	22$
	CLC
22$:	OJSR	PC,CVTNUM
	CMP	R5,R0
	BEQ	30$
	ASR	R1
	CMPB	@R5,#PERIOD
	BNE	24$
	BIT	#40000,R1
	BEQ	23$
	BIC	#40000,R1
	MOV	R0,R5
	INC	R5
	TST	(SP)+
	BR	21$
23$:	DEC	R5
24$:	MOV	(SP)+,R0
	CALL	34$
25$:	BIC	#140000,R1
	ADD	R1,R2
	MOV	UNUM,R1
	CALL	@R2
	BR	251$
	BR	261$
251$:	BCS	555$
	TSTB	-1(R5)
	BEQ	26$
	JSR	R4,36$
	 .WORD	',
	BR	13$
26$:
 OINST	CMP	.USRBUF,R4,*
	BHI	31$
 OINST	MOV	.USRBUF,R4,*
	CLR	R0
	.WRITW	CHOVLY,R4,#512.
261$:	BCC	28$
	KMRTMG	<SY: Write-locked>,UNCON$,PFILE
27$:	OJMP	NOTFND
29$:	OJMP	FIPERR
555$:	OJMP	BADCOM
30$:	KMEROR	<Invalid set parameter>
31$:	MOV	@#SYSPTR,R0
.IF EQ	MMG$T
	BIC	#USR$,CONFIG-$RMON(R0)
	BIS	SET62$,CONFIG-$RMON(R0)
.ENDC
	BIC	#<XITSW$>,CONFG2-$RMON(R0)
	BIS	SET63$,CONFG2-$RMON(R0)
.IF EQ	MTT$Y
.IF NE	BF
	MOV	SET58$,TTCNFG-$RMON(R0)
	MOVB	SET59$,TTWIDT-$RMON(R0)
	ADD	#LISTFB-$RMON,R0
	MOV	#100000,R1
	BIT	#FBTTY$,SET58$
	BNE	32$
	BIS	R1,(R0)+
	BIS	R1,(R0)+
.IF NE	SYT$K
	BIS	R1,(R0)+
.ENDC
	RETURN
32$:	BIC	R1,(R0)+
	BIC	R1,(R0)+
.IF NE	SYT$K
	BIC	R1,(R0)+
.ENDC
.ENDC
.IFF
	MOV	BKCNSL-$RMON(R0),R1
	MOV	SET58$,@R1
	MOV	SET59$,T.WID(R1)
.ENDC
28$:	RETURN
33$:	OADDR	DEVSTS+2,R2
	MOV	R0,-(SP)
	OJSR	PC,GETNAM
	BEQ	555$
	MOV	(SP)+,R0
34$:	INC	R5
35$:	CMPB	-(R5),#<SPACE>
	BEQ	35$
	INC	R5
	RETURN
36$:	CMPB	(R4)+,-(R5)
	BNE	38$
37$:	CMPB	-(R5),#<SPACE>
	BEQ	37$
38$:	CMPB	(R4)+,(R5)+
	RTS	R4
.DSABL	LSB
.ENABL	LSB
SETUSR:	.WORD	USR$
	.RAD50	/SWAP  /
	.WORD	<1$-SETUSR>/2+100000
	.WORD	0
1$:
.IF EQ	MMG$T
	CLR	R3
	NOP
	MOV	R3,(PC)+
SET62$:	 .WORD	0
	RETURN
.IFF
	SEC
	RETURN
	RETURN
.ENDC
SETXIT:	.WORD	XITSW$
	.RAD50	/SWAP  /
	.WORD	<2$-SETXIT>/2+100000
	.WORD	0
2$:	CLR	R3
	NOP
	MOV	R3,(PC)+
SET63$:	.WORD	0
	RETURN
SETKMO:
5$:	.WORD	IFIND
	.RAD50	/IND   /
	.WORD	<SETATS-5$>/2+100000
	.WORD	0
SETTTY:
3$:	.WORD	IFEKO$
	.RAD50	/QUIET /
	.WORD	<SETTTQ-3$>/2+100000
	.WORD	'\
	.RAD50	/HOLD  /
	.WORD	<SETTTH-3$>/2+100000
.IF NE	MTT$Y
	.WORD	TCBMAX
	.RAD50	/CONSOL/
	.WORD	<SETCON-3$>/2+40000
.ENDC
.IF NE	BF
	.WORD	FBTTY$
	.RAD50	/FB    /
	.WORD	<SETTTS-3$>/2+100000
.ENDC
.IF NE	BF!MTT$Y
	.WORD	HWTAB$
	.RAD50	/TAB   /
	.WORD	<SETTTS-3$>/2+100000
	.WORD	VT05$
	.RAD50	/SCOPE /
	.WORD	<SETTTS-3$>/2+100000
	.WORD	FORM$
	.RAD50	/FORM  /
	.WORD	<SETTTS-3$>/2+100000
	.WORD	CRLF$
	.RAD50	/CRLF  /
	.WORD	<SETTTS-3$>/2+100000
	.WORD	PAGE$
	.RAD50	/PAGE  /
	.WORD	<SETTTS-3$>/2+100000
	.WORD	30.
	.RAD50	/WIDTH /
	.WORD	<SETTTW-3$>/2+40000
.IFF
	.WORD	NOSCOP-SCOP
	.RAD50	/SCOPE /
	.WORD	<SETSCO-3$>/2+100000
.ENDC
.DSABL	LSB
SETATS:
SETTTQ:	BR	1$
	NOP
	BIC	R3,@<.STATWD-OVLY>-<.+4-OVLYST>(PC)
	RETURN
1$:	BIS	R3,@<.STATWD-OVLY>-<.+4-OVLYST>(PC)
	RETURN
SETTTH:	DEC	R3
	NOP
	MOVB	R3,2$
	ADDR	1$,R0
	.PRINT
	RETURN
1$:	.BYTE	33
2$:	.BYTE	0
	.BYTE	0
	.EVEN
.IF NE	MTT$Y
.ENABL	LSB
SETCON:	MOV	R0,-(SP)
	CMP	R0,R3
	BHIS	6$
	MOV	@#SYSPTR,R2
	ASL	R0
	ADD	R2,R0
	MOV	TCBLST-$RMON(R0),R0
	TST	T.CSR(R0)
	BEQ	6$
..CRMT	== .+2
	BIT	#REMOT$,@R0
	BNE	7$
	ADD	#BKCNSL-$RMON,R2
	MOV	@R2,R3
	CMP	R0,R3
	BEQ	4$
.IF NE	BF
	TST	T.STAT(R0)
	BMI	6$
.ASSUME	CONSL$	EQ	100000
	TST	T.OWNR(R0)
	BNE	6$
1$:	TSTB	I.OCTR-I.CNSL(R2)
	BNE	1$
	OSPL	7
.IFF
2$:	TSTB	T.OCTR(R3)
	BNE	2$
	OINTOF	5$
.ENDC
	MOV	R0,@R2
	MOV	@#SYSPTR,R0
	ADD	#$TCFIG-$RMON,R0;* -> off. containing addr of T.CNFG of term
	MOV	@R2,@R0
	MOV	@R2,R0
	MOV	@SP,I.CLUN-I.CNSL(R2)
	BIS	#<FBTTY$!PAGE$>,@R0
	MOV	@R0,SET58$
	MOV	T.WID(R0),SET59$
	MOV	T.STAT(R3),R1
	BIC	#^C<CONSL$!SHARE$>,R1
	BIC	R1,T.STAT(R3)
	BIS	R1,T.STAT(R0)
	MOV	T.TFIL(R0),@#TTFILL
	MOV	T.OWNR(R3),T.OWNR(R0)
	CLR	T.OWNR(R3)
.IF NE	BF
.IF EQ	SYT$K
	MOV	FCNTXT-BKCNSL(R2),R3
	BEQ	4$
	ASL	R1
	BEQ	4$
.ASSUME	CONSL$	EQ	100000
.ASSUME	SHARE$	NE	100000
	MOV	R0,I.CNSL(R3)
	MOV	@SP,I.CLUN(R3)
.IFF
	MOV	T.CNT(R3),T.CNT(R0)
	CLR	T.CNT(R3)
	ASL	R1
	BEQ	4$
.ASSUME	CONSL$	EQ	100000
.ASSUME	SHARE$	NE	100000
	ADD	#$IMPUR+MXJBNM+2-BKCNSL,R2
3$:	MOV	-(R2),R1
	BEQ	3$
	INC	R1
	BEQ	4$
	CMP	I.CNSL-1(R1),R3
	BNE	3$
	MOV	R0,I.CNSL-1(R1)
	MOV	@SP,I.CLUN-1(R1)
	BR	3$
.ENDC
.ENDC
4$:	TST	(SP)+
.IF NE	BF
	OSPL	0
	RETURN
.IFF
	MOV	@SP,-(SP)
	CLR	2(SP)
5$:	RTI
.ENDC
6$:	KMEROR	<Invalid terminal>
7$:	KMEROR	<Console must be local>
.DSABL	LSB
.ENDC
.IF NE	BF!MTT$Y
.ENABL	LSB
SETTTS:	BR	1$
	NOP
	BIC	R3,(PC)+
SET58$:	 .WORD	0
	RETURN
1$:	BIS	R3,SET58$
	RETURN
SETTTW:	MOVB	R0,(PC)+
SET59$:	 .WORD	0
	CMPB	R0,R3
	RETURN
.DSABL	LSB
.IFF
.ENABL	LSB
SETSCO:	CLR	R3
	NOP
	ADDR	SCOP,R3,ADD
	MOV	@#SYSPTR,R1
	ADD	#SCOP$2-$RMON,R1
1$:	MOV	(R3)+,(R1)+
	CMP	@R3,#-1
	BNE	1$
	TST	(R3)+
	MOV	(R3)+,SCOP$1-SCOP$2-SCOP2(R1)
	MOV	@R3,TTCNFG-SCOP$2-SCOP2(R1)
	RETURN
SCOP:	.WORD	4367
	.WORD	ECHO-SCOP$3
	.BYTE	BS,SPACE
	MOV	#BS,R4
	NOP
	NOP
SCOP1:	.WORD	-1
	.WORD	401
	.WORD	VT05$
NOSCOP:	CMPB	R0,@R1
	BEQ	2$
	.WORD	4767
	.WORD	TTORUB-SCOP$3-4
	MOV	R0,@R1
2$:	MOVB	@(R5),R4
	.WORD	-1
	.WORD	4767
	.WORD	0
SCOP2=SCOP1-SCOP
.DSABL	LSB
.ENDC
.ENABL	LSB
SETMOF:	.RAD50	/EDI/
	.WORD	1$-.
	.WORD	PROGDF-$RMON
	.RAD50	/EDI/
	.WORD	$$EDIT
	.RAD50	/TEC/
	.WORD	$$TECO
	.RAD50	/KED/
	.WORD	$$KED
	.RAD50	/K52/
	.WORD	$$K52
.IF NE	MMG$T
	.RAD50	/KEX/
	.WORD	$$KEX
.ENDC
	.WORD	0
1$:	.RAD50	/WIL/
	.WORD	2$-.
	.WORD	PROGDF+2-$RMON
	.RAD50	/IMP/
	.WORD	1
	.RAD50	/EXP/
	.WORD	0
	.WORD	0
2$:	.RAD50	/ERR/
	.WORD	0
	.WORD	ERRLEV-$RMON
	.RAD50	/WAR/
	.WORD	WARN$!ERROR$!FATAL$!UNCON$
	.RAD50	/ERR/
	.WORD	ERROR$!FATAL$!UNCON$
	.RAD50	/FAT/
	.WORD	FATAL$!UNCON$
	.RAD50	/SEV/
	.WORD	UNCON$
	.RAD50	/NON/
	.WORD	200!UNCON$
	.WORD	0
.ENDC
.DSABL	LSB
.SBTTL	INSTALL
.IF NE	B$$!E$$!D$$!INST$$
	OVERLAY
.ENDC
.IF NE	B$$
	OVCMD	B
	CALLR	OB
.ENDC
.IF NE	D$$
	OVCMD	D
	CALLR	OD
.ENDC
.IF NE	E$$
	OVCMD	E
	CALLR	OE
.ENDC
.IF NE	INST$$
	SYNTAX	INSTALL
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	INSTALL
 ENDNO
 NOS
 ENDS
	OVCMD	INSTALL
	ITBLE	0
	OJSR	PC,INITIT
.ENABL	LSB
OINSTAL:CALL	NMCK
	CMP	@R2,#<^RBA >
	BEQ	10$
	CMP	@R2,#<^RTT >
	BEQ	10$
	MOV	@R2,-(SP)
	.DSTAT	R2,R2
	BCC	25$
5$:	TST	(R1)+
	BEQ	FNDSLT
	TST	(R3)+
	CMP	R3,#$SLOT*2
	BLO	5$
	KMEROR	<No room>
10$:	OJMP	BADHAN
15$:	BR	OINSTALL
FNDSLT:
 OINST	MOV	.SYIND,R4,*
	MOV	@R4,-(SP)
 OINST	ADD	.$PNAM,@SP,*
	MOVB	SYUNIT+1-SYINDX(R4),R4
	ADD	#<^R  0>,R4
	ADD	@(SP)+,R4
	MOV	R4,(R2)+
	MOV	@SP,@R2
	MOV	@#SYSPTR,R0
	ADD	HSUFFX-$RMON(R0),(R2)+
	CLR	(R2)+
	MOV	#<^RSYS>,@R2
	SUB	#6,R2
	MOV	#3*400+CHOVLY,R0
	EMT	374
	MOV	R2,R0
	MOV	R3,-(SP)
	OJSR	PC,COPYFN
	MOV	(SP)+,R3
	.LOOKUP	CHOVLY
	BCS	30$
 OINST	MOV	.USRBUF,R4,*
	CLR	@<.BLKEY-OVLY>-<.+4-OVLYST>(PC)
	CLR	R0
	.READW	CHOVLY,R4,#256.
	BCS	35$
	MOV	@#SYSPTR,R0
	CMPB	H.GEN(R4),SYSGEN-$RMON(R0)
	BNE	40$
	ADD	R3,R0
	MOV	R0,-(SP)
	MOV	R4,R1
	ADD	#176,R1
	ADDR	TRPTST,R3
	ADDR	50$,R0
	MOV	R0,-(SP)
	.TRPSET	,R3,CODE=SET
	TST	@(R1)+
	BCS	45$
	TST	@R1
	BEQ	20$
	MOV	R5,-(SP)
	MOV	R4,-(SP)
	CALL	@R1
	BCS	45$
	MOV	(SP)+,R4
	MOV	(SP)+,R5
20$:	MOV	(SP)+,R0
	.TRPSET	,#0
	OADDR	BLOCK,R2
	.SAVEST	CHOVLY,R2
	MOV	(SP)+,R0
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	ADD	#H.SIZ,R4
	MOV	(R4)+,$HSIZE-$RMON(R0)
	MOV	(R4)+,$DVSIZ-$RMON(R0)
	MOV	(R4)+,$STAT-$RMON(R0)
	MOV	2(R2),$DVREC-$RMON(R0)
	INC	$DVREC-$RMON(R0)
	CLR	$ENTRY-$RMON(R0)
	MOV	(SP)+,$PNAME-$RMON(R0)
	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	CMPB	@R5,#COMMA
	BEQ	15$
	TSTB	@R5
	BEQ	PCRTS
	OJMP	BADCOM
25$:	KMRTMG	<Already installed/assigned>,WARN$
30$:	OJMP	NOTFND
35$:	OJMP	FIPERR
40$:	KMEROR	<Conflicting SYSGEN options>
45$:	KMRTMG	<Invalid device installation>,,PFILE
50$:	.BLKW	2
TRPTST:	BIS	#1,2(SP)
	RTI
.DSABL	LSB
	.ENABL	LSB
NMCK:	MOV	#<-3>,R3
5$:	CMPB	#<'a>,-(R5)
	BHI	10$
	CMPB	#<'z>,@R5
	BLO	10$
	BICB	#<40>,@R5
10$:	MOVB	@R5,R2
	SUB	#<'Z+1>,R2
	ADD	#<'Z+1-'A>,R2
	INC	R3
	BEQ	20$
	BCS	5$
15$:	OJMP	BADCOM
20$:	BCS	15$
	SUB	#<'9+1-'A>,R2
	ADD	#<'9+1-'0>,R2
	BCS	15$
	ADD	#<3>,R5
	OADDR	DEVSTS,R2
	OJSR	PC,GETNAM
	OJSR	PC,OPTCOL
 OINST	MOV	.$PNAM,R1,*
PCRTS:
 OINST	MOV	@R2,INPFN,,*
	RETURN
	.DSABL	LSB
.ENDC
.SBTTL	BASE, EXAMINE
.ENABL	LSB
.IF NE	B$$
OB:	CALL	EBDSB1
	TSTB	@R5
	BNE	11$
	BIC	#1,@SP
	MOV	(SP)+,<BASE-OVLY>-<.+4-OVLYST>(PC)
.ENDC
.IF NE	B$$!E$$
1$:	RETURN
.ENDC
.IF NE	E$$
OE:	CALL	EBDSUB
	BIC	#1,@SP
	CLR	R1
	TSTB	@R5
	BEQ	2$
	CMPB	#MINUS,@R5
	BNE	11$
	OJSR	PC,OCTNUM
	TSTB	@R5
	BNE	11$
	MOV	(SP)+,R1
	SUB	@SP,R1
	BLO	11$
	ROR	R1
2$:	ADD	(SP)+,R3
3$:	MOV	#10,R4
4$:	CALL	ADTRAN
	TST	(R3)+
	MOV	@R2,R2
OPRINT:	MOV	#30,R0
	SEC
5$:	ROL	R2
	ROLB	R0
	.TTYOUT
	MOV	#206,R0
6$:	ASL	R2
	BEQ	7$
	ROLB	R0
	BCS	6$
	BR	5$
7$:	DEC	R1
	BMI	1$
	.TTYOUT	#SPACE
	DEC	R4
	BNE	4$
	OJSR	PC,KCRLF
	BR	3$
.ENDC
.IF NE	D$$
.SBTTL	DEPOSIT
OD:	CALL	EBDSUB
	ADD	(SP)+,R3
	BIC	#1,R3
	CMPB	@R5,#EQUALS
	BEQ	9$
8$:	TSTB	@R5
	BEQ	SAVEVC
	BR	11$
9$:	MOV	R3,R2
	MOV	@#SYSPTR,R0
	ADD	#CCB-$RMON,R0
	OJSR	PC,SETBIT
	CALL	ADTRAN
	CMP	R3,R2
	BEQ	10$
 OINST	INC	SAVSWT,,*
10$:	OJSR	PC,OCTNUM
	MOV	(SP)+,@R2
	TST	(R3)+
	CMPB	@R5,#COMMA
	BEQ	9$
	BR	8$
.ENDC
.IF NE	D$$!E$$!B$$
11$:	OJMP	BADCOM
EBDSUB:
 OINST	MOV	#-1,BLOKWG,,*
 OINST	MOV	BASE,R3,*
EBDSB1:	CMPB	@R5,#SPACE
	BEQ	12$
	TSTB	@R5
	BNE	11$
12$:	MOV	@SP,-(SP)
	OJSR	PC,OCTNUM
	MOV	(SP)+,2(SP)
	RETURN
.ENDC
.DSABL	LSB
.IF NE	D$$!E$$
.SBTTL	ADTRAN & SAVEVC
.ENABL	LSB
ADTRAN:	MOV	@#SYSPTR,R2
	CMP	R3,SYSLOW-$RMON(R2)
..EMON	== .
	BHIS	4$
	BHIS	1$
	OADDR	KMON,R2
	BIC	#777,R2
	SUB	R3,R2
	BLOS	2$
1$:	MOV	R3,R2
	RETURN
2$:	OADDR	SYSIOB-2,R5,PUSH
	NEG	R2
	CLRB	R2
	SWAB	R2
	ASR	R2
	CMP	R2,(R5)+
	BEQ	3$
	CALL	SAVEVC
	NEG	2(R5)
	MOV	R2,R0
	MOV	R0,<BLOKWG-OVLY>-<.+4-OVLYST>(PC)
	OJSR	PC,SYSK
3$:	MOV	R3,R2
	BIC	#^C<777>,R2
	ADD	@R5,R2
	BR	5$
4$:	KMEROR	<Address>
SAVEVC:	MOV	#-400,<SYSIOB+2-OVLY>-<.+6-OVLYST>(PC)
	OADDR	SAVSWT,R5,PUSH
	TST	(R5)+
	BEQ	5$
	MOV	(R5)+,R0
	OJSR	PC,SYSK
5$:	MOV	(SP)+,R5
	RETURN
.DSABL	LSB
.ENDC
.IF NE	SUSP$$!RESU$$!ASSI$$!DEAS$$!ABOR$$!HELP$$
	OVERLAY
.ENDC
.SBTTL	SUSPEND / RESUME
.IF NE	BF
.IF NE	ABOR$$
	OVCMD	ABORT
	CALLR	ABO1
.ENDC
.ENDC
.IF NE	SUSP$$
	OVCMD	SUSPEND
	CALLR	SUSP1
.ENDC
.IF NE	RESU$$
	OVCMD	RESUME
	CALLR	RESU1
.ENDC
.IF NE	ASSI$$
	OVCMD	ASSIGN
	CALLR	ASSIG1
.ENDC
.IF NE	DEAS$$
	OVCMD	DEASSIGN
	CALLR	DEASS1
.ENDC
.IF NE	HELP$$
	OVCMD	HELP
	CALLR	HELP1
.ENDC
.IF NE	DISM$$
	SYNTAX	DISMOUNT
	PROMPT	$DEVICE
	REQBLNK
	END
 SWITS	DISMOUNT
 ENDNO
 NOS
 ENDS
	OVCMD	DISMOUNT
	MOV	R5,-(SP)
	ITBLE	0
	OJSR	PC,INITIT
	MOV	(SP)+,R5
	CALL	GTNAM
	BCS	1$
	TSTB	@R5
	BNE	1$
	CLR	R5
	BR	LDCOM
1$:	OJMP	BADCOM
.ENDC
.IF NE	MOUN$$
	.SBTTL	MOUNT command
	SYNTAX	MOUNT
	PROMPT	$DEVICE
	SCALL	GSWIT,<1>
	REQBLNK
	INSPEC
	SCALL	GSWIT,<1>
	PROMPT	$FILEE
	SCALL	RINSPC,<1>
	EOLGOT	MNTB
	SCALL	RINSPC,<1>
MNTB:	END
 SWITS	MOUNT
SWIT	WRITE			1	-	-	W
 ENDNO
 NOS
SWIT	NOWRITE			1	-	-	R
 ENDS
	.ENABL	LSB
	OVCMD	MOUNT
	CLR	(PC)+
SVOPT:	.WORD	0
	MOV	R5,-(SP)
	ITBLE	3
	OJSR	PC,INITIT
 OINST	CMPB	NSWITS,#1,*
	BHI	6$
	BNE	1$
	OADDR	STRANT,R2
	MOVB	@R2,SVOPT
1$:	MOV	(SP)+,R5
	CALL	CKOPT
	CALL	GTNAM
	BCS	6$
	CALL	CKOPT
.ENDC
.IF NE MOUN$$!DISM$$
LDCOM:	MOV	@R2,R3
 OINST	MOV	@R2,INPFN,,*
	.DSTAT	R2,R2
	BCS	14$
	CMPB	@R2,#46
	BNE	14$
	MOV	R3,@R2
2$:	SUB	#<^RLD >,R3
	BEQ	7$
	SUB	#<^R  0>,R3
	BLO	3$
	CMP	R3,#7
	BLOS	7$
3$:	MOV	#$SLOT,R0
	ADD	#$UNAM2+<2*$SLOT>-$RMON,R4
4$:	CMP	@R2,-(R4)
	BEQ	5$
	DEC	R0
	BNE	4$
5$:	MOV	$UNAM1-$UNAM2(R4),R3
	BR	2$
6$:	OJMP	BADCOM
7$:	ADD	#60,R3
	MOV	#522,R1
	TST	R5
	BEQ	13$
.IF NE	MOUN$$
8$:	MOVB	-(R5),(R1)+
	BEQ	11$
	CMPB	#<SPACE>,@R5
	BEQ	9$
	CMPB	#'/,@R5
	BNE	8$
	TSTB	-(R1)
9$:	CALL	CKOPT
	TSTB	@R5
	BEQ	12$
	MOV	R5,(PC)+
BSAV:	.WORD	0
	CALL	GTNAM
	BCS	6$
	MOV	R5,R2
	CALL	CKOPT
	TSTB	@R5
	BNE	6$
	MOV	BSAV,R5
	TSTB	-(R1)
	ADDR	SLSHA,R0
	.REPT	3
	MOVB	(R0)+,(R1)+
	.ENDR
10$:	MOVB	-(R5),(R1)+
	CMP	R5,R2
	BNE	10$
11$:	TSTB	-(R1)
12$:	TST	SVOPT
	BEQ	13$
	MOVB	#'/,(R1)+
	MOVB	SVOPT,(R1)+
	MOVB	#':,(R1)+
	MOVB	R3,(R1)+
.ENDC
13$:	ADDR	SLSHL,R0
	.REPT	5
	MOVB	(R0)+,(R1)+
	.ENDR
	MOVB	R3,(R1)+
	CLRB	@R1
	MOV	#500,R1
	MOV	#<^RSY >,(R1)+
	MOV	#<^RLD >,@R1
	MOV	@#SYSPTR,R4
	ADD	HSUFFX-$RMON(R4),(R1)+
	CLR	(R1)+
	MOV	#<^RSYS>,(R1)+
	CLR	(R1)+
	CLR	@R1
	CALLR	CHANTO
14$:	OJMP	BADHAN
CKOPT:	TST	SVOPT
	BEQ	16$
	CMPB	#'/,@R5
	BEQ	15$
	CMPB	#'/,-1(R5)
	BNE	16$
15$:	TSTB	@R5
	BEQ	16$
	CMPB	#<SPACE>,-(R5)
	BNE	15$
16$:	RETURN
.DSABL	LSB
SLSHL:	.ASCIZ	%/$/L:%
.IF NE	MOUN$$
SLSHA:	.ASCIZ	%/A:%
.ENDC
.ENDC
.IF NE	DEAS$$!ASSI$$
.SBTTL	ASSIGN, DEASSIGN
.ENABL	LSB
	.ENABL	LSB
DEASS1:	CALL	ADSUB
	BNE	2$
	ADD	#$UNAM2-$RMON,R4
	MOV	#$SLOT,R1
1$:	CLR	(R4)+
	DEC	R1
	BNE	1$
	RETURN
2$:	CLR	(R2)+
	BR	PERNM
	.DSABL	LSB
	SYNTAX	ASSIGN
	PROMPT	$PHYSICAL
	REQBLNK
	INSPEC
	PROMPT	$LOGICAL
	REQBLNK
	END
 SWITS	ASSIGN
 ENDNO
 NOS
 ENDS
	.ENABL	LSB
ASSIG1:	MOV	R5,-(SP)
	ITBLE	2
	OJSR	PC,INITIT
	MOV	(SP)+,R5
	CALL	GTNAM
	BCS	1$
	TST	(R2)+
	CMPB	@R5,#SPACE
	BEQ	PERNM
1$:	OJMP	BADCOM
PERNM:	CALL	GTNAM1
	BCS	1$
	TSTB	@R5
	BNE	1$
 OINST	MOV	@R2,INPFN,,*
	CMP	@R2,#<^RSY >
..ASSY	== .
	BEQ	1$
	MOV	-2(R2),R5
	BEQ	6$
	CMP	@R2,#<^RBA >
	BEQ	HANERK
	MOV	R4,R0
	ADD	#$UNAM2-$RMON,R0
	MOV	#$SLOT+3,R1
2$:	DEC	R1
	BEQ	3$
	CMP	R5,(R0)+
	BNE	2$
	MOV	$UNAM1-$UNAM2-2(R0),R5
3$:	MOV	R4,R0
	ADD	#$PNAME-$RMON,R0
	MOV	#$SLOT,R1
4$:	MOV	R5,R3
 OINST	MOV	R5,INPFN,,*
	SUB	(R0)+,R3
	BLO	5$
	BEQ	6$
	SUB	#<^R  0>,R3
	BLO	5$
	CMP	R3,#7
	BLOS	6$
5$:	DEC	R1
	BNE	4$
HANERK:	OJMP	BADHAN
6$:	MOV	#$SLOT,R1
	ADD	#$UNAM2+<2*$SLOT>-$RMON,R4
	CLR	R3
7$:	CMP	@R2,-(R4)
	BEQ	10$
	TST	@R4
	BNE	8$
	MOV	R4,R3
8$:	DEC	R1
	BNE	7$
	TST	R5
	BEQ	11$
	MOV	R3,R4
	BEQ	12$
	MOV	@R2,@R4
9$:	MOV	R5,$UNAM1-$UNAM2(R4)
	RETURN
10$:	TST	R5
	BNE	9$
	CLR	@R4
	RETURN
11$:	KMRTMG	<Logical name not found>,WARN$
12$:	KMEROR	<No room>
.DSABL	LSB
.ENDC
.IF NE	MOUN$$!DISM$$!ASSI$$!DEAS$$
ADSUB:	OADDR	BLOCK,R2
	MOV	@#SYSPTR,R4
	TSTB	@R5
	RETURN
GTNAM:	CALL	ADSUB
GTNAM1:	OJSR	PC,GETNAM
	BEQ	13$
	OJSR	PC,OPTCOL
	TST	2(R2)
	BNE	13$
	TST	(PC)+
13$:	SEC
	RETURN
.ENDC
.IF NE	SUSP$$!RESU$$
.IF EQ	SYT$K
SUSP1:	TST	(PC)+
RESU1:	SEC
	MOVB	@R5,R1
	BEQ	SPNRSU
	OJMP	BADCOM
SPNRSU:	MOV	@#SYSPTR,R1
	MOV	FCNTXT-$RMON(R1),R2
	BEQ	2$
	BCS	1$
	BIS	#KSPND$,I.BLOK(R2)
	RETURN
1$:	BIC	#KSPND$,I.BLOK(R2)
	MOVB	#MXJBNM/2+200,INTACT-$RMON(R1)
	.EXIT
2$:	KMEROR	<No foreground job>
.IFF
SUSP1:	CALL	GLJNM
	BIS	#KSPND$,I.BLOK(R5)
	RETURN
RESU1:	CALL	GLJNM
	BIC	#KSPND$,I.BLOK(R5)
	MOV	@#SYSPTR,R3
	MOVB	#MXJBNM/2+200,INTACT-$RMON(R3)
	.EXIT
GLJNM:	ADDR	NMBUF,R0
	MOV	R0,-(SP)
	CLR	(R0)+
	CLR	(R0)+
	CLR	(R0)+
	MOV	@SP,R0
	MOV	#6,R1
	TSTB	-(R5)
	BNE	3$
	MOVB	#'F,@R0
	BR	4$
2$:	TSTB	-(R5)
	BEQ	4$
3$:	MOVB	@R5,(R0)+
	DEC	R1
	BNE	2$
4$:	MOV	(SP)+,R0
5$:	MOV	@#SYSPTR,R5
	CALL	FNDJOB-$RMON(R5)
	BEQ	6$
	MOV	@R5,R5
	RETURN
6$:	KMEROR	<No such job>
NMBUF:	.BLKW	3
.ENDC
.ENDC
.IF NE	BF
.IF NE	ABOR$$
	.SBTTL	ABORT command
	SYNTAX	ABORT
	PROMPT	$JOB
	REQBLNK
	END
SWITS	ABORT
ENDNO
NOS
ENDS
	.ENABL	LSB
ABO1:	MOV	R5,(PC)+
SVNM:	.WORD	0
	ITBLE	0
	OJSR	PC,INITIT
	DEC	SVNM
	OADDR	BLOCK+6,R0
	CLR	-(R0)
	CLR	-(R0)
	CLR	-(R0)
	MOV	R0,-(SP)
	MOV	#7,R1
	TSTB	@R5
	BEQ	2$
1$:	MOVB	-(R5),(R0)+
	BEQ	3$
	DEC	R1
	BNE	1$
2$:	OJMP	BADCOM
3$:	MOV	(SP)+,R0
	MOV	@#SYSPTR,R5
.IF EQ	SYT$K
	BIC	#20040,@R0
	CMP	#'F,@R0
	BNE	5$
	MOV	FCNTXT-$RMON(R5),R2
.IFF
	ADD	#$IMPUR-$RMON,R5
	CALL	FNDJOB-$IMPUR(R5)
	BEQ	5$
.ENDC
	MOV	I.SCCA(R2),R5
	BEQ	4$
	BIS	#100000,@R5
	RETURN
4$:	MOV	@#SYSPTR,R5
	BIS	#100000,INTACT-$RMON(R5)
	BIS	#ABPND$,@R2
	RETURN
5$:	MOV	SVNM,R4
	CLRB	@R3
	KMRTMG	<No such job - >,,BCKASZ
	.DSABL	LSB
.ENDC
.ENDC
.IF NE	HELP$$
HELP1:	CLRB	@#512
	CLRB	@#540
	MOV	#500,R0
	ADDR	HLPBLK,R1
	MOV	(R1)+,(R0)+
	MOV	(R1)+,(R0)+
	MOV	(R1)+,(R0)+
	MOV	(R1)+,(R0)+
	MOV	#600,R0
	INC	R5
1$:	MOVB	-(R5),(R0)+
	BNE	1$
	BR	CHANTO
..HELF	== .
HLPBLK:	.RAD50	"SY HELP  SAV"
.ENDC
.IF NE	MOUN$$!DISM$$!HELP$$
CHANTO:
.IF NE	BF
	.SRESET
 .IF NE	MMG$T
	BIC	#<VIRT$>,@#JSW
 .ENDC
.IFF
	OJSR	PC,RSTSRS
.ENDC
	.CHAIN
.ENDC
.IF NE	MOUN$$
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<WRITE>
	FLGTXT		<WR_ITE>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.IF NE	EDIT$$!TECO$$!MAKE$$!MUNG$$DIFF$$!SQUE$$
	OVERLAY
.ENDC
.IF NE	DIFF$$
	OVCMD	DIFFERENCES
	CALLR	DIF1
.ENDC
.IF NE	SQUE$$
	OVCMD	SQUEEZE
	CALLR	SQU1
.ENDC
.SBTTL	EDIT command
.IF NE	TECO$$
	OVCMD	TECO
.ENDC
.IF NE	MAKE$$
	OVCMD	MAKE
.ENDC
.IF NE	MUNG$$
	OVCMD	MUNG
.ENDC
.IF NE	TECO$$!MAKE$$!MUNG$$
	ADDR	NMTECO,R0
	MOV	#500,R1
	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
	MOV	#-1,(R1)+
	OADDR	KMCBUF,R0
1$:	MOVB	-(R0),(R1)+
	BNE	1$
	CALLR	CHNLNK
..TECN	== .
NMTECO:	.RAD50	"SY TECO  SAV"
.ENDC
.IF NE	EDIT$$
	SYNTAX	EDIT
	PROMPT	$FILEE
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	ROUSPC,<1>
	EOLSEQ	EDIT,EDIT
	END
 SWITS	EDIT
 ENDNO
SWIT	TECO		1	-	TECO	-
SWIT	EDIT		1	-	EDIT	-
SWIT	KED		1	-	KED	-
SWIT	K52		1	-	K52	-
SWIT	KEX		1	-	KEX	-
SWIT	EXECUTE		1	TECO	-	TEX
SWIT	CREATE		1	-	-	CRE
SWIT	OUTPUT		1	-	-	PUT
SWIT	ALLOCATE	1	-	-	ALL
SWIT	INSPECT		1	-	-	INS
 NOS
 ENDS
	OVCMD	EDIT
	CLR	@#510
	ITBLE	2
	OJSR	PC,INITIT
	ADDR	EDTCHN-4,R0
1$:	CMP	(R0)+,(R0)+
	MOV	(R0)+,R1
	BEQ	EDTCSI
 OINST	CMPB	FORCEP,R1,*
	BNE	1$
	MOV	#500,R5
..EDDV	== .+2
	MOV	#<^RSY >,(R5)+
	MOV	(R0)+,(R5)+
	MOV	(R0)+,(R5)+
	MOV	#<^RSAV>,(R5)+
	TST	(R5)+
	MOVB	#FOTYP,R4
 OINST	MOVB	R5,GENFLG,,*
	CALL	SETDTP
	OJSR	PC,DOENT
	CLRB	@R5
	DECB	R4
	MOV	#540,R5
	OJSR	PC,DOENT
	CLRB	@R5
.ENDC
.IF NE	EDIT$$!TECO$$!MAKE$$!MUNG$$
CHNLNK:
.IF NE	BF
	.SRESET
.IF NE	MMG$T
	BIC	#VIRT$,@#JSW
.ENDC
.IFF
	OJSR	PC,RSTSRS
.ENDC
	.CHAIN
EDTCSI:	MOV	#510,R5
	TST	@R5
	BPL	2$
	TSTB	@R5
	BPL	6$
1$:	OJMP	CNFSWT
2$:	TSTB	@R5
	BMI	6$
 OINST	CMPB	FILNUM,#2,*
	BEQ	4$
	OADDR	FILST,R0
	MOV	R0,R1
	ADD	#FSIZ,R1
	MOV	#FSZFLD/2,R2
 OINST	INCB	FILNUM,,*
3$:	MOV	(R0)+,(R1)+
	DEC	R2
	BNE	3$
	MOV	R1,R0
	BR	8$
4$:	OADDR	FILST+STFLG,R0
	CMPB	@R0,#DTYP
	BEQ	5$
	ADD	#FSIZ,R0
	MOVB	#FOTYP,@R0
	BR	7$
5$:	MOVB	#FOTYP,(R0)+
	ADD	#FSZFLD,R0
	BR	8$
6$:
 OINST	CMPB	FILNUM,#2,*
	BEQ	1$
	TST	@R5
	BMI	9$
	MOV	#'I,R2
	OJSR	PC,SETSW1
7$:	OADDR	FILST+FSZFLD,R0
8$:	OJSR	PC,ZFALLF
	MOVB	#ITYP,@R0
9$:	OJMP	CMDEXE
EDTCHN:	.WORD	$$EDIT
..EDIF	== .
	.RAD50	"EDIT  "
	.WORD	$$TECO
..TECF	== .
	.RAD50	"TECO  "
	.WORD	0
EFTYP:	.BYTE	0,0,0,0
.ENDC
.IF NE	EDIT$$
SETDTP:	OADDR	FILST+FTPFLD,R2
	CALL	@PC
	TST	@R2
	BNE	50$
	MOV	EFTYP,@R2
	MOV	EFTYP+2,2(R2)
	ADD	#FSIZ,R2
50$:	RETURN
OVACRE:	BIS	#100000,@#510
	RETURN
OVAINS:	BIS	#200,@#510
	RETURN
OVAPUT:	CMPB	#':,@R5
	BNE	2$
	OJSR	PC,OUTSPEC
	MOVB	#DTYP,-(R0)
2$:	RETURN
OVATEX:	MOV	#377,@#510
	MOV	#".T,EFTYP
	MOV	#"EC,EFTYP+2
	ADDR	EXSTR,R1
	MOV	#600,R0
1$:	MOVB	(R1)+,(R0)+
	BNE	1$
	DEC	R0
	CMPB	#':,@R5
	BNE	3$
	CMPB	#'',-(R5)
	BNE	5$
2$:	CMPB	#'',-(R5)
	BNE	4$
	CMPB	#'',-(R5)
	BEQ	4$
3$:	MOVB	(R1)+,(R0)+
	BNE	3$
	RETURN
4$:	MOVB	@R5,(R0)+
	BNE	2$
	OJMP	BADCOM
5$:	INC	R5
6$:	CMPB	#' ,-(R5)
	BEQ	3$
	MOVB	@R5,(R0)+
	BNE	6$
	BR	3$
EXSTR:	.ASCIZ	\YHXZHK@I\<3>
	.ASCIZ	<3>\MZ\
	.EVEN
.ENDC
.IF NE	DIFF$$
.SBTTL	DIFFERENCES COMMAND
	SYNTAX	DIFFERENCES
	PROMPT	$FILE1
	DEFILE	FSTARF
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	SPISPC,<1>
	PROMPT	$FILE2
	FLDBEG	DSYN1
	REQCOMMA
	OPTEND
	GOTO	DSYN2
DSYN1:	REQBLNK
DSYN2:	SCALL	SPISPC,<1>
	DEFOSPC	$TTSPC
	EOLSEQ	SRCCOM
	END
 SWITS	DIFFERENCES
SWIT	COMMENTS	1	SRCCOM	-	-
SWIT	SPACES		1	SRCCOM	-	-
SWIT	TRIM		1	SRCCOM	-	-
 ENDNO
SWIT	BLANKLINES	1	SRCCOM	-	B
SWIT	FORMFEED	1	SRCCOM	-	F
SWIT	MATCH		1	SRCCOM	-	L,,DVAL
SWIT	SLP		1	SRCCOM	-	SOT
SWIT	CHANGEBAR	1	SRCCOM	-	D
SWIT	AUDITTRAIL	1	SRCCOM	-	A
SWIT	PRINTER		1	-	-	PRI
SWIT	TERMINAL	1	-	-	TER
SWIT	OUTPUT		1	-	-	OUT
SWIT	ALLOCATE	1	-	-	ALL
SWIT	BINARY		1	-	BINCOM	-
SWIT	BYTES		1	BINCOM	-	B
SWIT	START		1	BINCOM	-	S,,VAL
SWIT	END		1	BINCOM	-	E,,VAL
SWIT	QUIET		1	BINCOM	-	Q
SWIT	SIPP		1	BINCOM	-	SOT
SWIT	ALWAYS		1	BINCOM	-	O
SWIT	DEVICE		1	BINCOM	-	D
 NOS
SWIT	NOCOMMENTS	1	SRCCOM	-	C
SWIT	NOSPACES	1	SRCCOM	-	S
SWIT	NOTRIM		1	SRCCOM	-	T
 ENDS
DIF1:	ITBLE	5
	OJSR	PC,INITIT
 OINST	MOV	FORCEP,R0,*
	BIC	#^C<37>,R0
	CMP	#$$BINC,R0
	BNE	1$
 OINST	BISB	#ESTARF,DEFILB,,*
1$:
	OJMP	CMDEXE
.ENDC
.IF NE	SQUE$$
.SBTTL	SQUEEZE command
	SYNTAX	SQUEEZE
	PROMPT	$DEVICE
	DEFILE	FSTARF
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	EOLSEQ	DUP
	SETSWIT	S
	END
 SWITS	SQUEEZE
SWIT	QUERY		1	DUP	-	-
 ENDNO
SWIT	OUTPUT		1	DUP	-	SOU
SWIT	WAIT		1	DUP	-	W
 NOS
SWIT	NOQUERY		1	-	-	Y
 ENDS
SQU1:	ITBLE	2
	OJSR	PC,INITIT
	OJMP	CMDEXE
OVASOU:	CMPB	#':,@R5
	BNE	1$
	OJSR	PC,SPISPEC
	MOVB	#FOTYP,-(R0)
1$:	RETURN
.ENDC
.IF NE	EDIT$$!DIFF$$!SQUE$$
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<TECO>
	FLGTXT		<T_ECO>
	SWTDEF	<EDIT>
	FLGTXT		<ED_IT>
	SWTDEF	<KED>
	FLGTXT		<KED>
	SWTDEF	<K52>
	FLGTXT		<K5_2>
	SWTDEF	<KEX>
	FLGTXT		<KEX>
	SWTDEF	<EXECUTE>
	FLGTXT		<EXE_CUTE>
	SWTDEF	<CREATE>
	FLGTXT		<C_REATE>
	SWTDEF	<INSPECT>
	FLGTXT		<I_NSPECT>
	SWTDEF	<COMMENTS>
	FLGTXT		<CO_MMENTS>
	SWTDEF	<SPACES>
	FLGTXT		<SP_ACES>
	SWTDEF	<TRIM>
	FLGTXT		<TR_IM>
	SWTDEF	<BLANKLINES>
	FLGTXT		<BL_ANKLINES>
	SWTDEF	<FORMFEED>
	FLGTXT		<F_ORMFEED>
	SWTDEF	<MATCH>
	FLGTXT		<M_ATCH>
	SWTDEF	<SLP>
	FLGTXT		<SL_P>
	SWTDEF	<CHANGEBAR>
	FLGTXT		<CH_ANGEBAR>
	SWTDEF	<AUDITTRAIL>
	FLGTXT		<AU_DITTRAIL>
	SWTDEF	<PRINTER>
	FLGTXT		<PRI_NTER>
	SWTDEF	<TERMINAL>
	FLGTXT		<TE_RMINAL>
	SWTDEF	<OUTPUT>
	FLGTXT		<OU_TPUT>
	SWTDEF	<ALLOCATE>
	FLGTXT		<ALL_OCATE>
	SWTDEF	<BINARY>
	FLGTXT		<BI_NARY>
	SWTDEF	<BYTES>
	FLGTXT		<BY_TES>
	SWTDEF	<START>
	FLGTXT		<ST_ART>
	SWTDEF	<END>
	FLGTXT		<EN_D>
	SWTDEF	<QUIET>
	FLGTXT		<Q_UIET>
	SWTDEF	<SIPP>
	FLGTXT		<SI_PP>
	SWTDEF	<ALWAYS>
	FLGTXT		<ALW_AYS>
	SWTDEF	<DEVICE>
	FLGTXT		<DEV_ICE>
	SWTDEF	<QUERY>
	FLGTXT		<Q_UERY>
	SWTDEF	<WAIT>
	FLGTXT		<W_AIT>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.IF NE	DELE$$!PRIN$$!TYPE$$!CREA$$
	OVERLAY
.ENDC
.IF NE	DELE$$
	OVCMD	DELETE
	CALLR	DEL1
.ENDC
.IF NE	TYPE$$
	.SBTTL	TYPE command
	SYNTAX	TYPE
	PROMPT	$FILE
	SCALL	GSWIT,<1,2>
	REQBLNK
	DEFILE	FSTARF
	DEFINX	$.LST
	SCALL	SPISPC,<1>
	FLDBEG
	SCALL	CSPISPC,<1>
	ITEREND
	DEFOSPC	$TTSPC
	EOLSEQ	PIP
	SETSWIT	A
	WILDEF	PIP,W,LOG,ASK,NLG,NLG,$WILD0
	COMPDEF
	APLYDEF	PIP,LOG,W
	APLYDEF	PIP,ASK,Q
	END
 SWITS	TYPE
SWIT	LOG		1	PIP	-	- LOG
 ENDNO
SWIT	QUERY		1	PIP	-	- ASK
SWIT	COPIES		1	PIP	-	K,,DVAL
SWIT	DELETE		2	PIP	-	D
SWIT	NEWFILES	1	PIP	-	C
SWIT	BEFORE		1	PIP	-	J,,DVAL
SWIT	DATE		1	PIP	-	C,,DVAL
SWIT	SINCE		1	PIP	-	I,,DVAL
SWIT	INFORMATION	1	PIP	-	X
SWIT	WAIT		1	PIP	-	E
 NOS
SWIT	NOLOG		1	-	-	- NLG
 ENDS
	OVCMD	TYPE
	ITBLE	7
.IF EQ	CREA$$
	OJSR	PC,INITIT
	OJMP	CMDEXE
.IFF
	BR	COMONC
.ENDC
.ENDC
.IF NE	CREA$$
.SBTTL	CREATE COMMAND
	SYNTAX	CREATE
	PROMPT	$FILEE
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	ROUSPC,<1,2>
	ROUTINE	ATE
	SETSWIT	C
	EOLSEQ	DUP
	END
 SWITS	CREATE
 ENDNO
SWIT	START		1	DUP	-	G,,DVAL
SWIT	EXTENSION	1	-	DUP	T,,DVAL
SWIT	ALLOCATE	2	DUP	-	ALL
 NOS
 ENDS
	OVCMD	CREATE
	ITBLE	1
COMONC:	OJSR	PC,INITIT
	OJMP	CMDEXE
OVAATE:
 OINST	TST	FORCEP,,*
	BPL	1$
	CMPB	(R4)+,(R4)+
1$:	RETURN
.ENDC
.IF NE	PRIN$$
.SBTTL	PRINT command
	SYNTAX	PRINT
	PROMPT	$FILE
	SCALL	GSWIT,<1>
	REQBLNK
	FILQUAL
	DEFILE	FSTARF
	DEFINX	$.LST
	SPISPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	SCALL	CSPISPC,<1>
	ITEREND
	DEFOSPC	$LPWLD
	ROUTINE	QPD
	EOLSEQ	PIP
	WILDEF	PIP,W,LOG,ASK,NLG,NLG,$WILD0
	COMPDEF
	APLYDEF	PIP,LOG,W
	APLYDEF	QUEMAN,LOG,W
	APLYDEF	PIP,ASK,Q
	APLYDEF	QUEMAN,ASK,Q
	END
 SWITS	PRINT
SWIT	LOG		1	-	-	- LOG
SWIT	FLAGPAGE	1	-	QUEMAN	H,,DVAL
 ENDNO
SWIT	QUERY		1	-	-	- ASK
SWIT	COPIES		1	-	-	K,,DVAL
SWIT	DELETE		1	-	-	D
SWIT	NEWFILES	1	-	-	C
SWIT	BEFORE		1	-	-	J,,DVAL
SWIT	SINCE		1	-	-	I,,DVAL
SWIT	DATE		1	-	-	C,,DVAL
SWIT	INFORMATION	1	-	-	X
SWIT	WAIT		1	PIP	-	E
SWIT	PROMPT		1	-	QUEMAN	/
SWIT	NAME		1	-	QUEMAN	QNM
SWIT	PRINTER		1	-	-	-
 NOS
SWIT	NOLOG		1	-	-	- NLG
SWIT	NOFLAGPAGE	1	-	QUEMAN	N
 ENDS
	OVCMD	PRINT
	.ENABL LSB
	ITBLE	8.
	OJSR	PC,INITIT
	MOV	@#SYSPTR,R5
	BIT	#<SP$ACT>,SPSTAT-$RMON(R5)
	BEQ	25$
	MOV	PC,-(SP)
	MOV	#'N,R3
	CALL	DELSWT
	BCS	5$
	CLR	@SP
5$:	MOV	#'H,R3
	CALL	DELSWT
	BCC	10$
	TST	@SP
	BEQ	15$
	BR	20$
10$:	TST	@SP
	BEQ	40$
	CLR	@SP
	CMPB	#':,(R2)+
	BNE	20$
	MOVB	(R2)+,@SP
	BIC	#60,@SP
	CMPB	#6,@SP
	BLO	45$
	CMPB	#'.,@R2
	BNE	45$
15$:	SWAB	@SP
	COM	@SP
	BIC	#^C<3400>,@SP
	BIS	@SP,SPSTAT-$RMON(R5)
20$:	TST	(SP)+
 OINST	MOVB	#<$$PIP>,FORCEP,,*
25$:	CALL	DETPRG
	BEQ	30$
	MOV	(PC)+,R3
	 .BYTE	'/,'D
	CALL	FNDSWT
	BCC	35$
	SWAB	R3
	CALL	FNDSWT
	BCS	30$
	TSTB	@R1
	BEQ	30$
 OINST	CMPB	FILNUM,#2,*
	BGT	35$
30$:	OJMP	CMDEXE
35$:	OJMP	ILSWIT
40$:	OJMP	CNFSWT
45$:	OJMP	ILVALU
	.DSABL LSB
.ENDC
.IF NE	DELE$$
.SBTTL	DELETE command
	SYNTAX	DELETE
	PROMPT	$FILE
	SCALL	GSWIT,<1,2>
	REQBLNK
	FILQUAL
	DEFILE	ESTARF+FSTARF
	SPISPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	SCALL	CSPISPC,<1>
	ITEREND
	EOLSEQ	PIP
	APLYDEF PIP,,D
	APLYDEF FILEX,,D
	WILDEF	PIP,Q,LOG,ASK,DIT,DIT,$WILD0
	COMPDEF
	APLYDEF	PIP,ASK,Q
	APLYDEF	FILEX,ASK,Q
	APLYDEF	PIP,LOG,W
	APLYDEF PIP,WAI,E
	APLYDEF FILEX,WAI,W
	END
 SWITS	DELETE
SWIT	QUERY		1	PIP	-	- ASK
 ENDNO
SWIT	LOG		1	PIP	-	- LOG
SWIT	SYSTEM		1	PIP	-	Y
SWIT	NEWFILES	1	PIP	-	C
SWIT	DATE		1	PIP	-	C,,DVAL
SWIT	SINCE		1	PIP	-	I,,DVAL
SWIT	BEFORE		1	PIP	-	J,,DVAL
SWIT	EXCLUDE		1	PIP	-	P
SWIT	POSITION	1	PIP	-	M,,DVAL
SWIT	INFORMATION	1	PIP	-	X
SWIT	WAIT		1	-	-	- WAI
SWIT	DOS		1	-	FILEX	S
SWIT	INTERCHANGE	1	-	FILEX	U
SWIT	ENTRY		2	-	QUEMAN	M
 NOS
SWIT	NOQUERY		1	-	-	- DIT
 ENDS
DEL1:	ITBLE	7
	OJSR	PC,INITIT
	CALL	DETPRG
	BNE	1$
	MOVB	#'M,R3
	CALL	FNDSWT
	BCS	1$
	TSTB	@R1
	BNE	1$
	CALL	PUTOUT
1$:	OJMP	CMDEXE
.ENDC
.IF NE	PRIN$$!DELE$$
OVAQNM:
	MOV	@#SYSPTR,R1
	BIT	#<SP$ACT>,SPSTAT-$RMON(R1)
	BNE	1$
	BIT	#<QUEUE$>,CONFIG-$RMON(R1)
	BNE	2$
1$:	OJMP	ILSWIT
2$:
 OINST	MOV	DEFDEV,-(SP),*
 OINST	MOV	DEFDEV+2,-(SP),*
 OINST	MOV	LPDEV,DEFDEV,,*
 OINST	MOV	LPDEV+2,DEFDEV+2,,*
	OJSR	PC,ACTFOT
 OINST	TSTB	FOTFLG,,*
	BEQ	3$
	TSTB	FTPFLD-FSIZ+1(R0)
	BNE	BADEXT
3$:
 OINST	MOV	(SP)+,DEFDEV+2,,*
 OINST	MOV	(SP)+,DEFDEV,,*
	RETURN
BADEXT:	OJMP	BADCOM
..QULP	== .
LPDEV:	.ASCIZ	"LP:"
	.EVEN
FOTIND:	.WORD	<-2-FOTYP>*OFBSIZ
OVAQPD:
 OINST	MOV	FORCEP,R0,*
	BIC	#^C<37>,R0
	BNE	1$
	MOV	@#SYSPTR,R0
	BIT	#QUEUE$,CONFIG-$RMON(R0)
	BEQ	1$
	MOVB	#200!$$QUEM,R0
	BIC	#340,R0
 OINST	MOV	R0,FORCEP,,*
1$:	RETURN
DETPRG:
 OINST	MOV	FORCEP,R0,*
	BIC	#^C<37>,R0
	CMPB	#$$QUEM,R0
	BNE	1$
	MOV	R0,-(SP)
	ADDR	FOTIND,R4
 OINST	MOV	LPDEV,DEFDEV,,*
 OINST	MOV	LPDEV+2,DEFDEV+2,,*
	OJSR	PC,MAKOFL
	MOV	(SP)+,R0
	SEZ
1$:	RETURN
FNDSWT:	CLR	R0
	OADDR	TRANSW-1,R1
1$:	TSTB	(R1)+
	INC	R0
 OINST	CMPB	R0,NSWITS,,*
	BGT	2$
	MOVB	(R1)+,R2
	OADDR	STRANT,R2,ADD
	CMPB	(R2)+,R3
	BNE	1$
	TST	(PC)+
2$:	SEC
	RETURN
PUTOUT:	CLR	R2
	OADDR	FILST-1,R0
1$:	INC	R2
	ADD	#FSIZ,R0
	CMPB	@R0,#FOTYP
	BNE	1$
	MOVB	R2,@R1
	RETURN
DELSWT:	CALL	FNDSWT
	BCS	1$
	OJSR	PC,REMSWT
	CLC
1$:	RETURN
.ENDC
.IF NE	DELE$$!PRIN$$!TYPE$$
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<LOG>
	FLGTXT		<L_OG>
	SWTDEF	<QUERY>
	FLGTXT		<Q_UERY>
	SWTDEF	<SYSTEM>
	FLGTXT		<SY_STEM>
	SWTDEF	<NEWFILES>
	FLGTXT		<NE_WFILES>
	SWTDEF	<DATE>
	FLGTXT		<DA_TE>
	SWTDEF	<SINCE>
	FLGTXT		<SI_NCE>
	SWTDEF	<BEFORE>
	FLGTXT		<BE_FORE>
	SWTDEF	<INFORMATION>
	FLGTXT		<INF_ORMATION>
	SWTDEF	<WAIT>
	FLGTXT		<W_AIT>
	SWTDEF	<FLAGPAGE>
	FLGTXT		<F_LAGPAGE>
	SWTDEF	<COPIES>
	FLGTXT		<C_OPIES>
	SWTDEF	<DELETE>
	FLGTXT		<DE_LETE>
	SWTDEF	<PROMPT>
	FLGTXT		<PRO_MPT>
	SWTDEF	<NAME>
	FLGTXT		<NA_ME>
	SWTDEF	<PRINTER>
	FLGTXT		<PRI_NTER>
	SWTDEF	<EXCLUDE>
	FLGTXT		<EX_CLUDE>
	SWTDEF	<POSITION>
	FLGTXT		<PO_SITION>
	SWTDEF	<DOS>
	FLGTXT		<DO_S>
	SWTDEF	<INTERCHANGE>
	FLGTXT		<INT_ERCHANGE>
	SWTDEF	<ENTRY>
	FLGTXT		<EN_TRY>
	SWTDEF	<START>
	FLGTXT		<ST_ART>
	SWTDEF	<EXTENSION>
	FLGTXT		<E_XTENSION>
	SWTDEF	<ALLOCATE>
	FLGTXT		<ALL_OCATE>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.IF NE	RENA$$!PROT$$!UNPR$$!INIT$$!DUMP$$!BOOT$$!BACK$$!FORM$$
	OVERLAY
.ENDC
.IF NE	BOOT$$
	OVCMD	BOOT
	CALLR	BOT1
.ENDC
.IF NE	DUMP$$
	OVCMD	DUMP
	CALLR	DUM1
.ENDC
.IF NE	BACK$$
	OVCMD	BACKUP
	CALLR	BAC1
.ENDC
.IF NE	FORM$$
	OVCMD	FORMAT
	CALLR	FOR1
.ENDC
.IF NE	RENA$$
	.SBTTL	RENAME command
	SYNTAX	RENAME
	PROMPT	$FROM
	DEFILE	FSTARF+ESTARF
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	SPISPC,<1>
	FLDBEG
	SCALL	CSPISPC,<1>
	ITEREND
	PROMPT	$TO
	SCALL	SPOSPC,<1>
	EOLSEQ	PIP
	SETSWIT	R
	WILDEF	PIP,W,LOG,ASK,NLG,NLG,$WILD0
	COMPDEF
	APLYDEF	PIP,LOG,W
	APLYDEF	PIP,ASK,Q
	END
 SWITS	RENAME
SWIT	LOG		1	PIP	-	- LOG
SWIT	REPLACE		1	PIP	-	-
SWIT	PROTECTION	1	PIP	-	F
 ENDNO
SWIT	QUERY		1	PIP	-	- ASK
SWIT	SYSTEM		1	PIP	-	Y
SWIT	NEWFILES	1	PIP	-	C
SWIT	DATE		1	PIP	-	C,,DVAL
SWIT	SINCE		1	PIP	-	I,,DVAL
SWIT	BEFORE		1	PIP	-	J,,DVAL
SWIT	SETDATE		1	PIP	-	T,,DVAL
SWIT	INFORMATION	1	PIP	-	X
SWIT	WAIT		1	PIP	-	E
 NOS
SWIT	NOLOG		1	-	-	- NLG
SWIT	NOREPLACE	1	PIP	-	N
SWIT	NOPROTECTION	1	PIP	-	Z
 ENDS
	OVCMD	RENAME
	ITBLE	7
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	PROT$$
.SBTTL	PROTECT command
	SYNTAX	PROTECT
	PROMPT	$FILE
	SCALL	GSWIT,<1>
	REQBLNK
	FILQUAL
	DEFILE	FSTARF+ESTARF
	SPISPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	SCALL	CSPISPC,<1>
	ITEREND
	EOLSEQ	PIP
	SETSWIT	F
	WILDEF	PIP,W,LOG,ASK,NLG,NLG,$WILD0
	COMPDEF
	APLYDEF	PIP,LOG,W
	APLYDEF	PIP,ASK,Q
	END
 SWITS	PROTECT
SWIT	LOG		1	PIP	-	- LOG
 ENDNO
SWIT	QUERY		1	PIP	-	- ASK
SWIT	SYSTEM		1	PIP	-	Y
SWIT	NEWFILES	1	PIP	-	C
SWIT	DATE		1	PIP	-	C,,DVAL
SWIT	SINCE		1	PIP	-	I,,DVAL
SWIT	BEFORE		1	PIP	-	J,,DVAL
SWIT	EXCLUDE		1	PIP	-	P
SWIT	WAIT		1	PIP	-	E
SWIT	INFORMATION	1	PIP	-	X
SWIT	SETDATE		1	PIP	-	T,,DVAL
 NOS
SWIT	NOLOG		1	-	-	- NLG
 ENDS
	OVCMD	PROTECT
	ITBLE	7
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	UNPR$$
.SBTTL	UNPROTECT command
	SYNTAX	UNPROTECT
	PROMPT	$FILE
	SCALL	GSWIT,<1>
	REQBLNK
	DEFILE	FSTARF+ESTARF
	SPISPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	SCALL	CSPISPC,<1>
	ITEREND
	EOLSEQ	PIP
	SETSWIT	Z
	WILDEF	PIP,W,LOG,ASK,NLG,NLG,$WILD0
	COMPDEF
	APLYDEF	PIP,LOG,W
	APLYDEF	PIP,ASK,Q
	END
 SWITS	UNPROTECT
SWIT	LOG		1	PIP	-	- LOG
 ENDNO
SWIT	QUERY		1	PIP	-	- ASK
SWIT	SYSTEM		1	PIP	-	Y
SWIT	NEWFILES	1	PIP	-	C
SWIT	DATE		1	PIP	-	C,,DVAL
SWIT	SINCE		1	PIP	-	I,,DVAL
SWIT	BEFORE		1	PIP	-	J,,DVAL
SWIT	EXCLUDE		1	PIP	-	P
SWIT	WAIT		1	PIP	-	E
SWIT	INFORMATION	1	PIP	-	X
SWIT	SETDATE		1	PIP	-	T,,DVAL
 NOS
SWIT	NOLOG		1	-	-	- NLG
 ENDS
	OVCMD	UNPROTECT
	ITBLE	7
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	INIT$$
.SBTTL	INITIALIZE COMMAND
	SYNTAX	INITIALIZE
	PROMPT	$DEVICE
	DEFILE	FSTARF
	DEFINX	$.BOT
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	SPOSPC,<1>
	EOLSEQ	DUP
	SETSWIT	Z
	COMPDEF
	APLYDEF	DUP,WAI,W
	APLYDEF	FILEX,WAI,W
	END
 SWITS	INITIALIZE
SWIT	QUERY		1	-	-	-
 ENDNO
SWIT	FILE		1	DUP	-	FIN
SWIT	SEGMENTS	1	DUP	-	N,,DVAL
SWIT	DOS		1	-	FILEX	S
SWIT	INTERCHANGE	1	-	FILEX	U
SWIT	VOLUMEID	1	-	-	V,,VAL
SWIT	BADBLOCKS	1	DUP	-	B,,VAL
SWIT	REPLACE		1	DUP	-	R,,VAL
SWIT	WAIT		1	-	-	- WAI
SWIT	RESTORE		1	DUP	-	D
SWIT	BACKUP		1	-	BUP	-
 NOS
SWIT	NOQUERY		1	-	-	Y
 ENDS
	OVCMD	INITIALIZE
INI1:	ITBLE	2
	OJSR	PC,INITIT
	OJMP	CMDEXE
OVAFIN:	CMPB	#':,@R5
	BNE	1$
	OJSR	PC,INSPEC
1$:	RETURN
.ENDC
.IF NE	DUMP$$
.SBTTL	DUMP COMMAND
	SYNTAX	DUMP
	PROMPT	$DVOFL
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	DEFOSPC	$LPSPC
	EOLSEQ	DUMP
	END
 SWITS	DUMP
SWIT	ASCII		1	DUMP	-	-
 ENDNO
SWIT	WORDS		1	DUMP	-	W
SWIT	BYTES		1	DUMP	-	B
SWIT	RAD50		1	DUMP	-	X
SWIT	ONLY		1	DUMP	-	O,,VAL
SWIT	START		1	DUMP	-	S,,VAL
SWIT	END		1	DUMP	-	E,,VAL
SWIT	IGNORE		1	DUMP	-	G
SWIT	FOREIGN		1	DUMP	-	T
SWIT	TERMINAL	1	-	-	TER
SWIT	PRINTER		1	-	-	PRI
SWIT	OUTPUT		1	-	-	OUT
SWIT	ALLOCATE	1	-	-	ALL
 NOS
SWIT	NOASCII		1	DUMP	-	N
 ENDS
DUM1:	ITBLE	3
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	BOOT$$
	SYNTAX	BOOT
	PROMPT	$DVOFL
	DEFDV	$SY
	DEFINX	$.SYS
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	EOLSEQ	DUP
	SETSWIT	O
	END
 SWITS	BOOT
 ENDNO
SWIT	WAIT		1	DUP	-	W
SWIT	FOREIGN		1	DUP	-	Q
 NOS
 ENDS
BOT1:	ITBLE	1
.IF EQ	BACK$$
	OJSR	PC,INITIT
	OJMP	CMDEXE
.IFF
	BR	COMM1
.ENDC
.ENDC
.IF NE	BACK$$
.SBTTL	BACKUP
	SYNTAX	BACKUP
	PROMPT	$FROM
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	PROMPT	$TO
	FLDBEG	BACK1
	OPTEND
	GOTO	BACK2
BACK1:	REQBLNK
BACK2:	SCALL	ROUSPC,<1>
	EOLSEQ	BUP
	END
SWITS	BACKUP
	ENDNO
	SWIT	DEVICE		1	-	-	I
	SWIT	RESTORE		1	-	-	X
	SWIT	VERIFY		1	-	-	V
	SWIT	FILE		1	-	-	F
	NOS
	ENDS
BAC1:
	ITBLE	2
COMM1:	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	FORM$$
.SBTTL	FORMAT COMMAND
	SYNTAX	FORMAT
	PROMPT	$DEVICE
	SCALL	GSWIT,<1>
	REQBLNK
	SCALL	RINSPC,<1>
	EOLSEQ	FORMAT
	END
 SWITS	FORMAT
SWIT	QUERY		1	FORMAT		-	-
 ENDNO
SWIT	WAIT		1	FORMAT		-	W
SWIT	SINGLEDENSITY	1	FORMAT		-	S
SWIT	VERIFY		1	FORMAT		-	V,,VAL
SWIT	PATTERN		1	FORMAT		-	P,,VAL
 NOS
SWIT	NOQUERY		1	FORMAT		-	Y
 ENDS
FOR1:	ITBLE	1
	OJSR	PC,INITIT
	OJMP	CMDEXE
.ENDC
.IF NE	RENA$$!PROT$$!UNPR$$!INIT$$!DUMP$$!BOOT$$!BACK$$!FORM$$
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<LOG>
	FLGTXT		<L_OG>
	SWTDEF	<QUERY>
	FLGTXT		<Q_UERY>
	SWTDEF	<NEWFILES>
	FLGTXT		<NE_WFILES>
	SWTDEF	<BEFORE>
	FLGTXT		<BE_FORE>
	SWTDEF	<PROTECTION>
	FLGTXT		<PRO_TECTION>
	SWTDEF	<EXCLUDE>
	FLGTXT		<EX_CLUDE>
	SWTDEF	<DATE>
	FLGTXT		<DA_TE>
	SWTDEF	<SINCE>
	FLGTXT		<SI_NCE>
	SWTDEF	<INFORMATION>
	FLGTXT		<INF_ORMATION>
	SWTDEF	<WAIT>
	FLGTXT		<W_AIT>
	SWTDEF	<SYSTEM>
	FLGTXT		<SY_STEM>
	SWTDEF	<SETDATE>
	FLGTXT		<SET_DATE>
	SWTDEF	<FILE>
	FLGTXT		<FI_LE>
	SWTDEF	<SEGMENTS>
	FLGTXT		<SEG_MENTS>
	SWTDEF	<DOS>
	FLGTXT		<DO_S>
	SWTDEF	<INTERCHANGE>
	FLGTXT		<INT_ERCHANGE>
	SWTDEF	<VOLUMEID>
	FLGTXT		<VO_LUMEID>
	SWTDEF	<BADBLOCKS>
	FLGTXT		<BAD_BLOCKS>
	SWTDEF	<REPLACE>
	FLGTXT		<REP_LACE>
	SWTDEF	<RESTORE>
	FLGTXT		<RES_TORE>
	SWTDEF	<BACKUP>
	FLGTXT		<BAC_KUP>
	SWTDEF	<ASCII>
	FLGTXT		<AS_CII>
	SWTDEF	<WORDS>
	FLGTXT		<W_ORDS>
	SWTDEF	<BYTES>
	FLGTXT		<BY_TES>
	SWTDEF	<RAD50>
	FLGTXT		<R_AD50>
	SWTDEF	<ONLY>
	FLGTXT		<ON_LY>
	SWTDEF	<START>
	FLGTXT		<ST_ART>
	SWTDEF	<END>
	FLGTXT		<EN_D>
	SWTDEF	<IGNORE>
	FLGTXT		<IG_NORE>
	SWTDEF	<FOREIGN>
	FLGTXT		<FO_REIGN>
	SWTDEF	<TERMINAL>
	FLGTXT		<TE_RMINAL>
	SWTDEF	<PRINTER>
	FLGTXT		<PRI_NTER>
	SWTDEF	<OUTPUT>
	FLGTXT		<OU_TPUT>
	SWTDEF	<ALLOCATE>
	FLGTXT		<ALL_OCATE>
	SWTDEF	<DEVICE>
	FLGTXT		<DE_VICE>
	SWTDEF	<SINGLEDENSITY>
	FLGTXT		<S_INGLEDENSITY>
	SWTDEF	<VERIFY>
	FLGTXT		<VE_RIFY>
	SWTDEF	<PATTERN>
	FLGTXT		<P_ATTERN>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.IF NE	FORT$$!COMP$$!MACR$$!DIBO$$
.SBTTL	FORTRAN
	OVERLAY
.ENDC
.IF NE	FORT$$
	OVCMD	FORTRAN
	CALLR	FORT
.ENDC
.IF NE	COMP$$
	OVCMD	COMPILE
	CALLR	COMPL1
.ENDC
.IF NE	MACR$$
.SBTTL	MACRO COMMAND
	SYNTAX	MACRO
	SCALL	GSWIT,<1>
	FLDBEG	MINIT1
	TSTCFLG
	OPTEND
	REQCOMMA
	GOTO	MINIT2
MINIT1:	PROMPT	$FILE
	REQBLNK
MINIT2:	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1,2>
	FLDBEG
	REQPLUS
	SCALL	RINSPC,<1,2>
	ITEREND
	MAKOFL	FOTYP
	MAKOFL	SOTYP
	CEOLSEQ	MACRO
	END
 SWITS	MACRO
SWIT	OBJECT		1	-	-	FOT
SWIT	SHOW		1	MACRO	-	L,,VAL
 ENDNO
SWIT	LIST		1	-	-	SOT
SWIT	ENABLE		1	MACRO	-	E,,VAL
SWIT	DISABLE		1	MACRO	-	D,,VAL
SWIT	CROSSREFERENCE	1	MACRO	-	C,,VAL
SWIT	LIBRARY		2	MACRO	-	M
SWIT	PASS		2	MACRO	-	P,,DVAL
SWIT	ALLOCATE	1	-	-	ALL
 NOS
SWIT	NOOBJECT	1	-	-	NOO
SWIT	NOSHOW		1	MACRO	-	N,,VAL
 ENDS
MACMOR:
 OINST	MOV	CNMPTR,R5,*
	OVCMD	MACRO
 OINST	MOV	R5,CNMPTR,,*
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	COMPFL,,*
 OINST	MOV	R5,CSTPTR,,*
	OJSR	PC,CMDMAK
 OINST	TSTB	@CSTPTR,,*
	BNE	MACMOR
	OJMP	STRT
.ENDC
.IF NE	DIBO$$
.SBTTL	DIBOL COMMAND
	SYNTAX	DIBOL
	SCALL	GSWIT,<1>
	FLDBEG	DINIT1
	TSTCFLG
	OPTEND
	REQCOMMA
	GOTO	DINIT2
DINIT1:	PROMPT	$FILE
	REQBLNK
DINIT2:	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	REQPLUS
	SCALL	RINSPC,<1>
	ITEREND
	MAKOFL	FOTYP
	MAKOFL	SOTYP
	CEOLSEQ	DICOMP
	END
 SWITS	DIBOL
SWIT	OBJECT		1	-	-	FOT
SWIT	WARNINGS	1	-	-	-
SWIT	LINENUMBERS	1	-	-	-
 ENDNO
SWIT	LIST		1	-	-	SOT
SWIT	ALPHABETIZE	1	-	-	A
SWIT	ONDEBUG		1	-	-	D
SWIT	CROSSREFERENCE	1	-	-	C
SWIT	ALLOCATE	1	-	-	ALL
SWIT	LOG		1	-	-	G
SWIT	PAGE		1	-	-	P,,DVAL
SWIT	TABLES		1	-	-	S
 NOS
SWIT	NOOBJECT	1	-	-	NOO
SWIT	NOWARNINGS	1	-	-	W
SWIT	NOLINENUMBERS	1	-	-	O
 ENDS
DIBMOR:
 OINST	MOV	CNMPTR,R5,*
	OVCMD	DIBOL
 OINST	MOV	R5,CNMPTR,,*
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	COMPFL,,*
 OINST	MOV	R5,CSTPTR,,*
	OJSR	PC,CMDMAK
 OINST	TSTB	@CSTPTR,,*
	BNE	DIBMOR
	OJMP	STRT
.ENDC
.IF NE	FORT$$
.SBTTL	FORTRAN COMMAND
	SYNTAX	FORTRAN
	SCALL	GSWIT,<1>
	FLDBEG	FORT1
	TSTCFLG
	OPTEND
	REQCOMMA
	GOTO	FORT2
FORT1:	PROMPT	$FILE
	REQBLNK
FORT2:	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	REQPLUS
	SCALL	RINSPC,<1>
	ITEREND
	MAKOFL	FOTYP
	MAKOFL	SOTYP
	CEOLSEQ	FORTRAN,FORTRAN
	END
 SWITS	FORTRAN
SWIT	OBJECT		1	-	-	FOT
SWIT	LINENUMBERS	1	FORTRA	-	-
SWIT	SWAP		1	-	-	-
SWIT	VECTORS		1	FORTRA	-	-
SWIT	OPTIMIZE	1	FORTRA	-	P,,VAL
SWIT	WARNINGS	1	FORTRA	-	W
 ENDNO
SWIT	FORTRAN		1	-	FORTRA	-
SWIT	ONDEBUG		1	-	-	D
SWIT	EXTEND		1	FORTRA	-	E
SWIT	STATISTICS	1	FORTRA	-	A
SWIT	UNITS		1	-	-	N,,DVAL
SWIT	HEADER		1	FORTRA	-	O
SWIT	DIAGNOSE	1	FORTRA	-	B,,VAL
SWIT	CODE		1	FORTRA	-	I,,VAL
SWIT	RECORD		1	-	-	R,,DVAL
SWIT	LIST		1	-	-	SOT
SWIT	I4		1	-	-	T
SWIT	SHOW		1	-	-	L,,VAL
SWIT	ALLOCATE	1	-	-	ALL
 NOS
SWIT	NOOBJECT	1	-	-	NOO
SWIT	NOLINENUMBERS	1	FORTRA -	S
SWIT	NOSWAP		1	-	-	U
SWIT	NOVECTORS	1	FORTRA	-	V
SWIT	NOOPTIMIZE	1	FORTRA	-	M,,VAL
SWIT	NOWARNINGS	1	FORTRA	-	-
 ENDS
FORMOR:
 OINST	MOV	CNMPTR,R5,*
FORT:
 OINST	MOV	R5,CNMPTR,,*
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	COMPFL,,*
 OINST	MOV	R5,CSTPTR,,*
	OJSR	PC,CMDMAK
 OINST	TSTB	@CSTPTR,,*
	BNE	FORMOR
	OJMP	STRT
.ENDC
.IF NE	COMP$$
.SBTTL	COMPILE COMMAND
	SYNTAX	COMPILE
	SCALL	GSWIT,<1>
	FLDBEG	COMP1
	TSTCFLG
	OPTEND
	REQCOMMA
	GOTO	COMP2
COMP1:	PROMPT	$FILE
	REQBLNK
COMP2:	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1,2>
	FLDBEG
	REQPLUS
	SCALL	RINSPC,<1,2>
	ITEREND
	MAKOFL	FOTYP
	MAKOFL	SOTYP
	FILTYPR	$COMPSTR
	CEOLSEQ	FORTRAN,FORTRAN
	COMPDEF
	APLYDEF	FORTRAN,NMS,S
	APLYDEF	DICOMP,NMS,O
	APLYDEF	FORTRAN,WRP,W
	APLYDEF	DICOMP,WRN,W
	END
 SWITS	COMPILE
SWIT	OBJECT		1	-	-	FOT
SWIT	SHOW		1	-	-	L,,VAL
SWIT	LINENUMBERS	1	-	-	-
SWIT	SWAP		1	-	-	-
SWIT	VECTORS		1	FORTRA	-	-
SWIT	OPTIMIZE	1	FORTRA	-	P,,VAL
SWIT	WARNINGS	1	-	-	- WRP
 ENDNO
SWIT	FORTRAN		1	-	FORTRAN	-
SWIT	MACRO		1	-	MACRO	-
SWIT	DIBOL		1	-	DICOMP	-
SWIT	LIST		1	-	-	SOT
SWIT	ENABLE		1	MACRO	-	E,,VAL
SWIT	DISABLE		1	MACRO	-	D,,VAL
SWIT	CROSSREFERENCE	1	-	-	C,,VAL
SWIT	ALPHABETIZE	1	DICOMP	-	A
SWIT	LOG		1	DICOMP	-	G
SWIT	PAGE		1	DICOMP	-	P,,DVAL
SWIT	TABLES		1	DICOMP	-	S
SWIT	ONDEBUG		1	-	-	D
SWIT	EXTEND		1	FORTRA	-	E
SWIT	STATISTICS	1	FORTRA	-	A
SWIT	UNITS		1	-	-	N,,DVAL
SWIT	HEADER		1	FORTRA	-	O
SWIT	CODE		1	FORTRA	-	I,,VAL
SWIT	DIAGNOSE	1	FORTRA	-	B,,VAL
SWIT	RECORD		1	-	-	R,,DVAL
SWIT	I4		1	-	-	T
SWIT	LIBRARY		2	MACRO	-	M
SWIT	PASS		2	MACRO	-	P,,DVAL
SWIT	ALLOCATE	1	-	-	ALL
 NOS
SWIT	NOOBJECT	1	-	-	NOO
SWIT	NOSHOW		1	MACRO	-	N,,VAL
SWIT	NOLINENUMBERS	1	-	-	- NMS
SWIT	NOSWAP		1	-	-	U
SWIT	NOVECTORS	1	FORTRA	-	V
SWIT	NOOPTIMIZE	1	FORTRA	-	M,,VAL
SWIT	NOWARNINGS	1	-	-	- WRN
 ENDS
COMMOR:
 OINST	MOV	CNMPTR,R5,*
COMPL1:
 OINST	MOV	R5,CNMPTR,,*
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	COMPFL,,*
 OINST	MOV	R5,CSTPTR,,*
	OJSR	PC,CMDMAK
 OINST	TSTB	@CSTPTR,,*
	BNE	COMMOR
	OJMP	STRT
.ENDC
.IF NE	COMP$$!MACR$$!FORT$$!DIBO$$
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<LOG>
	FLGTXT		<LO_G>
	SWTDEF	<OBJECT>
	FLGTXT		<OB_JECT>
	SWTDEF	<SHOW>
	FLGTXT		<SH_OW>
	SWTDEF	<LIST>
	FLGTXT		<LIS_T>
	SWTDEF	<ENABLE>
	FLGTXT		<EN_ABLE>
	SWTDEF	<DISABLE>
	FLGTXT		<DIS_ABLE>
	SWTDEF	<CROSSREFERENCE>
	FLGTXT		<CR_OSSREFERENCE>
	SWTDEF	<LIBRARY>
	FLGTXT		<LIB_RARY>
	SWTDEF	<PASS>
	FLGTXT		<PAS_S>
	SWTDEF	<ALLOCATE>
	FLGTXT		<ALL_OCATE>
	SWTDEF	<WARNINGS>
	FLGTXT		<WA_RNINGS>
	SWTDEF	<LINENUMBERS>
	FLGTXT		<LINE_NUMBERS>
	SWTDEF	<ALPHABETIZE>
	FLGTXT		<ALP_HABETIZE>
	SWTDEF	<ONDEBUG>
	FLGTXT		<ON_DEBUG>
	SWTDEF	<PAGE>
	FLGTXT		<PAG_E>
	SWTDEF	<TABLES>
	FLGTXT		<T_ABLES>
	SWTDEF	<SWAP>
	FLGTXT		<SW_AP>
	SWTDEF	<VECTORS>
	FLGTXT		<V_ECTORS>
	SWTDEF	<OPTIMIZE>
	FLGTXT		<OP_TIMIZE>
	SWTDEF	<FORTRAN>
	FLGTXT		<F_ORTRAN>
	SWTDEF	<EXTEND>
	FLGTXT		<EXT_END>
	SWTDEF	<STATISTICS>
	FLGTXT		<ST_ATISTICS>
	SWTDEF	<UNITS>
	FLGTXT		<U_NITS>
	SWTDEF	<HEADER>
	FLGTXT		<H_EADER>
	SWTDEF	<DIAGNOSE>
	FLGTXT		<DIA_GNOSE>
	SWTDEF	<CODE>
	FLGTXT		<CO_DE>
	SWTDEF	<RECORD>
	FLGTXT		<RE_CORD>
	SWTDEF	<I4>
	FLGTXT		<I_4>
	SWTDEF	<MACRO>
	FLGTXT		<MAC_RO>
	SWTDEF	<DIBOL>
	FLGTXT		<DIB_OL>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.IF NE	EXEC$$
.SBTTL	EXECUTE COMMAND
	OVERLAY
	SYNTAX	EXECUTE
	SCALL	GSWIT,<1>
	FLDBEG	EXEC1
	TSTCFLG
	OPTEND
	REQCOMMA
	GOTO	EXEC2
EXEC1:	PROMPT	$FILE
	REQBLNK
EXEC2:	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1,2>
	FLDBEG
	REQPLUS
	SCALL	RINSPC,<1,2>
	ITEREND
	MAKOFL	FOTYP
	MAKOFL	SOTYP
	FILTYPR	$COMPSTR
	CEOLSEQ	FORTRAN,FORTRAN
	COMPDEF
	APLYDEF	FORTRAN,NMS,S
	APLYDEF	DICOMP,NMS,O
	APLYDEF	FORTRAN,WRP,W
	APLYDEF	DICOMP,WRN,W
	END
 SWITS	EXECUTE
SWIT	SHOW		1	-	-	L,,VAL
SWIT	LINENUMBERS	1	-	-	-
SWIT	SWAP		1	-	-	-
SWIT	VECTORS		1	FORTRA	-	-
SWIT	OPTIMIZE	1	FORTRA	-	P,,VAL
SWIT	WARNINGS	1	-	-	- WRP
SWIT	RUN		1	-	-	-
 ENDNO
SWIT	FORTRAN		1	-	FORTRAN	-
SWIT	MACRO		1	-	MACRO	-
SWIT	DIBOL		1	-	DICOMP	-
SWIT	OBJECT		1	-	-	FOT
SWIT	LIST		1	-	-	SOT
SWIT	ENABLE		1	MACRO	-	E,,VAL
SWIT	DISABLE		1	MACRO	-	D,,VAL
SWIT	CROSSREFERENCE	1	-	-	C,,VAL
SWIT	ALPHABETIZE	1	DICOMP	-	A
SWIT	LOG		1	DICOMP	-	G
SWIT	PAGE		1	DICOMP	-	P,,DVAL
SWIT	TABLES		1	DICOMP	-	S
SWIT	ONDEBUG		1	-	-	D
SWIT	EXTEND		1	FORTRA	-	E
SWIT	STATISTICS	1	FORTRA	-	A
SWIT	UNITS		1	-	-	N,,DVAL
SWIT	HEADER		1	FORTRA	-	O
SWIT	CODE		1	FORTRA	-	I,,VAL
SWIT	DIAGNOSE	1	FORTRA	-	B,,VAL
SWIT	RECORD		1	-	-	R,,DVAL
SWIT	I4		1	-	-	T
SWIT	LIBRARY		2	MACRO	-	M
SWIT	PASS		2	MACRO	-	P,,DVAL
SWIT	ALLOCATE	1	-	-	ALL
SWIT	PROMPT		1	-	-	LNK
SWIT	WIDE		1	-	-	LNK
SWIT	BOTTOM		1	-	-	LNK
SWIT	LINKLIBRARY	1	-	-	LNK
SWIT	DEBUG		1	-	-	LNK
SWIT	EXECUTE		1	-	-	LNK
SWIT	MAP		1	-	-	LNK
SWIT	DUPLICATE	1	-	-	LNK
SWIT	GLOBAL		1	-	-	LNK
 NOS
SWIT	NOSHOW		1	MACRO	-	N,,VAL
SWIT	NOLINENUMBERS	1	-	-	- NMS
SWIT	NOSWAP		1	-	-	U
SWIT	NOVECTORS	1	FORTRA	-	V
SWIT	NOOPTIMIZE	1	FORTRA	-	M,,VAL
SWIT	NOWARNINGS	1	-	-	- WRN
SWIT	NORUN		1	-	-	NOR
 ENDS
.ENABL	LSB
1$:
 OINST	MOV	CNMPTR,R5,*
	OVCMD	EXECUTE
 OINST	MOV	R5,CNMPTR,,*
	CLRB	EXEOPT
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	EXEFLG,,*
 OINST	INCB	COMPFL,,*
 OINST	MOV	R5,CSTPTR,,*
	MOV	(SP)+,R4
	JSR	R4,8$
	MOV	R1,-(SP)
 OINST	MOVB	EXEDEL,R0,*
 OINST	MOVB	#COMMA,EXEDEL,,*
2$:	CMPB	#'[,R0
	BEQ	4$
	CALL	EXECHR
3$:	MOVB	(R1)+,R0
	BEQ	3$
	BPL	2$
4$:	ADDR	EXEOPT,R1
5$:	MOVB	(R1)+,R0
	BEQ	6$
	CALL	EXECHR
	BR	5$
6$:	MOV	(SP)+,R1
7$:	RETURN
8$:
 OINST	MOV	R4,EXEESC,,*
	OJSR	PC,CMDMAK
 OINST	TSTB	@CSTPTR,,*
	BNE	1$
 OINST	TSTB	RUNFLG,,*
	BNE	11$
	MOV	(SP)+,R1
	JSR	R1,10$
	 .ASCIZ	"/RU"
9$:	CALL	EXECHR
10$:	MOVB	(R1)+,R0
	BNE	9$
11$:	CLR	R0
	CALL	EXECHR
	ADDR	13$,R1
	OADDR	KMCBUF,R5
	MOV	R5,R0
12$:	MOVB	-(R1),-(R0)
	BNE	12$
	CLRB	-(R0)
	OJMP	CMDREC
EXELSZ	= 120.
EXECHR:	JSR	R0,13$
	 .BLKB	EXELSZ
	 .ASCII	"KNIL"
13$:
 OINST	ADD	EXEPTR,R0,*
	MOVB	(SP)+,@R0
 OINST	DECB	EXEPTR,,*
	BGE	7$
14$:	OJMP	TCERR
OVALNK:	INC	R5
15$:	CMPB	#'/,(R5)+
	BNE	15$
	MOVB	-(R5),R0
16$:
 OINST	TSTB	QUALFL,,*
	BEQ	17$
 OINST	MOVB	EXEPT2,R1,*
	CMPB	#EXEND-EXEOPT,R1
	BLE	14$
	ADDR	EXEOPT,R1,ADD
	MOVB	R0,(R1)+
	CLRB	@R1
 OINST	INCB	EXEPT2,,*
	BR	18$
17$:
 OINST	TSTB	COMPFL,,*
	BNE	18$
	CALL	EXECHR
18$:	MOVB	-(R5),R0
	BEQ	19$
	CMPB	#'/,R0
	BEQ	19$
	CMPB	#' ,R0
	BEQ	19$
	CMPB	#',,R0
	BEQ	19$
	CMPB	#'+,R0
	BNE	16$
19$:	RETURN
EXEOPT:	.BLKB	59.
EXEND:	.BYTE	0
	.DSABL	LSB
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<SHOW>
	FLGTXT		<SH_OW>
	SWTDEF	<LINENUMBERS>
	FLGTXT		<LINE_NUMBERS>
	SWTDEF	<SWAP>
	FLGTXT		<SW_AP>
	SWTDEF	<VECTORS>
	FLGTXT		<V_ECTORS>
	SWTDEF	<OPTIMIZE>
	FLGTXT		<OP_TIMIZE>
	SWTDEF	<WARNINGS>
	FLGTXT		<WA_RNINGS>
	SWTDEF	<RUN>
	FLGTXT		<RU_N>
	SWTDEF	<FORTRAN>
	FLGTXT		<F_ORTRAN>
	SWTDEF	<MACRO>
	FLGTXT		<MAC_RO>
	SWTDEF	<DIBOL>
	FLGTXT		<DIB_OL>
	SWTDEF	<OBJECT>
	FLGTXT		<OB_JECT>
	SWTDEF	<LIST>
	FLGTXT		<LIS_T>
	SWTDEF	<ENABLE>
	FLGTXT		<EN_ABLE>
	SWTDEF	<DISABLE>
	FLGTXT		<DIS_ABLE>
	SWTDEF	<CROSSREFERENCE>
	FLGTXT		<CR_OSSREFERENCE>
	SWTDEF	<ALPHABETIZE>
	FLGTXT		<ALP_HABETIZE>
	SWTDEF	<LOG>
	FLGTXT		<LO_G>
	SWTDEF	<PAGE>
	FLGTXT		<PAG_E>
	SWTDEF	<TABLES>
	FLGTXT		<T_ABLES>
	SWTDEF	<ONDEBUG>
	FLGTXT		<ON_DEBUG>
	SWTDEF	<EXTEND>
	FLGTXT		<EXT_END>
	SWTDEF	<STATISTICS>
	FLGTXT		<ST_ATISTICS>
	SWTDEF	<UNITS>
	FLGTXT		<U_NITS>
	SWTDEF	<HEADER>
	FLGTXT		<H_EADER>
	SWTDEF	<CODE>
	FLGTXT		<CO_DE>
	SWTDEF	<DIAGNOSE>
	FLGTXT		<DIA_GNOSE>
	SWTDEF	<RECORD>
	FLGTXT		<RE_CORD>
	SWTDEF	<I4>
	FLGTXT		<I_4>
	SWTDEF	<LIBRARY>
	FLGTXT		<LIB_RARY>
	SWTDEF	<PASS>
	FLGTXT		<PAS_S>
	SWTDEF	<ALLOCATE>
	FLGTXT		<ALL_OCATE>
	SWTDEF	<PROMPT>
	FLGTXT		<PRO_MPT>
	SWTDEF	<WIDE>
	FLGTXT		<WI_DE>
	SWTDEF	<BOTTOM>
	FLGTXT		<BOT_TOM>
	SWTDEF	<LINKLIBRARY>
	FLGTXT		<LINK_LIBRARY>
	SWTDEF	<DEBUG>
	FLGTXT		<DE_BUG>
	SWTDEF	<EXECUTE>
	FLGTXT		<EXE_CUTE>
	SWTDEF	<MAP>
	FLGTXT		<MAP_>
	SWTDEF	<DUPLICATE>
	FLGTXT		<DU_PLICATE>
	SWTDEF	<GLOBAL>
	FLGTXT		<G_LOBAL>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.SBTTL	LINK
	OVERLAY
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
	OVCMD	LAT1
	CALLR	LAT1A
	OVCMD	LAT2
	CALLR	LAT2A
.ENDC
.IIF EQ LNK$IF,	.LIST
.IF NE	LINK$$
	SYNTAX	LINK
	SCALL	GSWIT,<1>
	PROMPT	$FILE
	REQBLNK
	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1>
	FLDBEG
	REQCOMMA
	SCALL	RINSPC,<1>
	ITEREND
	MAKOFL	FOTYP
	MAKOFL	SOTYP
	MAKOFL	TOTYP
	EOLSEQ	LINK
	END
 SWITS	LINK
SWIT	EXECUTE		1	-	-	FOT
SWIT	BITMAP		1	-	-	-
 ENDNO
SWIT	MAP		1	-	-	SOT
SWIT	SYMBOLTABLE	1	-	-	TOT
SWIT	LIBRARY		1	-	-	LIB
SWIT	LINKLIBRARY	1	-	-	LIB
SWIT	DEBUG		1	-	-	DEB
SWIT	RUN		1	-	-	NOR
SWIT	INCLUDE		1	-	-	I
SWIT	FOREGROUND	1	-	-	R,,VAL
SWIT	FILL		1	-	-	Z,,VAL
SWIT	WIDE		1	-	-	W
SWIT	SLOWLY		1	-	-	S
SWIT	LDA		1	-	-	L
SWIT	STACK		1	-	-	M,,VAL
SWIT	BOTTOM		1	-	-	B,,VAL
SWIT	TRANSFER	1	-	-	T,,VAL
SWIT	EXTEND		1	-	-	E,,VAL
SWIT	ROUND		1	-	-	U,,VAL
SWIT	BOUNDARY	1	-	-	Y,,VAL
SWIT	ALPHABETIZE	1	-	-	A
SWIT	TOP		1	-	-	H,,VAL
SWIT	ALLOCATE	1	-	-	ALL
SWIT	PROMPT		1	-	-	/
SWIT	XM		1	-	-	V,,VAL
SWIT	GLOBAL		1	-	-	N
SWIT	DUPLICATE	1	-	-	D
SWIT	LIMIT		1	-	-	K,,DVAL
 NOS
SWIT	NOEXECUTE	1	-	-	NOO
SWIT	NOBITMAP	1	-	-	X
 ENDS
	OVCMD	LINK
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	LNKFLG,,*
 OINST	TSTB	RUNFLG,,*
	BNE	1$
	OJMP	CMDEXE
1$:
 OINST	CLRB	EXEFLG,,*
	CALL	10$
	MOV	R1,-(SP)
	MOV	R2,-(SP)
	ADDR	LNKSAV,R0
3$:	MOVB	(R1)+,R2
	BEQ	3$
	BMI	5$
	CMPB	#'[,R2
	BEQ	5$
	MOVB	R2,(R0)+
	BR	3$
5$:	CLRB	@R0
	MOV	(SP)+,R2
	MOV	(SP)+,R1
	RETURN
10$:
 OINST	MOV	(SP)+,EXEESC,,*
	OJSR	PC,CMDMAK
	ADDR	RUNCMD,R1
	CLR	R0
11$:	INC	R0
	TSTB	(R1)+
	BNE	11$
	OJSR	PC,DCLSPC
	ADDR	RUNCMD,R0
14$:	MOVB	(R0)+,(R1)+
	BNE	14$
	OJMP	STRT
RUNCMD:	.ASCII	"RUN "
LNKSAV:	.BLKB	16.
	.EVEN
OVADEB:	OJSR	PC,MULSZI
	MOV	R0,R1
	OADDR	FILST,R2
	ADD	#FSIZ,R1
	BR	2$
1$:	MOVB	-(R0),-(R1)
2$:	CMP	R0,R2
	BNE	1$
	CLR	R1
	CMPB	#':,@R5
	BEQ	3$
	MOV	R5,-(SP)
	OADDR	DUMYNM,R5
	OJSR	PC,INSPC1
	MOV	(SP)+,R5
	RETURN
3$:	OJMP	INSPC1
OVALIB:	CMPB	#':,@R5
	BEQ	1$
	RETURN
1$:	OJMP	INSPEC
.ENDC
.IIF EQ LINK$$,.LIST
.IF NE	LIBR$$
.SBTTL	LIBRARY COMMAND
	SYNTAX	LIBRARY
	.IIF LE 50-$QUAL,	.ERROR
	$QUAL	= 50
	SCALL	GSWIT,<1>
	PROMPT	$LIBR
	REQBLNK
	ROUTINE	FIC
	FILQUAL
	INSPEC
	SAVNAM
	SCALL	GSWIT,<1>
	CMDQUAL
	PROMPT	$FILEE
	CNDROUT	FIL,EXT
	PROMPT	$FILE
	CNDROUT	FIL,CRL
	CNDROUT	FIL,INL
	FLDBEG	LIBR1
	REQBLNK
	SCALL	RINSPC,<1,2>
	OPTEND
	FLDBEG
	REQCOMMA
	SCALL	RINSPC,<1,2>
	ITEREND
LIBR1:	CNDROUT	EXT,EXT
	CNDROUT	CRL,CRL
	MAKOFL	SOTYP
	ROUTINE	LST
	ROUTINE	LOB
	EOLSEQ	LIBR
	END
 SWITS	LIBRARY
SWIT	OBJECT		1	-	-	FOT
 ENDNO
SWIT	INSERT		1	-	-	- INL
SWIT	DELETE		1	-	-	D
SWIT	REMOVE		1	-	-	G
SWIT	CREATE		1	-	-	- CRL
SWIT	LIST		1	-	-	SOT
SWIT	MACRO		1	-	-	MAC,,DVAL
SWIT	EXTRACT		1	-	-	- EXT
SWIT	ALLOCATE	1	-	-	ALL
SWIT	PROMPT		1	-	-	/
SWIT	REPLACE		2	-	-	R
SWIT	UPDATE		2	-	-	U
 NOS
SWIT	NOOBJECT	1	-	-	NOO
 ENDS
	OVCMD	LIBRARY
	ITBLE	9.
	OJSR	PC,INITIT
 OINST	INCB	LNKFLG,,*
	OJMP	CMDEXE
OVACRL:	CALL	FNDIN
	CLRB	@R1
	RETURN
OVAMAC:
 OINST	BISB	#$CRL50,DEFMSK,,*
	MOVB	#'M,R2
	OJMP	ESWIT
OVAEXT:	CALL	FNDIN
	CALL	FNDIN2
	BNE	1$
	MOVB	#FOTYP,@R1
1$:
 OINST	INCB	FOTFLG,,*
	MOVB	#'E,R2
	CLR	R1
	CLR	R3
	OJMP	ESWIT
FNDIN:	OADDR	FILST+STFLG-FSIZ,R1
 OINST	MOVB	FILNUM,R2,*
FNDIN2:	DECB	R2
	BMI	1$
	ADD	#FSIZ,R1
	CMPB	#ITYP,@R1
	BNE	FNDIN2
1$:	RETURN
OVAFIC:
 OINST	TSTB	SCNTFL,,*
	BNE	1$
 OINST	BISB	#$INL50,DEFMSK,,*
1$:	RETURN
OVALST:
 OINST	CMPB	SCNTFL,#1,*
	BNE	1$
 OINST	TSTB	SOTFLG,,*
	BMI	1$
 OINST	INCB	FOTFLG,,*
1$:	RETURN
OVAFIL:	OJMP	REQBLNK
OVALOB:
 OINST	TSTB	FOTFLG,,*
	BNE	2$
	MOV	R5,-(SP)
	OADDR	DUMYNM,R5
	OJSR	PC,OUTSPEC
	MOV	(SP)+,R5
	MOV	R0,R1
	SUB	#FSIZ,R1
	OADDR	SAVNM,R3
	MOV	(R3)+,(R1)+
	MOV	(R3)+,(R1)+
 OINST	MOV	FOTDV1,R2,*
	BEQ	1$
	MOV	R2,-4(R1)
 OINST	MOV	FOTDV2,-2(R1),*
1$:	MOV	(R3)+,(R1)+
	MOV	(R3)+,(R1)+
	MOV	(R3)+,(R1)+
	MOV	(R3)+,(R1)+
	MOV	(R3)+,(R1)+
	MOVB	#FOTYP,-(R0)
2$:	RETURN
.ENDC
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
.SBTTL	LINK OVERLAY INDIRECT FILE SUPPORT (CONT'D)
.ENABL	LSB
LAT1A:	MOV	(SP)+,R0
	OADDR	KMCBUF,R5
	MOV	R5,R1
	MOV	R5,R3
	ADD	#KMCBFLN,R3
1$:	TSTB	-(R5)
	BNE	1$
2$:	MOVB	(R5)+,(R3)+
	CMP	R5,R1
	BNE	2$
 OINST	MOV	R3,OLDLIN,,*
	MOV	R1,-(SP)
	SUB	R3,@SP
	MOV	@SP,R1
 OINST	MOV	(SP)+,KBFLN,,*
 OINST	BIS	#IFLIF,@.STATWD,,*
 OINST	CLR	ACCUM,,*
	DEC	R1
	BMI	6$
	MOVB	#ATSIGN,-(R5)
3$:	DEC	R1
	BMI	6$
	MOVB	(R0)+,-(R5)
	BMI	4$
	BNE	3$
	CMPB	(R1)+,(R5)+
	BR	3$
4$:	CLRB	(R5)+
	OADDR	KMCBUF,R5
	OJMP	LNKAT1
LAT2A:	MOV	(SP)+,R0
	SUB	R0,@SP
	OADDR	KMCBUF,R5
 OINST	MOV	OLDLIN,R3,*
	SUB	R0,R3
5$:	MOVB	-(R3),-(R5)
	BNE	5$
	OADDR	KMCBUF,R5
	RETURN
6$:	OJMP	LTL
.DSABL	LSB
.ENDC
.IIF EQ LNK$IF,	.LIST
.IF NE	LIBR$$!LINK$$
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<EXECUTE>
	FLGTXT		<EXE_CUTE>
	SWTDEF	<BITMAP>
	FLGTXT		<BI_TMAP>
	SWTDEF	<MAP>
	FLGTXT		<MAP_>
	SWTDEF	<SYMBOLTABLE>
	FLGTXT		<SY_MBOLTABLE>
	SWTDEF	<LIBRARY>
	FLGTXT		<LIB_RARY>
	SWTDEF	<LINKLIBRARY>
	FLGTXT		<LINK_LIBRARY>
	SWTDEF	<DEBUG>
	FLGTXT		<DE_BUG>
	SWTDEF	<RUN>
	FLGTXT		<RU_N>
	SWTDEF	<INCLUDE>
	FLGTXT		<I_NCLUDE>
	SWTDEF	<FOREGROUND>
	FLGTXT		<FO_REGROUND>
	SWTDEF	<FILL>
	FLGTXT		<FI_LL>
	SWTDEF	<WIDE>
	FLGTXT		<WI_DE>
	SWTDEF	<SLOWLY>
	FLGTXT		<SL_OWLY>
	SWTDEF	<LDA>
	FLGTXT		<LD_A>
	SWTDEF	<STACK>
	FLGTXT		<ST_ACK>
	SWTDEF	<BOTTOM>
	FLGTXT		<BOT_TOM>
	SWTDEF	<TRANSFER>
	FLGTXT		<TR_ANSFER>
	SWTDEF	<EXTEND>
	FLGTXT		<EXT_END>
	SWTDEF	<ROUND>
	FLGTXT		<RO_UND>
	SWTDEF	<BOUNDARY>
	FLGTXT		<BOU_NDARY>
	SWTDEF	<ALPHABETIZE>
	FLGTXT		<ALP_HABETIZE>
	SWTDEF	<TOP>
	FLGTXT		<TO_P>
	SWTDEF	<ALLOCATE>
	FLGTXT		<ALL_OCATE>
	SWTDEF	<PROMPT>
	FLGTXT		<PRO_MPT>
	SWTDEF	<XM>
	FLGTXT		<X_M>
	SWTDEF	<GLOBAL>
	FLGTXT		<G_LOBAL>
	SWTDEF	<DUPLICATE>
	FLGTXT		<DU_PLICATE>
	SWTDEF	<LIMIT>
	FLGTXT		<LIM_IT>
	SWTDEF	<OBJECT>
	FLGTXT		<OB_JECT>
	SWTDEF	<INSERT>
	FLGTXT		<I_NSERT>
	SWTDEF	<DELETE>
	FLGTXT		<DE_LETE>
	SWTDEF	<REMOVE>
	FLGTXT		<REM_OVE>
	SWTDEF	<CREATE>
	FLGTXT		<C_REATE>
	SWTDEF	<LIST>
	FLGTXT		<LIS_T>
	SWTDEF	<MACRO>
	FLGTXT		<MAC_RO>
	SWTDEF	<EXTRACT>
	FLGTXT		<E_XTRACT>
	SWTDEF	<REPLACE>
	FLGTXT		<REP_LACE>
	SWTDEF	<UPDATE>
	FLGTXT		<U_PDATE>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
	OVERLAY
.SBTTL	SHOW
.IF NE	SHOW$$
	SYNTAX	SHOW
	FLDBEG	SHOWA
	SCALL	GSWIT1,<1>
	OPTEND
	GOTO	SHOWB
SHOWA:	SETSWIT	L
	EOLSEQ	RESORC
SHOWB:	END
 SWITS	SHOW
 ENDNO
SWIT	DEVICES		1	-	RESORC	DEV
SWIT	CONFIGURATION	1	-	RESORC	Z
SWIT	TERMINALS	1	-	RESORC	T
SWIT	JOBS		1	-	RESORC	J
SWIT	ALL		1	-	RESORC	A
SWIT	SUBSET		1	-	RESORC	S
SWIT	MEMORY		1	-	RESORC	X
SWIT	QUEUE		1	-	RESORC	Q
SWIT	USERS		1	-	RESORC	U
SWIT	ERRORS		1	-	ERROUT	-
SWIT	COMMANDS	1	-	UCL	-
 NOS
 ENDS
	.ENABL	LSB
	OVCMD	SHOW
	TSTB	@R5
	BEQ	1$
	CMPB	@R5,#SPACE
	BNE	2$
	MOVB	#SLASH,@R5
1$:	ITBLE	1
	OJSR	PC,INITIT
 OINST	MOV	FORCEP,R0,*
	BIC	#^C<37>,R0
	CMPB	#$$ERRO,R0
	BEQ	SHWERR
	CMPB	#<$$UCL>,R0
	BEQ	SHWCMD
	TSTB	@R5
	BEQ	3$
2$:	OJMP	BADCOM
3$:	OJMP	CMDEXE
OVADEV:	CMPB	#':,@R5
	BNE	4$
	OJSR	PC,INSPEC
4$:	MOVB	#'D,R2
	CLR	R1
	CLR	R3
	OJMP	ESWIT
.DSABL	LSB
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<DEVICES>
	FLGTXT		<D_EVICES>
	SWTDEF	<CONFIGURATION>
	FLGTXT		<CON_FIGURATION>
	SWTDEF	<TERMINALS>
	FLGTXT		<T_ERMINALS>
	SWTDEF	<JOBS>
	FLGTXT		<J_OBS>
	SWTDEF	<ALL>
	FLGTXT		<A_LL>
	SWTDEF	<SUBSET>
	FLGTXT		<S_UBSET>
	SWTDEF	<MEMORY>
	FLGTXT		<M_EMORY>
	SWTDEF	<QUEUE>
	FLGTXT		<Q_UEUE>
	SWTDEF	<USERS>
	FLGTXT		<U_SERS>
	SWTDEF	<ERRORS>
	FLGTXT		<E_RRORS>
	SWTDEF	<COMMANDS>
	FLGTXT		<COM_MANDS>
	.EVEN
	.ENABL	CRF
	NEXTL
	SYNTAX	SHWCMD
	SCALL	GSWIT,<1>
	DEFOSPC	$TTSPC
	EOLSEQ	UCL
	END
 SWITS	SHWCMD
 ENDNO
SWIT	PRINTER		1	UCL	-	PRI
SWIT	TERMINAL	1	UCL	-	TER
SWIT	OUTPUT		1	UCL	-	OUT
 NOS
 ENDS
SHWCMD:	ITBLE	2
	OJSR	PC,INITIT
	OJMP	CMDEXE
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<PRINTER>
	FLGTXT		<PRI_NTER>
	SWTDEF	<TERMINAL>
	FLGTXT		<TE_RMINAL>
	SWTDEF	<OUTPUT>
	FLGTXT		<OU_TPUT>
	.EVEN
	.ENABL	CRF
	NEXTL
	SYNTAX	SHWERR
	SCALL	GSWIT,<1>
	DEFOSPC	$TTSPC
	EOLSEQ	ERROUT
	END
 SWITS	SHWERR
 ENDNO
SWIT	ALL		1	ERROUT	-	A
SWIT	SUMMARY		1	ERROUT	-	S
SWIT	FROM		1	ERROUT	-	F,,DVAL
SWIT	TO		1	ERROUT	-	T,,DVAL
SWIT	PRINTER		1	ERROUT	-	PRI
SWIT	TERMINAL	1	ERROUT	-	TER
SWIT	OUTPUT		1	ERROUT	-	OUT
SWIT	FILE		1	ERROUT	-	ELF
 NOS
 ENDS
SHWERR:	ITBLE	3
	CLR	ELINSP
	OJSR	PC,INITIT
 OINST	CMPB	FILNUM,#3,*
	BNE	1$
	TST	ELINSP
	BNE	1$
	OJMP	CNFSWT
1$:	OJMP	CMDEXE
OVAELF:	CMPB	#':,@R5
	BNE	1$
	OJSR	PC,INSPEC
	INC	ELINSP
1$:	RETURN
ELINSP:	.WORD	0
	.IRP	NUM,<\$OPTX>
OPTX'NUM::
	.ENDR
	.BYTE	-1
	.DSABL	CRF
	$SCNT=0
	SWTDEF	<ALL>
	FLGTXT		<A_LL>
	SWTDEF	<SUMMARY>
	FLGTXT		<SU_MMARY>
	SWTDEF	<FROM>
	FLGTXT		<FR_OM>
	SWTDEF	<TO>
	FLGTXT		<TO_>
	SWTDEF	<PRINTER>
	FLGTXT		<PRI_NTER>
	SWTDEF	<TERMINAL>
	FLGTXT		<TE_RMINAL>
	SWTDEF	<OUTPUT>
	FLGTXT		<OU_TPUT>
	SWTDEF	<FILE>
	FLGTXT		<FI_LE>
	.EVEN
	.ENABL	CRF
	NEXTL
.ENDC
.SBTTL	REENTER & START
	OVERLAY
	.ENABL	LSB
.IF NE	REEN$$
	OVCMD	REENTER
	BIT	#<RSTRT$>,@#JSW
	BEQ	BDCOM
	MOV	#<-2>,R2
	BR	STRE
.ENDC
.IF NE	STAR$$
	OVCMD	START
	CMPB	@R5,#<SPACE>
	BEQ	5$
	INC	R5
5$:	OJSR	PC,OCTNUM
	TSTB	@R5
	BNE	BDCOM
	MOV	(SP)+,R2
	BNE	GOTADR
.ENDC
	OVCMD	STRE
	ADD	@#USERPC,R2
GOTADR:	MOV	PC,-(SP)
	ADD	#<KMON-OVLY>-<.-OVLYST>,@SP
.IF NE	MMG$T
 OINST	SUB	VBIAS,@SP,*
.ENDC
	BIC	#<777>,@SP
 OINST	MOV	@.$SWPBL,-(SP),*
	MOV	R0,-(SP)
	OVCMD	RUNCHK
				.Assume IN$IND EQ 200
 OINST	TSTB	@.INDSTA,,*
	BPL	10$
	OADDR	INPFN+2,R0
	CMP	#<^RIND>,(R0)+
	BNE	10$
	TST	(R0)+
	BNE	10$
	CMP	#<^RSAV>,(R0)+
	BEQ	INVCNS
10$:	MOV	(SP)+,R0
	BIT	#CHAIN$,@#JSW
	BNE	15$
.IF NE	BF
	.SRESET
.IFF
	MOV	R2,-(SP)
	OJSR	PC,RSTSRS
	MOV	(SP)+,R2
.ENDC
15$:	MOV	(SP)+,R1
	MOV	(SP)+,R3
	MOV	@#SYSPTR,R5
	OJMP	BEGIN
INVCNS:	KMEROR	<Invalid control file nesting>
BDCOM:	OJMP	BADCOM
	.DSABL	LSB
.SBTTL	GET PART 2  (ALSO USED BY RUN)
	.ENABL	LSB
.IF NE	U$CL
	OVCMD	GETUCL
 .IF NE	BF
	.SRESET
 .IFF
	MOV	R2,-(SP)
	OJSR	PC,RSTSRS
	MOV	(SP)+,R2
 .ENDC
.ENDC
	OVCMD	GET1
	MOV	(SP)+,R0
	OJSR	PC,COPYFN
	OADDR	KMCBUF,R2
	.LOOKUP	CHOVLY
	BCC	10$
	CMP	#<SPACE>,@R2
	BEQ	5$
	MOV	#<SPACE>,@R2
.IF EQ	U$CL
	BR	BDCOM
.IFF
	OVCMD	UCL
	MOV	@#SYSPTR,R0
	BITB	#UCLON,CLIFLG-$RMON(R0)
	BEQ	BDCOM
	MOVB	#UCLRUN,CLITYP-$RMON(R0)
	MOV	R2,-(SP)
	CALL	STUFIT
	ADDR	UCLNAM,R0
	BR	3$
	OVCMD	UCF
	MOV	R2,-(SP)
	CALL	STUFIT
	ADDR	UCFNAM,R0
3$:
	MOV	R0,R3
	OJMP	UCLROT
.ENDC
5$:	OJMP	NOTFND
10$:	MOV	#<SPACE>,@R2
	BIT	#CHAIN$,@#JSW
	BNE	45$
	TSTB	@R5
	BEQ	15$
	MOV	#-1,@#506
15$:	INC	R5
20$:	OJSR	PC,ALPHNT
	BCS	20$
	MOV	R5,R2
	CALL	STUFIT
	TSTB	@R5
	BEQ	45$
	CMPB	#SPACE,@R5
	BNE	BDCOM
	OADDR	FILST,R0
	MOV	R0,R2
	MOV	R5,R4
25$:	TSTB	-(R5)
	BEQ	35$
	CMPB	#SPACE,@R5
	BNE	25$
	CLRB	@R5
30$:	MOVB	-(R5),(R0)+
	BNE	30$
	MOVB	#'=,-1(R0)
35$:	MOVB	-(R4),(R0)+
	BNE	35$
	MOVB	#'C&77,(R0)+
	CLRB	(R0)+
	SUB	R2,R0
	MOV	R0,R5
	OJSR	PC,DCLSPC
	SUB	R0,R2
	SUB	R0,@SP
40$:	MOVB	(R2)+,(R1)+
	DEC	R5
	BNE	40$
45$:	OJSR	PC,CCBB0
	CLR	R5
	ASL	R1
	MOV	#200,R4
CLRSB:	CLR	R0
GETBIT:	RORB	R4
	BCS	ORCCB
	INC	R5
	BITB	R4,@R2
	BEQ	GETBNU
	TST	R0
	BNE	GETBIT
	MOV	R5,R0
	BR	GETBIT
GETBNU:	TST	R0
	BEQ	GETBIT
	OADDR	KMON,R4,PUSH
	MOV	R5,-(SP)
.IF NE	MMG$T
OINST	SUB	VBIAS,R4,*
.ENDC
	CLRB	R4
	SWAB	R4
	ASR	R4
	CMP	R5,R4
	BLE	NOSCRA
	CMP	R0,R4
	BGE	ALSCRA
	MOV	R4,R5
	CALL	READSF
	MOV	R4,R0
ALSCRA:	SUB	R4,R0
	ADD	R0,R4
ALSCR1:	MOV	@SP,R5
	SUB	R4,R5
	BLE	ENDSCR
	MOV	R5,-(SP)
	ADD	R0,@SP
	CMP	(SP)+,#SWAPSZ
	BHI	OVERC1
	MOV	R0,-(SP)
	MOV	R4,R0
	CLR	-(SP)
	MOV	#1000,-(SP)
	DEC	R5
	BNE	50$
	ASR	@SP
50$:	OADDR	SYSIOB+2,R5
	MOV	@SP,@R5
	NEG	@R5
	MOV	-(R5),-(SP)
	EMT	200+CHOVLY
SFELNK:	BCS	SFERR1
	MOV	@SP,R0
	OJSR	PC,SYSK
	MOV	(SP)+,R0
	CMPB	(R0)+,(R0)+
	CMPB	(R4)+,(R4)+
	BR	ALSCR1
NOSCRA:	CALL	READSF
ENDSCR:	MOV	(SP)+,R5
	MOV	(SP)+,R4
	BR	CLRSB
ORCCB:	BISB	(R2)+,(R3)+
	DEC	R1
	BNE	GETBIT
RETRED:	RETURN
READSF:	CLR	-(SP)
	SUB	R0,R5
	SWAB	R5
	MOV	R5,-(SP)
	MOV	R0,-(SP)
	SWAB	@SP
	ASL	@SP
.IF NE	MMG$T
OINST	ADD	VBIAS,@SP,*
.ENDC
	EMT	200+CHOVLY
SFELK1:	BCC	RETRED
SFERR1:	OJMP	FIPERR
OVERC1:	OJMP	OVERC
	.DSABL	LSB
.SBTTL	Scan line for @file (continued)
	.ENABL	LSB
	OVCMD	AT2
	MOV	R5,-(SP)
	TSTB	(R5)+
	CMPB	(R5)+,#<SPACE>
	BNE	5$
	TSTB	(R5)+
5$:	CMPB	-(R5),#<DOLLAR>
	BNE	10$
	MOVB	#<SPACE>,@R5
10$:	MOV	(SP)+,R5
	MOV	R5,-(SP)
	INC	@SP
15$:	CMPB	-(R5),#<SPACE>
	BEQ	15$
	INC	R5
 OINST	MOV	.STATWD,R3,*
	BIT	#<IFDOL>,@R3
	BNE	25$
 OINST	BITB	#<IN$IND>,@.INDSTA,,*
	BEQ	20$
 OINST	BITB	#<LN$IND>,@.INDSTA,,*
	BNE	25$
20$:	OADDR	KMCBUF,R2
	CMP	R2,@SP
	BNE	25$
	BIT	#<IFIND>,@R3
	BNE	40$
25$:
 OINST	BICB	#<LN$IND>,@.INDSTA,,*
 OINST	CLR	@.CURLEV,,*
	BIC	#<IFDOL>,@R3
	BIT	#<IFACTV>,@R3
	BEQ	30$
	OJSR	PC,SVST
	CMP	-(R2),-(R2)
	CMPB	-(R2),-(R2)
	BEQ	65$
	MOV	@R2,-(SP)
	ADD	#IFSVSZ,R2
	MOV	(SP)+,@R2
	INC	(R2)+
	CLR	(R2)+
	CLR	(R2)+
 OINST	MOV	R2,@.IFSVST,,*
..ATDK	== .+2
30$:	MOV	#<^RDK >,R3
	OJSR	PC,IFILE
	INC	R5
35$:	CMPB	-(R5),#SPACE
	BEQ	35$
	TSTB	@R5
	BNE	60$
 OINST	MOV	ACCUM,-(SP),*
	OJMP	AT3
40$:
	TSTB	-1(R5)
	BEQ	70$
 OINST	MOV	SP,@.CURLEV,,*
	MOV	#<CHAINA+2>,R1
	OADDR	INDCNT+2,R0
	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
 OINST	MOV	NMIND,R0,*
	CALL	INDDNM
45$:	CMPB	#<SPACE>,-(R1)
	BEQ	45$
	TSTB	(R1)+
	OADDR	INDCNT+11,R0
50$:	MOVB	(R0)+,(R1)+
	BNE	50$
	MOVB	#<SPACE>,-1(R1)
55$:	MOVB	-(R5),(R1)+
	BNE	55$
	SUB	#<CHAINA+2>,R1
	MOV	R1,@#CHAINA
	BIS	#<SPXIT$>,@#JSW
.IF NE	MMG$T
	BIC	#<VIRT$>,@#JSW
.ENDC
	CLR	R0
	.EXIT
60$:	OJMP	BADCOM
65$:	KMEROR	<Command file nesting too deep>
70$:	OJMP	NOFILE
	.DSABL	LSB
.SBTTL	INDDNM - RAD50 to ASCII conversion routine
	.WORD	0,1,50
TBL:	.WORD	50*50
	.ENABL	LSB
INDDNM:	MOV	R4,-(SP)
	MOV	R3,-(SP)
5$:	ADDR	TBL,R3
10$:	MOV	#<-1>,R4
	CMP	#<174777>,R0
	BLO	20$
15$:	INC	R4
	SUB	@R3,R0
	BCC	15$
	ADD	@R3,R0
	TST	R4
	BEQ	25$
	CMP	#<33>,R4
	BLO	30$
	BEQ	35$
20$:	ADD	#<40>,R4
25$:	ADD	#<16>,R4
30$:	ADD	#<11>,R4
35$:	ADD	#<11>,R4
	MOVB	R4,(R1)+
	TST	-(R3)
	BNE	10$
	MOV	(SP)+,R3
	MOV	(SP)+,R4
	RETURN
	.DSABL	LSB
.SBTTL	UCL/UCF customizations and copy routine
.IF NE	U$CL
..UCFD	== .
..UCFF	== .+2
UCFNAM:	.RAD50	/SY UCF   SAV/
..UCLD	== .
..UCLF	== .+2
UCLNAM:	.RAD50	/SY UCL   SAV/
.ENDC
	.ENABL	LSB
STUFIT:	MOV	#<CHAINA+2>,R0
5$:	MOVB	-(R2),(R0)+
	BNE	5$
	SUB	#<CHAINA+2>,R0
	MOV	R0,@#<CHAINA>
	RETURN
	.DSABL	LSB
	.SBTTL	FACTOR - Factoring expander routine
	OVERLAY
.IF NE	SAVE$$
	OVCMD	SAV1
	CALLR	SAVP2
.ENDC
	.ENABL	LSB
	OVCMD	FACTOR
	MOV	R5,R0
1$:	INC	R5
	CALL	TESTD1
	BNE	1$
	MOV	R5,R1
	OADDR	FILST,R5
	MOV	R5,R3
	MOV	R0,R4
2$:	MOVB	-(R4),(R5)+
	BNE	2$
	MOV	R3,R5
3$:	CALL	TESTD2
	INC	R5
	BCC	3$
	MOV	R5,R4
	MOV	R1,R5
4$:	MOV	R1,R2
5$:	CMP	R5,@SP
	BLO	11$
	MOVB	-(R2),-(R5)
	CMP	R2,R0
	BNE	5$
	INC	R5
6$:	CMP	R5,@SP
	BLO	11$
	MOVB	(R3)+,-(R5)
	BEQ	12$
	CALL	TESTD2
	BNE	6$
	INC	R5
	BCS	9$
	MOV	R4,R2
7$:	CMP	R5,@SP
	BLO	11$
	MOVB	(R2)+,-(R5)
	CALL	TESTD1
	BEQ	8$
	CMPB	#'/,@R5
	BNE	7$
8$:	MOVB	-1(R3),@R5
	BR	4$
9$:	MOV	R5,R1
10$:	CMP	R1,@SP
	BLO	11$
	MOVB	(R3)+,-(R1)
	BNE	10$
	OJMP	SCNLIN
11$:	OJMP	LTL
12$:	OJMP	CLASIFY
	.DSABL	LSB
	.ENABL	LSB
TESTD2:	CMPB	#'),@R5
	BEQ	1$
TESTD1:	CMPB	#',,@R5
	BEQ	2$
	CMPB	#SPACE,@R5
	BEQ	2$
	CMPB	#'+,@R5
	BEQ	2$
	TSTB	@R5
	BNE	2$
1$:	SEC
2$:	RETURN
	.DSABL	LSB
.IF NE	SAVE$$
.SBTTL	SAVE (PART 2)
SAVP2:
	MOV	#9.*400+8.,R4
	OADDR	FILST,R1
	MOV	@#USERTOP,(R1)+
	MOV	@#SYSPTR,R3
	ADD	#CCB-$RMON,R3
2$:	MOV	(R3)+,(R1)+
	DECB	R4
	BNE	2$
	TSTB	@R5
	BEQ	DOSAVE
	SWAB	R4
3$:	CLR	-(R1)
	DEC	R4
	BNE	3$
	MOV	R1,R3
4$:	TSTB	@R5
	BEQ	DOSAVE
	CMPB	#' ,@R5
	BEQ	5$
	CMPB	#',,@R5
	BNE	BADSAV
5$:	CALL	SAVNUM
	MOV	R4,R2
	CMPB	@R5,#'-
	BNE	6$
	CALL	SAVNUM
	CMP	R4,R2
	BLO	BADSAV
6$:	MOV	R3,R0
	CMP	(R0)+,R4
	BHI	7$
	MOV	@#SYSPTR,R1
	CMP	R4,SYSLOW-$RMON(R1)
	BHIS	BADSAV
	MOV	R4,@R3
7$:	OJSR	PC,NOTHIR
	BR	4$
DOSAVE:	OADDR	KMON,R4
	CLRB	R4
	SWAB	R4
	ASR	R4
 OINST	MOV	FILST,R1,*
	BEQ	BADSAV
	ADD	#511.,R1
	CLRB	R1
	SWAB	R1
	ASR	R1
	MOV	#3*400+CHOVLY,R0
	EMT	374
	MOV	@SP,R0
	OJSR	PC,COPYFN
	.ENTER	CHOVLY,(SP)+,R1
	BCS	ENTERR
	SUB	R4,R1
	BPL	1$
	ADD	R1,R4
1$:	MOV	#1000,R0
 OINST	MOV	.USRTOP,R3,*
 OINST	CLR	@.BLKEY,,*
2$:	MOV	-(R0),-(R3)
	TST	R0
	BNE	2$
	OADDR	FILST,R2
	MOV	(R2)+,USERTOP(R3)
	MOV	R3,R5
	ADD	#360,R5
	MOV	#8.,R0
3$:	MOV	(R2)+,(R5)+
	DEC	R0
	BNE	3$
	.WRITW	CHOVLY,R3,#400
	BCS	WSVERR
	DEC	R4
	BLE	4$
	CLR	-(SP)
	MOV	R4,-(SP)
	SWAB	@SP
	MOV	#1000,-(SP)
	MOV	#1,R0
	EMT	220+CHOVLY
	BCS	WSVERR
4$:	CLR	R3
	INC	R4
5$:	DEC	R1
	BMI	7$
	CLR	-(SP)
	MOV	#1000,-(SP)
	DEC	R1
	BPL	6$
	ASR	@SP
6$:	OADDR	SYSIOB+2,R5
	MOV	@SP,@R5
	MOV	-(R5),-(SP)
	MOV	R3,R0
	OJSR	PC,SYSK
	MOV	R4,R0
	EMT	220+CHOVLY
	BCS	WSVERR
	TST	(R3)+
	CMPB	(R4)+,(R4)+
	BR	5$
7$:	.CLOSE	CHOVLY
	BCC	SVRTS
	KMRTMG	<File created; protected file already exists>,WARN$,PFILE
SVRTS:	RETURN
SAVNUM:	MOV	R5,-(SP)
	DEC	@SP
	OJSR	PC,OCTNUM
	MOV	(SP)+,R4
	CMP	(SP)+,R5
	BNE	SVRTS
BADSAV:	KMEROR	<Parameters>
WSVERR:	KMRTMG	<Output error>,,PFILE
ENTERR:	CMPB	@#ERRBYT,#3
	BNE	FROOM
	KMRTMG	<Protected file already exists>,,PFILE
FROOM:	KMRTMG	<Device full>,,PFILE
.ENDC
.SBTTL	INDIRECT FILE EXPANSION (CONT'D)
OVERLAY
.IF  NE GT$$
OVCMD	GT
	TST	GTOK
	BNE	1$
	CALLR	GTCMD
1$:
 OINST	CLR	OVLIOB,,*
	OVLINK	GT
GTOK:	.WORD	0
.ENDC
OVCMD	INDF1
.ENABL	LSB
INDF1:
 OINST	MOV	@.IFSVST,R2,*
 OINST	TST	IFOPN,,*
	BNE	1$
	MOV	#3*400+CHOVLY,R0
	EMT	374
	.REOPEN	CHOVLY,R2
 OINST	MOV	SP,IFOPN,,*
1$:	OADDR	IFBUFR,R3
	MOV	-(R2),R1
 OINST	CMP	IFBN,R1,*
	BEQ	2$
.IF NE	GT$$
	MOV	SP,GTOK
.ENDC
	.READW	CHOVLY,R3,#IFBFSZ*400,R1
	BCS	IFRDER
 OINST	MOV	R1,IFBN,,*
2$:	MOV	-(R2),R4
	ADD	R3,R4
3$:	CMP	@R2,#IFBFSZ*1000-1
	BLOS	4$
	CLR	(R2)+
	INC	(R2)+
	BR	1$
.ASSUME	IFBFSZ	EQ	1
4$:	INC	@R2
	MOVB	(R4)+,R0
	BEQ	3$
INDF2:	MOV	(SP)+,R3
	MOV	(SP)+,R1
 OINST	MOV	SP,DATAFG,,*
	OJSR	R2,CHARC1
	 BR	10$
	OJSR	R2,CNTCK
	 BR	9$
	CMP	R5,R3
	BNE	5$
	INC	R1
 OINST	CMPB	CMNTF,#XPOINT,*
	BEQ	8$
5$:	MOV	R5,-(SP)
6$:	TSTB	-(R5)
	BNE	7$
SCNDN1:	OJMP	SCNDUN
7$:	CMPB	@R5,#ATSIGN
	BNE	6$
 OINST	CLR	DATAFG,,*
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
 OINST	BIT	#IFLIF,@.STATWD,,*
	BNE	IFNERR
.ENDC
.IIF EQ LNK$IF,	.LIST
	BR	6$
8$:
 OINST	TST	IFOPN,,*
	BNE	10$
 OINST	MOV	.STATWD,R3,*
	BR	IFEOF2
9$:
 OINST	TST	IFOPN,,*
	BNE	10$
	OJMP	ILCNT
10$:	MOV	R1,-(SP)
	MOV	R3,-(SP)
	BR	3$
.DSABL	LSB
IFRDER:	TSTB	@#ERRBYT
	BEQ	IFEOF1
IFERR:	KMEROR	<Command file I/O error>,,UNCON$
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
IFNERR:	KMEROR	<Invalid command file nesting>
.ENDC
.IIF EQ LNK$IF,	.LIST
.ENABL	LSB
IFEOF1:	OJSR	PC,SVST
 OINST	MOV	#-1,IFBN,,*
	SUB	#6,R2
 OINST	MOV	.STATWD,R3,*
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
	BIT	#IFLIF,@R3
	BEQ	1$
	BIS	#IFLEOF,@R3
.ENDC
.IIF EQ LNK$IF,	.LIST
1$:	TSTB	@R2
	BEQ	2$
 OINST	CMPB	@.INBFPT,#177,*
	BEQ	2$
 OINST	SUB	#IFSVSZ,@.IFSVST,,*
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
	BIT	#IFLEOF,@R3
	BNE	3$
.ENDC
.IIF EQ LNK$IF,	.LIST
	BR	INDF1
2$:
 OINST	BIS	#IFEOF$,@.STATWD,,*
	MOV	R2,R4
	MOV	R1,-(SP)
 OINST	MOV	SP,@.EXTFL,,*
 OINST	CLR	@.IFSVST,,*
	OJSR	PC,PUTBLK
	MOV	(SP)+,R1
	BCC	3$
	ADD	R0,R5
	ADD	R0,@SP
3$:
 OINST	CLR	@.EXTFL,,*
	MOV	#LF,R0
	CMP	R5,@SP
	BNE	INDF2
	CMP	(SP)+,(SP)+
IFEOF2:
 OINST	CLR	DATAFG,,*
4$:	BIC	#IFACTV!IFEOF$!IFLEOF,@R3
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
	BIT	#IFLIF,@R3
	BNE	5$
.ENDC
.IIF EQ LNK$IF,	.LIST
	OJMP	STRT
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
5$:	OJMP	SCN2
.ENDC
.IIF EQ LNK$IF,	.LIST
.DSABL	LSB
	OVCMD	SCN0
.ENABL	LSB
SCN0:	MOV	R5,R0
	SUB	R4,R0
	BEQ	66$
	MOV	R0,-(SP)
	CMPB	-(R5),#CTRLC
	BNE	1$
 OINST	CLR	DATAFG,,*
1$:
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
 OINST	BIT	#IFLIF,@.STATWD,,*
	BNE	2$
.ENDC
.IIF EQ LNK$IF,	.LIST
	BISB	#200,@R5
2$:	INC	R5
SCN1:
 OINST	BIT	#IFEOF$,@.STATWD,,*
	BEQ	3$
 OINST	BIC	#IFEOF$!IFACTV,@.STATWD,,*
 OINST	CLR	DATAFG,,*
3$:
.IIF EQ LNK$IF,	.NLIST
.IF NE	LNK$IF
 OINST	BIT	#IFLIF,@.STATWD,,*
	BNE	4$
.ENDC
.IIF EQ LNK$IF,	.LIST
 OINST	CLRB	ATFLAG,,*
4$:	MOV	@SP,R0
	OJSR	PC,DCLSP1
	SUB	R0,R5
	MOV	(SP)+,R0
5$:	MOVB	-(R5),(R1)+
	DEC	R0
	BNE	5$
 OINST	MOV	R1,ENBFPT,,*
	OJSR	PC,SVST
66$:	OJMP	SCN3
.DSABL	LSB
.SBTTL	SCAN LINE FOR @FILE (CONT'D)
	OVCMD	AT4
AT4:	MOV	(SP)+,R3
	MOV	R3,R0
	.LOOKUP	CHOVLY
	BCS	CMDFNF
 OINST	MOV	SP,IFOPN,,*
 OINST	MOV	#-1,IFBN,,*
 OINST	BIT	#IFACTV,@.STATWD,,*
	BNE	3$
	CLR	R4
 OINST	BISB	@.IFMXNST,R4,*
	MOV	#IFSVSZ,R0
1$:	DEC	R4
	BEQ	2$
	ADD	#IFSVSZ,R0
	BR	1$
2$:
 OINST	MOV	SP,@.EXTFL,,*
	OJSR	PC,GETBLK
	CLRB	(R4)+
 OINST	MOVB	@.IFMXNST,@R4,*
	DECB	(R4)+
	CLR	(R4)+
	CLR	(R4)+
 OINST	MOV	R4,@.IFSVST,,*
3$:
 OINST	CLR	@.EXTFL,,*
 OINST	BIS	#IFACTV,@.STATWD,,*
 OINST	SUB	ACCUM,@SP,*
	MOV	(SP)+,R0
	MOV	(SP)+,R3
	MOV	(SP)+,R1
	SUB	R3,R5
	SUB	R5,R1
	MOV	(SP)+,R5
	SUB	R0,R5
	SUB	R0,R3
	OJMP	INDFIL
CMDFNF:
 OINST	TST	@.IFSVST,,*
	BEQ	4$
 OINST	SUB	#<IFSVSZ>,@.IFSVST,,*
4$:	MOV	R3,R0
	OJSR	PC,COPYFN
	OJMP	NOTFND
.IIF GT <.-OVLYST>-<1000>, .ERROR
.IF EQ	GT$$
	OVERLAY
.IFF
.SBTTL	GT ON/OFF
GTCMD:	MOV	@#SYSPTR,R1
	ADD	#CONFIG-$RMON,R1
	BIT	#HWDSP$,(R1)+
	BEQ	BCELNK
.IF NE	BF
	MOV	FCNTXT-SCROLL(R1),R4
	BEQ	20$
	BIT	#NORUN$,@R4
	BEQ	BCELNK
20$:
.ENDC
	OADDR	DEVSTS,R2
	OJSR	PC,GETNAM
	CMP	#<^RON >,@R2
	BEQ	GTON
	TSTB	@R5
	BNE	BCELNK
	CMP	#<^ROFF>,@R2
	BEQ	GTOFF
BCELNK:	OJMP	BADCOM
.ENABL	LSB
GTON:	TST	@R1
	BNE	BCELNK
	CALL	VSTOP
	ADDR	TSTIT,R0
	MOV	R0,@#DPC
2$:	MOV	@#DSR,R0
	BPL	2$
	BIT	#40,R0
	BEQ	3$
	MOV	(PC)+,R3
YPS12:	.WORD	1350
	MOV	(PC)+,R4
LCT12:	.WORD	37
.IF EQ	BF
	MOV	#72.,-(SP)
.ENDC
	BR	4$
3$:	MOV	(PC)+,R3
YPS17:	.WORD	1750
	MOV	(PC)+,R4
LCT17:	.WORD	50
.IF EQ	BF
	MOV	#80.,-(SP)
.ENDC
4$:
.DSABL	LSB
.ENABL	LSB
1$:	TSTB	@R5
	BEQ	5$
2$:	CMPB	#'/,@R5
	BNE	BCELNK
	MOVB	-(R5),R0
	CMPB	#':,-(R5)
	BNE	BCELNK
	MOV	R5,-(SP)
	OJSR	PC,DECNUM
	DEC	R5
	CMPB	1(R5),#PERIOD
	BEQ	6$
	TST	(SP)+
	MOV	@SP,R5
	OJSR	PC,OCTNUM
6$:	MOV	(SP)+,@SP
	CMPB	#'T,R0
	BNE	4$
	MOV	(SP)+,R3
	BEQ	BCELNK
	CMP	#1777,R3
	BLT	BCELNK
	BR	1$
4$:	CMPB	#'L,R0
	BNE	BCELNK
	MOV	(SP)+,R4
	BEQ	BCELNK
	CMP	#41.,R4
	BLT	BCELNK
	BR	1$
5$:	MOV	R3,-(SP)
	MOV	R4,-(SP)
	MOV	#SCRSIZ,R0
	ADD	(PC)+,R0
BUFSIZ:	 .WORD	4000
	MOV	R1,-(SP)
	MOV	SP,@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	OJSR	PC,GETBLK
	MOV	(SP)+,R1
	BCC	7$
.IF NE	BF
	SUB	R0,4(SP)
.IFF
	SUB	R0,6(SP)
.ENDC
7$:	CLR	@<.EXTFL-OVLY>-<.+4-OVLYST>(PC)
	ADDR	SCRIOB,R5
	MOV	R4,@R5
	MOV	(PC)+,R0
	.WORD	SCRBLK + <$RTEND - RMNUSR +777 / 1000>
	ADD	@<.$MONB-OVLY>-<.+4-OVLYST>(PC),R0
.IF EQ	MMG$T
	CALL	@<.$SYS-OVLY>-<.+4-OVLYST>(PC)
.IFF
	OJSR	PC,RWSYS
.ENDC
	BCS	10$
	MOV	BUFSIZ,R0
	CALLR	<SCINIT-SCTPS>(R4)
10$:	OJSR	PC,PUTBLK
	OJMP	SYRDER
.DSABL	LSB
GTOFF:	MOV	@R1,R4
	BEQ	2$
	CALL	VSTOP
	OINTOF	3$
	CLR	@R1
	BICB	#14,LOWMAP+15-SCROLL(R1)
	MOV	#SCNOP-SCROLL,R2
	ADD	R1,R2
	MOV	R2,<SCLNK2-SCROLL>(R1)
.IF EQ	BF
	MOV	#42704,<TTSCRL-SCROLL>(R1)
	MOV	#177600,<TTSCRL+2-SCROLL>(R1)
.ENDC
	MOV	<SCPSSV-SCTPS>(R4),<TTPS-SCROLL>(R1)
	MOV	<SCPBSV-SCTPS>(R4),<TTPB-SCROLL>(R1)
	OINTON	3$
.IF NE	BF
	MOV	@#SYSPTR,R1
	MOV	GTVECT-$RMON(R1),R1
	ADD	#10,R1
	ADDR	UN.AREA,R2
	.UNPROT	R2,R1
.ENDC
	OJSR	PC,PUTBLK
	BCC	2$
	ADD	R0,@SP
2$:	RETURN
3$:	RTI
DPC=172000
DSR=172002
VSTOP:	ADDR	STPIT,R2
1$:	MOV	R2,@#DPC
	TST	@#DSR
	BPL	1$
	RETURN
.IF NE	BF
UN.AREA:.BLKW	5
.ENDC
TSTIT:	114000
	0
	1350
	104000
	77
STPIT:	173000
SCRIOB:	.WORD	0
	.WORD	SCRTOT
	.WORD	0
.ENDC
.IF NE	GT$$
.SBTTL	VT11 SHIFT OUT INTERRUPT SERVICE
OVERLAY
SCRBLK=OVLYN
SCBGIN=.
SCTPS:	.WORD	0
SCTPB:	.WORD	0
SCMAX:	.WORD	0
SCLINK:	DJMP
	SCTOP-SCTPS
SCTC:	.WORD	SCTRLC-SCTPS
SCPVEC:	.WORD	V.TPS
SCECHO:	.BYTE	1
SCTTF:	.BYTE	0
SCSTOP:	SCHEAD-2-SCTPS
SCHDP:	.WORD	SCHEAD-SCTPS
SCCHMX:	.WORD	0
SCMCNT:	.WORD	0
SCADVF:	.BYTE	0
SCLOCK:	.BYTE	0
SCPSSV:	.WORD	0
SCPBSV:	.WORD	0
$SCINT:	MOV	@#SYSPTR,-(SP)
	JSR	R5,@(SP)+
	 .WORD	^C<PR0>&PR7
	MOV	R3,-(SP)
	MOV	SCTPB,R3
SC1MOR:	MOV	SCTRLR,R5
	TSTB	SCTTF
	BNE	8$
	TSTB	SCADVF
	BNE	SCRESM
	CLR	@SCPSSV
	TST	SCTPS
	BEQ	SCRESM
1$:	TST	SCTPB
	BNE	2$
	CLR	-(SP)
	MOV	@SCPVEC,R4
	CALL	@R4
2$:	MOV	SCTPB,R3
.IF NE	BF
.IFTF
	CMP	#10,R3
	BNE	4$
	DEC	R5
	CMP	R5,SCBUFS
	BHIS	3$
	MOV	SCBUFE,R5
3$:	CMPB	#12,@R5
	BEQ	5$
	DEC	SCCHCT
	CLR	R3
	CLR	SCTPB
	CLRB	@R5
.IFF
	DEC	SC72CT
.IFTF
	BR	SCTRLR-2
4$:	CMPB	#16,R3
	BNE	6$
5$:	CLR	R3
6$:	CMPB	#7,R3
	BEQ	7$
	TSTB	SCECHO
	BPL	10$
7$:	INCB	SCTTF
8$:	TSTB	@SCPSSV
	BEQ	SCRESM
	CLRB	SCTTF
	MOV	R3,@SCPBSV
10$:	CLR	SCTPB
	TST	R3
	BEQ	SCRESM
	CALL	SCNSRT
.ENABL	LSB
.IFF
	CMPB	#CR,R3
	BNE	1$
	CLR	SC72CT
1$:
.IFTF
	CMPB	#LF,R3
	BNE	2$
	CALL	SCPACK
2$:
.IFF
	CMP	SC72CT,SCLWID
	BLT	5$
	MOV	(PC)+,R3
	 .ASCII	<CR><LF>
	CALL	SCNSRT
	SWAB	R3
	CALL	SCNSRT
	CALL	SCPACK
	CLR	SC72CT
5$:
.IFTF
	MOV	R5,(PC)+
SCTRLR:	 .WORD	SCBUFR-SCTPS
	CLRB	(R5)+
	BIC	#1,R5
	CALL	SCWRAP
	MOV	#SOCODE,@R5
	TST	SCLF
	BEQ	SC1MOR
	CLR	SCLF
SCRESM:	MOV	(SP)+,R3
SCSTRT:	MOV	SCHDP,@#DPC
	RETURN
.IFF
SCLWID:	.WORD	72.
.IFTF
.DSABL	LSB
.ENABL	LSB
SCNSRT:	MOVB	R3,(R5)+
	INC	(PC)+
SCCHCT:	 .WORD	0
.IFF
	CMPB	R3,#40
	BLT	1$
	INC	(PC)+
SC72CT:	 .WORD	0
.IFTF
1$:	CMP	SCCHCT,SCCHMX
	BLT	3$
	TST	SCLNCT
	BNE	2$
	MOVB	#LF,-(R5)
	INC	SCLNCT
2$:	CALL	SCDEL
3$:	CALL	SCWRAP
	RETURN
.DSABL	LSB
.ENDC
SCPACK:	INC	(PC)+
SCLF:	 .WORD	0
	INC	(PC)+
SCLNCT:	 .WORD	0
	CLR	R3
	BIT	#1,R5
	BEQ	2$
	CALL	SCNSRT
2$:	CMP	SCLNCT,SCMAX
	BLT	3$
	CALL	SCDEL
	BR	2$
3$:	RETURN
.ENABL	LSB
SCWRAP:	CMP	R5,SCBUFE
	BLO	1$
	MOV	(PC)+,R5
SCBUFS:	 .WORD	SCBUFR-SCTPS
1$:	RETURN
.DSABL	LSB
.ENABL	LSB
SCDEL:	MOV	SCPNTR,R4
1$:	MOVB	@R4,-(SP)
	CALL	SCCLR
	CMPB	#LF,(SP)+
	BNE	1$
	DEC	SCLNCT
	BIT	#1,R4
	BEQ	2$
	CALL	SCCLR
2$:	MOV	R4,SCPNTR
	TSTB	SCLOCK
	BEQ	5$
	INC	(PC)+
SCPGCT:	 .WORD	1
	CMP	SCPGCT,SCMAX
	BLT	5$
	INCB	SCADVF
5$:	RETURN
.DSABL	LSB
SCCLR:	DEC	SCCHCT
	CLRB	(R4)+
	CMP	R4,(PC)+
SCBUFE:	 .WORD	0
	BLO	1$
	MOV	SCBUFS,R4
1$:	RETURN
.SBTTL	CONTROL CHARACTER INTERCEPT ROUTINE
.ENABL	LSB
SCEXAM:
.IF NE	BF
	MOV	@#30,-(SP)
	SUB	#2,@SP
	TSTB	@(SP)+
	BPL	99$
.ENDC
	CMP	#'A-100,R0
	BEQ	3$
	CMP	#'Q-100,R0
	BEQ	2$
	CMP	#'S-100,R0
	BEQ	4$
99$:	CMP	#'C-100,R0
	BEQ	1$
	CMP	#'E-100,R0
	BNE	7$
	NEGB	SCECHO
	BR	6$
1$:
.IF NE	BF
	TST	I.SCCA(R5)
.IFF
	TST	I.SCCA-TTIBUF-4(R5)
.ENDC
	BNE	7$
	CALL	SCDSTP
	CLR	SCADVF
.IF EQ	BF
	CALL	SCTRLC
.IFF
	CALL	SCSTRT
.ENDC
7$:	TST	R0
	RETURN
2$:	CLRB	SCLOCK
3$:	MOV	#1,SCPGCT
	CLR	R0
	BR	5$
4$:	MOVB	R0,SCLOCK
5$:	MOVB	R0,SCADVF
6$:	CLR	R0
	RETURN
.DSABL	LSB
SCTRLC:	MOV	#SCTOP-SCTPS,SCLINK+2
	MOV	SCMCNT,SCMAX
	MOV	R1,-(SP)
	MOV	@#54,R1
	BIC	#GTLNK$,<CONFIG-$RMON>(R1)
	MOV	<GTVECT-$RMON>(R1),R1
	CLR	(R1)+
	CLR	(R1)+
	CLR	(R1)+
	CLR	(R1)+
	MOV	(PC)+,(R1)+
SCILOC:	 .WORD	$SCINT-SCTPS
	MOV	(PC)+,@R1
	 .WORD	PR7
	MOV	(SP)+,R1
SCSLNK:	CALLR	SCSTRT
SCDSUP:	MOV	SCSTOP,@#DPC
SCDSTP:	BIT	#100100,@#DSR
	BEQ	SCDSUP
	RETURN
.IF EQ	BF
SCSTIT:	BIC	#177600,R4
	TST	@#DPC
	BEQ	SCSLNK
	RETURN
.ENDC
.SBTTL	HEAD OF SCROLL BUFFER
	SHORTV=104000
	STATSA=170000
	SCSYNC=4
	MAXSX=17600
	MAXSY=77
	MISVX=20000
	MISVY=100
	DNOP=164000
	DSTOP=173400
	DJMP=160000
	CHAR=100000
	POINT=114000
	INT4=3000
	LPOFF=100
	BLKON=30
	BLKOFF=20
	SOCODE=77416
	JSRABS=004737
	173000
SCHEAD:	CHAR!BLKON
	.WORD	77417
	POINT!BLKOFF!LPOFF!INT4
	.WORD	0
SCYPS:	.WORD	0
	DJMP
	SCLINK-SCTPS
SCTOP:	.REPT	18.
	SHORTV
	MAXSX+MAXSY+MISVY
	SHORTV
	MAXSX+MAXSY+MISVX
	.ENDR
	CHAR!BLKOFF!LPOFF
V60.INT:
.IF EQ	VS60$
	171040
.IFF
	171040
	DNOP
	DNOP
	DNOP
	164350
	164650
	155264
.ENDC
	DJMP
SCPNTR:	.WORD	SCBUFR-SCTPS
SLT.V60:
SCBUFR:  DNOP
	.WORD	SOCODE
	.MACRO	RELOC TAG
	ADD	R4,TAG
	.ENDM
SCINIT:
	MOV	@#SYSPTR,R2
	BIT	#VS6$0,CONFG2-$RMON(R2)
	BNE	1$
.IF NE	VS60$
	ADDR	V60.INT,R2
	MOV	#171040,(R2)+
	.REPT	6
	MOV	#DNOP,(R2)+
	.ENDR
.ENDC
	MOV	#DNOP,SLT.V60
	BR	2$
1$:	MOV	#STATSA+SCSYNC,SLT.V60
2$:	MOV	(SP)+,<SCMCNT-SCTPS>(R4)
	MOV	(SP)+,<SCYPS-SCTPS>(R4)
.IF EQ	BF
	MOV	(SP)+,<SCLWID-SCTPS>(R4)
.ENDC
	MOV	R4,@R1
	MOV	R0,<SCCHMX-SCTPS>(R4)
	RELOC	SCTC
	RELOC	SCLINK+2
	RELOC	SCTRLR
	RELOC	SCBUFS
	RELOC	SCPNTR
	RELOC	SCSTOP
	RELOC	SCHDP
	RELOC	SCYPS+4
	RELOC	SCILOC
	RELOC	SCTRLC+2
	MOV	SCPNTR,R3
	ADD	SCCHMX,R3
	SUB	#2,SCCHMX
	MOV	R3,SCBUFE
	MOV	#DJMP,(R3)+
	MOV	SCPNTR,(R3)+
	MOV	@#SYSPTR,R0
	MOV	#PR7,-(SP)
	MOV	R0,-(SP)
	ADD	#$MTPS-$RMON,@SP
	CALL	@(SP)+
.IF EQ	BF
	MOV	R4,R3
	ADD	#SCSTIT-SCTPS,R3
	MOV	#TTSCRL-$RMON,R2
	ADD	R0,R2
	MOV	#JSRABS,(R2)+
	MOV	R3,@R2
.IFTF
	MOV	R4,R3
	ADD	#SCEXAM-SCTPS,R3
	MOV	R0,R2
	ADD	#SCLNK2-$RMON,R2
.ENDC
	MOV	R3,@R2
	MOV	<TTPS-SCROLL>(R1),SCPSSV
	MOV	R4,<TTPS-SCROLL>(R1)
	TST	(R4)+
	MOV	<TTPB-SCROLL>(R1),SCPBSV
	MOV	R4,<TTPB-SCROLL>(R1)
	MOV	<GTVECT-SCROLL>(R1),R2
	ADD	#10,R2
	MOV	#1,R4
	MOV	R1,R0
	ADD	#LOWMAP-SCROLL,R0
	MOV	<KMLOC-SCROLL>(R1),R1
	CALL	<SETBT2-KMON>(R1)
	CALL	SCTRLC
	CALL	SCSTRT
	MOV	@SP,-(SP)
	CLR	2(SP)
	MOV	@#SYSPTR,-(SP)
	ADD	#$MTPS-$RMON,@SP
	CALLR	@(SP)+
SCEND=.
SCRSIZ=SCBUFR-SCBGIN+4
SCRTOT=<SCEND-SCBGIN+4>/2
.ENDC
.SBTTL	END
.IIF DF	NLOVLY,	.LIST
.END
                                                                                                                                                                                                                                                     