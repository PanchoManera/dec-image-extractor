.MCALL .MODULE
.MODULE MTTEMT,VERSION=04,COMMENT=<Multi-terminal EMT service>

;                  COPYRIGHT (c) 1984, 1985, 1986 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;                         ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
.SBTTL
.SBTTL	********************************************
.SBTTL	*					   *
.SBTTL	*	 MULTI-TERMINAL EMT SERVICE	   *
.IF EQ	BF
.SBTTL	*	 FOR THE SINGLE JOB MONITOR	   *
.IFF
.IF EQ  MMG$T
.SBTTL	*   FOR THE FOREGROUND/BACKGROUND MONITOR  *
.IFF
.SBTTL	*      FOR THE EXTENDED MEMORY MONITOR     *
.ENDC
.ENDC
.SBTTL	*					   *
.SBTTL	********************************************
.SBTTL
.SBTTL	Definitions
DSECT	GLOBAL=NO
	DS	M.TSTS,,,GLOBAL
	DS	M.TST2,,,GLOBAL
	DS	M.TFIL,,BYTE,GLOBAL
	DS	M.FCNT,,BYTE,GLOBAL
	DS	M.TWID,,BYTE,GLOBAL
	DS	M.TSTW,,BYTE,GLOBAL
M.BLGH	= ..TEMP
.SBTTL	Multi-terminal EMT dispatcher
.PSECT	MTEMT$
.ENABL	LSB
M$TTIO::CMP	#MTTIMX,R4
	BLOS	8$
	MOVB	(R1)+,R3
	CMP	#TCBMAX,R3
	BLOS	7$
	CLR	R2
	BISB	@R1,R2
	MOV	R0,@SP
.IF NE	MMG$T
	MOV	R4,R1
	ASR	R1
	ADD	PC,R1
	MOVB	BLKSIZ-.(R1),R1
.ENDC
	CMP	#10*2,R4
	BEQ	1$
	ASL	R3
	ADD	PC,R3
	MOV	TCBLST-.(R3),R3
	TST	T.CSR(R3)
	BEQ	7$
	CMP	#5*2,R4
	BEQ	5$
	CMP	#1*2,R4
	BEQ	1$
.IF NE	BF
	CMP	R5,T.OWNR(R3)
	BNE	6$
.IFF
	TST	T.OWNR(R3)
	BEQ	6$
.ENDC
1$:
.IF NE	MMG$T
	CMP	R4,#1*2
	BLOS	4$
	CMP	R4,#3*2
	BHI	3$
	MOV	R2,-(SP)
	BEQ	2$
	MOV	R2,R1
2$:	JSR	PC,ACHBKM
	MOV	(SP)+,R2
	BCS	9$
	BR	5$
3$:	CMP	R4,#6*2
	BLOS	5$
4$:	JSR	PC,ACHBKM
	BCS	9$
.ENDC
5$:	ADD	PC,R4
	MOV	MTTLST-.(R4),-(SP)
	ADD	PC,@SP
MTTDSP:	JSR	PC,@(SP)+
	BCC	10$
	EMTERR+0
	MOVB	R1,@#ERRBYT
10$:
.IF NE	BF
	JMP	EMTRTI
.IFF
	JMP	EMTDON
.ENDC
6$:	EMTERR+1
	BR	10$
7$:	EMTERR+2
	BR	10$
8$:	EMTERR+3
	BR	10$
	EMTERR+4
	BR	10$
.IF NE	MMG$T
9$:	EMTERR+5
	BR	10$
.ENDC
.DSABL	LSB
.SBTTL	Multi-terminal dispatch tables
MTTLST:	.WORD	M$TTST-MTTDSP
	.WORD	M$TTGT-MTTDSP
	.WORD	M$TTIN-MTTDSP
	.WORD	M$TOUT-MTTDSP
	.WORD	M$RSTO-MTTDSP
	.WORD	M$ATCH-MTTDSP
	.WORD	M$DTCH-MTTDSP
	.WORD	M$PRNT-MTTDSP
	.WORD	M$STAT-MTTDSP
MTTIMX	= . - MTTLST
.IF NE	MMG$T
BLKSIZ:	.BYTE	M.BLGH
	.BYTE	M.BLGH
	.BYTE	1
	.BYTE	1
	.BYTE	0
	.BYTE	2
	.BYTE	0
	.BYTE	1
	.BYTE	20
	.EVEN
.ENDC
.SBTTL	.MTSET - Set terminal characteristics EMT
M$TTST::MOV	R3,R1
	MOV	@R1,-(SP)
	BIC	#^C<REMOT$>,@SP
	MOV	(R0)+,R2
	BIC	#REMOT$,R2
	BIS	(SP)+,R2
	MOV	R2,(R1)+
	TST	T.STAT(R3)
	BPL	1$
	BIC	(PC)+,R2
	 .WORD	^C<TTSPC$!TTLC$!TCBIT$>
	MOV	@#JSW,-(SP)
	BIC	(PC)+,@SP
	 .WORD	<TTSPC$!TTLC$!TCBIT$>
	BIS	R2,@SP
	MOV	(SP)+,@#JSW
1$:	MOV	(R0)+,(R1)+
	MOV	(R0)+,(R1)+
	MOVB	@R0,@R1
	JSR	PC,TTRSEC
.IF NE	DZ11$N
	BIT	#DZ11$,T.STAT(R3)
	BEQ	3$
	MOV	@R3,R1
	BIC	#^C<LINSP$>,R1
	BISB	T.CNF2(R3),R1
	ASLB	R1
	ASLB	R1
	ASLB	R1
	BISB	T.PUN(R3),R1
	BIS	#DZRCO$,R1
	MOV	T.CSR(R3),R2
.IF EQ	BF
2$:	TSTB	T.OCTR(R3)
	BNE	2$
.IFF
	JSR	PC,TTOEWT
.ENDC
	MOV	R1,DZ.LPR(R2)
3$:
.ENDC
	CLC
	RTS	PC
.SBTTL	.MTGET - Get status EMT
M$TTGT::MOV	R3,R1
	MOV	(R1)+,(R0)+
	MOV	(R1)+,(R0)+
	MOV	(R1)+,(R0)+
	MOVB	(R1)+,(R0)+
	MOVB	T.STAT+1(R3),@R0
	MOV	T.OWNR(R3),R2
	BEQ	MTTER1
.IF EQ	BF
	CLC
.IFF
	CMP	R5,R2
	BNE	MTTER4
.ENDC
	BIC	#CTRLC$,T.STAT(R3)
	RTS	PC
MTTER1:	MOV	#1,R1
MTTERC:	SEC
	RTS	PC
.SBTTL	.MTIN - Character input EMT
.ENABL	LSB
M$TTIN::MOV	R0,R4
	MOV	R2,-(SP)
1$:	JSR	PC,MTTIN
	BCS	5$
	BNE	2$
	TST	T.STAT(R3)
	BPL	2$
.IF NE	BF
	TST	I.SCCA(R5)
.IFF
	TST	I.SCCA
.ENDC
	BEQ	4$
2$:	MOVB	R0,(R4)+
	INC	4(SP)
	DEC	@SP
	BGT	1$
3$:	TST	(SP)+
	RTS	PC
4$:	CMP	(SP)+,(SP)+
	JMP	GOEXIT
5$:	CLR	R1
	COM	(SP)+
	RTS	PC
.SBTTL	.MTOUT - Single character output EMT
M$TOUT::MOV	R0,-(SP)
	JSR	PC,TTRSEC
6$:	MOV	@SP,R0
	MOVB	@R0,R0
	MOV	R2,-(SP)
	JSR	R1,MTTPUT
	 .WORD	TCBIT$
	MOV	(SP)+,R2
	BCS	5$
	INC	@SP
	INC	4(SP)
	DEC	R2
	BGT	6$
	BR	3$
.DSABL	LSB
.SBTTL	.MTRCTO - Reset CTRL/O EMT
M$RSTO::JSR	PC,TTRSEC
.IF NE	BF
	BPL	1$
	CLRB	I.OCTR+1(R5)
	RTS	PC
1$:
.ENDC
	CLRB	T.OCTR+1(R3)
	RTS	PC
.SBTTL	.MTATCH - Attach to terminal EMT
.ENABL	LSB
M$ATCH::
.IF NE	BF
	MOV	R5,R2
	MOV	SP,R1
	ENSYS	4$
	BIT	#SHARE$,T.STAT(R3)
	BEQ	1$
	CMP	R3,I.CNSL(R2)
	BNE	3$
1$:	MOV	R2,R5
	MOV	T.OWNR(R3),R2
	BEQ	2$
	CMP	R5,R2
	BNE	3$
2$:	MOVB	I.JNUM(R5),T.JOB(R3)
	MOV	R5,T.OWNR(R3)
	CLR	R1
3$:	RTS	PC
4$:	TST	R1
	BNE	MTTER4
.IFF
	MOV	R5,T.OWNR(R3)
.ENDC
.IF NE	MAT$S
.IF EQ	MMG$T
	MOV	R0,T.AST(R3)
.IFF
	MOV	R0,R2
	BEQ	5$
	JSR	PC,$RELOC
5$:	MOV	R2,T.AST(R3)
	MOV	R1,T.AST+2(R3)
.ENDC
.ENDC
	JMP	TTRSEC
.IF NE	BF
MTTER4:	MOV	I.JNUM(R2),2(SP)
	MOV	#4,R1
	BR	MTTERC
.ENDC
.DSABL	LSB
.SBTTL	.MTDTCH - Detach from a terminal EMT
M$DTCH::
.IF EQ	BF
	TST	T.STAT(R3)
	BMI	1$
.IFF
	BIT	#SHARE$,T.STAT(R3)
	BNE	5$
.ENDC
	BIS	#DTACH$,T.STAT(R3)
	TSTB	@R3
	BPL	1$
.ASSUME	PAGE$	EQ	200
	MOV	R4,-(SP)
	MOV	T.CSR(R3),R4
	JSR	PC,CTRL.Q
	MOV	(SP)+,R4
1$:
.IF EQ	BF
	TSTB	T.OCTR(R3)
	BNE	1$
	TST	T.STAT(R3)
	BMI	6$
.IFF
	JSR	PC,TTOEWT
	TST	T.STAT(R3)
	BMI	6$
.ENDC
	MOV	R3,R2
	ADD	#T.TTLC,R2
	CLR	(R2)+
	MOV	(R2)+,(R2)+
	CLR	(R2)+
	MOV	-4(R2),@R2
	BIC	#TCBIT$!TTSPC$!TTLC$,@R3
5$:	SPL	7
	CLR	T.OWNR(R3)
6$:
.IF NE	MAT$S
	CLR	T.AST(R3)
.ENDC
	SPL	0
	BIC	#RPALL$!WPALL$,T.CNF2(R3)
	BIC	#DTACH$,T.STAT(R3)
	RTS	PC
.SBTTL	.MTPRNT - Print message EMT
M$PRNT::MOV	R0,R2
1$:	MOVB	(R2)+,R0
	BEQ	2$
	CMPB	R0,#200
	BEQ	3$
	MOV	R2,-(SP)
	JSR	R1,MTTPUT
	 .WORD	0
	MOV	(SP)+,R2
	BR	1$
2$:	ADDR	PRCRLF,R2
	BR	1$
3$:	RTS	PC
PRCRLF:	.ASCII	<CR><LF><200>
	.EVEN
.SBTTL	.MTSTAT - Return multi-terminal system status EMT
M$STAT::MOV	#DLTCB-$RMON,(R0)+
.IF NE	BF
	MOV	I.CNSL(R5),@R0
.IFF
	MOV	I.CNSL,@R0
.ENDC
	SUB	@#SYSPTR,(R0)+
	MOV	#TCBMAX,@R0
	DEC	(R0)+
	MOV	#TCBSZ,(R0)+
	RTS	PC
.SBTTL	MTTIN - Single character input
.ENABL	LSB
MTTIN::
.IF NE	BF
	MOV	R5,R1
	ADD	#I.TTLC,R1
.ENDC
	JSR	PC,TTRSEC
.IF NE	BF
	BMI	1$
.ENDC
	MOV	R3,R1
	ADD	#T.TTLC,R1
1$:	MOV	R1,R2
	BIT	#TTSPC$,@R3
	BEQ	2$
	ADD	#T.ICTR-T.TTLC,R2
2$:	TST	@R2
	BNE	3$
	BIT	#TCBIT$,@R3
	SEC
	BNE	7$
.IF NE	BF
	JSR	R4,$SYSWT
	 .WORD	TTIWT$
	CMP	@R2,#1
	JSR	PC,@(SP)+
.IFF
	BR	2$
.ENDC
3$:	ADD	#T.IGET-T.TTLC,R1
	.BR	MTTGET
.SBTTL	MTTGET - Get a character from the ring buffer
MTTGET::
	JSR	PC,GETPSW
	SPL	5
	INC	@R1
	CMP	(R1)+,@R1
	BNE	4$
	SUB	#TTYIN,-2(R1)
4$:	MOVB	@-(R1),R0
	DEC	-(R1)
.IF NE	MAT$S
	BNE	5$
	JSR	PC,CLRIN
5$:
.ENDC
	JSR	PC,EOLTST
	BNE	6$
	DEC	T.TTLC-T.ICTR(R1)
MTTHOK::
6$:	JSR	PC,PUTPSW
	CMPB	#CTRLC,R0
	CLC
7$:	RTS	PC
.DSABL	LSB
.SBTTL	TTRSET - Reset terminal status bits
.ENABL	LSB
TTRSEC:	TST	T.STAT(R3)
	BPL	2$
TTRSET::MOV	@#JSW,R0
	BIC	(PC)+,R0
	 .WORD	^C<TTSPC$!TTLC$!TCBIT$>
	MOV	@R3,-(SP)
	BIC	(PC)+,@SP
	 .WORD	<TTSPC$!TTLC$!TCBIT$>
	BIS	R0,@SP
	MOV	(SP)+,@R3
.IF NE	BF
	MOV	@R3,I.TERM(R5)
.ENDC
	CMP	R3,BKCNSL
	BNE	1$
	MOV	@#TTFILL,T.TFIL(R3)
1$:	TST	T.STAT(R3)
2$:	RTS	PC
.DSABL	LSB
.SBTTL	MTTPUT - Single character output
MTTPUT::MOV	R5,-(SP)
1$:	MOV	@SP,R5
.IF NE	BF
	MOV	R5,R2
	ADD	#I.ICTR,R2
	TST	T.STAT(R3)
	BMI	2$
.ENDC
	MOV	R3,R2
	ADD	#T.ICTR,R2
2$:	MOV	T.CSR(R3),R4
.IF NE	SYT$K
3$:	TSTB	T.XFLG(R3)
	BNE	4$
.ENDC
	MOV	R2,-(SP)
	JSR	PC,TTOPT2
	MOV	(SP)+,R2
	BCC	6$
4$:	BIT	@R1,@R3
	BNE	6$
.IF NE	BF
.IF NE	SYT$K
	TSTB	T.XFLG(R3)
	BEQ	5$
	ENSYS	3$
	JMP	QWAIT
5$:
.ENDC
	JSR	R4,$SYSWT
	 .WORD	TTOWT$
	CMPB	#TTYOUT-1,T.OCTR-T.ICTR(R2)
	JSR	PC,@(SP)+
.ENDC
	BR	1$
6$:	BIT	(R1)+,R0
	MOV	(SP)+,R5
	RTS	R1
.SBTTL	MTRSET	- Stop and detach all terminals attached to a job
MTRSET::JSR	R3,SAVE30
	MOV	R4,-(SP)
	MOV	R5,-(SP)
.IF NE	BF
	MOV	CNTXT,R5
.ENDC
	ADDR	TCBLST,R4
	MOV	#TCBMAX,R0
1$:	MOV	(R4)+,R3
	BEQ	2$
.IF EQ	BF
	TST	T.OWNR(R3)
	BEQ	2$
.IFF
	CMP	R5,T.OWNR(R3)
	BNE	2$
.ENDC
	JSR	PC,M$DTCH
2$:	DEC	R0
	BGT	1$
	MOV	(SP)+,R5
	MOV	(SP)+,R4
	RTS	PC
.IF NE	BF
.SBTTL	TTOEWT - Wait for terminal output buffer to empty
TTOEWT::JSR	R4,$SYSWT
	 .WORD	TTOEM$
	MOVB	I.OCTR(R5),-(SP)
	TST	T.STAT(R3)
	BMI	1$
	MOVB	T.OCTR(R3),@SP
1$:	NEGB	(SP)+
	JSR	PC,@(SP)+
	RTS	PC
.ENDC
.END
                                                                                                                                                                                                                                                                                                                                                                                                                   