.MCALL	.MODULE
.MODULE	TS,VERSION=13,COMMENT=<TS11 Magtape Handler>,AUDIT=NO

;                        COPYRIGHT (c) 1986 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;                         ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
.SBTTL	Notes on handler
	.SBTTL	Definitions
	SYSPTR	= 54
	QCOMP	= 270
	SPUSR	= 272
	CONFG2	= 370
		BUS$	= 100
	.MCALL	.MTPS,	.MFPS,	.DRDEF
	.MCALL	.SYNCH,	.BR,	.ADDR
	.DRDEF	MS,35,<SPECL$!SPFUN$!HNDLR$>,0,772522,224
	MS$DB	== MS$CSR-2
.IIF NE MMG$T	.DRPTR	FETCH=*NO*
.IIF EQ MMG$T	.DRPTR
	.DREST	CLASS=DVC.MT
	.DRSPF	<-1>
	.DRSPF	<-2>
	.DRSPF	<-3>
	.DRSPF	<-4>
	.DRSPF	<-5>
	.DRSPF	<-6>
	.DRSPF	<-7>
	.DRSPF	<-8.>
.IIF EQ MMG$T	.DRSPF	<-9.>
.IIF DF MS$FSM	.DRSPF	<-20.>
	.IIF NDF MS$UN	MS$UN	= 1
	.IIF NDF MS$CS1 MS$CS1	= 772526
	MS$DB1	= MS$CS1-2
	.IIF NDF MS$CS2 MS$CS2	= 772532
	MS$DB2	= MS$CS2-2
	.IIF NDF MS$CS3 MS$CS3	= 772536
	MS$DB3	= MS$CS3-2
	.IIF NDF MS$CS4 MS$CS4	= 772542
	MS$DB4	= MS$CS4-2
	.IIF NDF MS$CS5 MS$CS5	= 772546
	MS$DB5	= MS$CS5-2
	.IIF NDF MS$CS6 MS$CS6	= 772552
	MS$DB6	= MS$CS6-2
	.IIF NDF MS$CS7 MS$CS7	= 772556
	MS$DB7	= MS$CS7-2
	.IIF NDF MS$FSM .FSM = 100000
	.AUDIT	.TS
	.AUDIT	.FSM
	RENAME	= 5
	ENTER	= 4
	LOOKUP	= 3
	DELETE	= 2
	CLOSE	= 1
	REDWRT	= 0
	WRTEOF	= -1
	FWDSPC	= -2
	BKSPC	= -3
	WRTXTD	= -4
	REWIND	= -5
	OFFLINE	= -6
	WRITEPHY= -7
	READF	= -8.
	STR100	= -9.
	FN	= 8.
	ILLARG	= 5
	DEVINUSE= 2
	ERRGAPS	= -101.
	FL$RE1	= 000001
	FL$RE2	= 000002
	FL$RC0	= 000004
	FL$RC1	= 000010
	FL$CIP	= 000100
	NOQUAL	= 0
	DRIVEGONE = 1
	POSERR	= 2
	MEMERR	= 3
	WRITELOK= 4
	RECERR	= 5
	SMLREC	= 6
	EOFCODE	= 1
	EOTCODE	= 2
	EOFEOT	= 3
	BOTCODE	= 4
	TB$JOB	= 0
	TB$TSR	= 2
	TB$CBR	= 4
	TB$FLG	= 6
	JOBMK	= 174000
	UNITMK	= 003400
	DUMMY	= 0
	MSDSIZE	= 0
	V.TRP4	= 4
	LKCS	= 177546
	SR	= 177570
	NRETRY	= 8.
	.IF DF MS$FSM
	.GLOBL	FSMDIS,FSMABT,FSMDON,FSMERR,RESTOR,CODE,DVTBL,FSMSIZ
	.GLOBL	MTCQ
	 .IF NE MMG$T
	.GLOBL	OLDBA,XBUMP,EXTADR,JOBNM,SYNBLK,TEMP,SINK,ERBSAV
	 .ENDC
	.ENDC
	.MACRO  TBLINT	V,C
		.WORD	-1
		.WORD	V
		.WORD	C
		.WORD	0
	.ENDM	TBLINT
	.MACRO	REIS
		MOV	R3,-(SP)
		MOV	R2,-(SP)
		MOV	$CBUF,R3
		MOV	PC,R2
		ADD	#$SCB+2-.,R2
	.ENDM	REIS
	.MACRO	RESET
		MOV	$CBUF,R3
		.MFPS
		.MTPS	#340
		CMP	(R5)+,(R5)+
		MOV	R3,@(R5)+
		BIS	#FL$CIP,@R5
		.MTPS
		MOV	(SP)+,R2
		MOV	(SP)+,R3
		MOV	SPTMP,SP
		RETURN
	.ENDM	RESET
	.SBTTL	BIT DEFINITIONS
	TSXSR0	= 6
	TSXSR1	= 10
	TSXSR2	= 12
	TSXSR3	= 14
	TSSRC	= 16
	MG.ACK	= 100000
	MG.FMT	= 000340
	MG.COD	= 000037
	MC.END	= 020
	MC.FAL	= 021
	MC.ERR	= 022
	MC.ATN	= 023
	X0.TMK	= 100000
	X0.RLS	= 040000
	X0.LET	= 020000
	X0.RLL	= 010000
	X0.WLE	= 004000
	X0.NEF	= 002000
	X0.ILC	= 001000
	X0.ILA	= 000400
	X0.MOT	= 000200
	X0.ONL	= 000100
	X0.IE	= 000040
	X0.VCK	= 000020
	X0.PED	= 000010
	X0.WLK	= 000004
	X0.BOT	= 000002
	X0.EOT	= 000001
	X1.DLT	= 100000
	X1.COR	= 020000
	X1.CRS	= 010000
	X1.TIG	= 004000
	X1.DBF	= 002000
	X1.NZO	= 002000
	X1.SCK	= 001000
	X1.IPR	= 000200
	X1.SYN	= 000100
	X1.DRP	= 000100
	X1.IPO	= 000040
	X1.ITM	= 000040
	X1.IED	= 000020
	X1.LC0	= 000020
	X1.POS	= 000010
	X1.NZN	= 000010
	X1.POL	= 000004
	X1.LRC	= 000004
	X1.UNC	= 000002
	X1.CRC	= 000002
	X1.MTE	= 000001
	X1.VPE	= 000001
	X2.OPM	= 100000
	X2.SIP	= 040000
	X2.BPE	= 020000
	X2.CAF	= 010000
	X2.WCF	= 002000
	X2.XSK	= 001000
	X2.DTK	= 000777
	X3.FEC	= 177400
	X3.LMX	= 000200
	X3.OPI	= 000100
	X3.REV	= 000040
	X3.CRF	= 000020
	X3.DCK	= 000010
	X3.NOI	= 000004
	X3.SGP	= 000002
	X3.RIB	= 000001
	SR.SC	= 100000
	SR.UPE	= 040000
	SR.SPE	= 020000
	SR.RMR	= 010000
	SR.NXM	= 004000
	SR.NBA	= 002000
	SR.A17	= 001000
	SR.A16	= 000400
	SR.SSR	= 000200
	SR.OFL	= 000100
	SR.FC1	= 000040
	SR.FC0	= 000020
	SR.TC2	= 000010
	SR.TC1	= 000004
	SR.TC0	= 000002
	SR.TCN	= <SR.TC2!SR.TC1!SR.TC0>
	SR.BAD	= <SR.UPE!SR.SPE!SR.NXM!SR.NBA>
	CM.ACK	= 100000
	CM.CVC	= 040000
	CM.OPP	= 020000
	CM.SWB	= 010000
	CM.MOD	= 007400
	CM.RTY	= 001000
	CM.RVS	= 000400
	CM.IE	= 000200
	CM.COD	= 000037
	CM.LOW	= 000003
	CM.NML	= <CM.IE!CM.ACK>
	CC.RDN	= <0001!CM.NML>
	CC.RDP	= <0401!CM.NML>
	CC.RRP	= <1001!CM.NML>
	CC.RRN	= <1401!CM.NML>
	CC.WRC	= <0004!CM.ACK!CM.CVC>
	CC.WRD	= <0005!CM.NML>
	CC.WDR	= <1005!CM.NML>
	CC.WSM	= <0006!CM.NML>
	CC.SRF	= <0010!CM.NML>
	CC.SRR	= <0410!CM.NML!CM.CVC>
	CC.STF	= <1010!CM.NML>
	CC.STR	= <1410!CM.NML>
	CC.RWD	= <2010!CM.NML!CM.CVC>
	CC.WTM	= <0011!CM.NML>
	CC.ERS	= <0411!CM.NML>
	CC.WTR	= <1011!CM.NML>
	CC.BRL	= <0012!CM.ACK>
	CC.UNL	= <0412!CM.NML!CM.CVC>
	CC.DRI	= <0013!CM.NML>
	CC.GST	= <0017!CM.ACK>
	CC.MST	= <CC.GST!CM.CVC>
	CH.ESS	= 000200
	CH.EAI	= 000040
	CH.ERI	= 000020
	CH.HSP	= 000040
	CB$CHR	= 0
	.SBTTL	Installation code
	.IF EQ MS$UN-1
	.DRINS	MS
	.IFF
	 .IF EQ MS$UN-2
	.DRINS	MS,<MS$CS1>
	 .IFF
	  .IF EQ MS$UN-3
	.DRINS	MS,<MS$CS1,MS$CS2>
	  .IFF
	   .IF EQ MS$UN-4
	.DRINS	MS,<MS$CS1,MS$CS2,MS$CS3>
	   .IFF
	    .IF EQ MS$UN-5
	.DRINS	MS,<MS$CS1,MS$CS2,MS$CS3,MS$CS4>
	    .IFF
	     .IF EQ MS$UN-6
	.DRINS	MS,<MS$CS1,MS$CS2,MS$CS3,MS$CS4,MS$CS5>
	     .IFF
	      .IF EQ MS$UN-7
	.DRINS	MS,<MS$CS1,MS$CS2,MS$CS3,MS$CS4,MS$CS5,MS$CS6>
	      .IFF
	.DRINS	MS,<MS$CS1,MS$CS2,MS$CS3,MS$CS4,MS$CS5,MS$CS6,MS$CS7>
	      .ENDC
	     .ENDC
	    .ENDC
	   .ENDC
	  .ENDC
	 .ENDC
	.ENDC
	.IIF GT .-400 .ERROR
	.SBTTL	Set code
	.DRSET	CSR,	<0*2+1>,	O.CSR,	OCT
	.DRSET	VECTOR,	<0*2+1>,	O.VEC,	OCT
	.IF GE MS$UN-2
	.DRSET	CSR2,	<1*2+1>,	O.CSR,	OCT
	.DRSET	VEC2,	<1*2+1>,	O.VEC,	OCT
	 .IF GE MS$UN-3
	.DRSET	CSR3,	<2*2+1>,	O.CSR,	OCT
	.DRSET	VEC3,	<2*2+1>,	O.VEC,	OCT
	  .IF GE MS$UN-4
	.DRSET	CSR4,	<3*2+1>,	O.CSR,	OCT
	.DRSET	VEC4,	<3*2+1>,	O.VEC,	OCT
	   .IF GE MS$UN-5
	.DRSET	CSR5,	<4*2+1>,	O.CSR,	OCT
	.DRSET	VEC5,	<4*2+1>,	O.VEC,	OCT
	    .IF GE MS$UN-6
	.DRSET	CSR6,	<5*2+1>,	O.CSR,	OCT
	.DRSET	VEC6,	<5*2+1>,	O.VEC,	OCT
	     .IF GE MS$UN-7
	.DRSET	CSR7,	<6*2+1>,	O.CSR,	OCT
	.DRSET	VEC7,	<6*2+1>,	O.VEC,	OCT
	      .IF GE MS$UN-8.
	.DRSET	CSR8,	<7*2+1>,	O.CSR,	OCT
	.DRSET	VEC8,	<7*2+1>,	O.VEC,	OCT
	      .ENDC
	     .ENDC
	    .ENDC
	   .ENDC
	  .ENDC
	 .ENDC
	.ENDC
	.DRSET	RETRY,	NOP,	O.RTRY,	NUM
O.CSR:	CMP	R0,#160002
	BLO	O.BAD
	DEC	R3
	BNE	10$
	MOV	R0,INSCSR
10$:	MOV	R3,R1
	NEG	R1
	.ADDR	#DISCSR,R1,ADD
	MOV	R0,(R1)
	ASL	R3
	ASL	R3
	.ADDR	#$ADRTB,R3,ADD
	MOV	R0,TB$TSR(R3)
	SUB	#2,R0
	MOV	R0,TB$CBR(R3)
O.GOOD:	TST	(PC)+
O.BAD:	SEC
	RETURN
O.VEC:	CMP	R0,#500
	BHIS	O.BAD
	.IF GT MS$UN-1
	DEC	R3
	MOV	R3,-(SP)
	ASL	R3
	ADD	(SP)+,R3
	.ADDR	#MS$VTB,R3,ADD
	.IFF
	.ADDR	#MSSTRT,R3
	.ENDC
	MOV	R0,(R3)
	BR	O.GOOD
O.RTRY:	MOV	R0,RTRYCT
	BR	O.GOOD
	.IIF GE .-1000	.ERROR
	.SBTTL	Handler Entry Point
	.DRBEG	MS
	JMP	MS
	.SBTTL	Controller Impure Data Area
$ADRTB:	TBLINT	MS$CSR,MS$DB
	.IF GE MS$UN-2
	TBLINT	MS$CS1,MS$DB1
	 .IF GE MS$UN-3
	TBLINT	MS$CS2,MS$DB2
	  .IF GE MS$UN-4
	TBLINT	MS$CS3,MS$DB3
	   .IF GE MS$UN-5
	TBLINT	MS$CS4,MS$DB4
	    .IF GE MS$UN-6
	TBLINT	MS$CS5,MS$DB5
	     .IF GE MS$UN-7
	TBLINT	MS$CS6,MS$DB6
	      .IF GE MS$UN-8.
	TBLINT	MS$CS7,MS$DB7
	      .ENDC
	     .ENDC
	    .ENDC
	   .ENDC
	  .ENDC
	 .ENDC
	.ENDC
	.WORD	-2
	.IF GT MS$UN-1
	.DRVTB	MS,MS$VEC,MSINT
	.DRVTB	,MS$VC1,MSINT
	.IIF GT MS$UN-2	.DRVTB	,MS$VC2,MSINT
	.IIF GT MS$UN-3	.DRVTB	,MS$VC3,MSINT
	.IIF GT MS$UN-4	.DRVTB	,MS$VC4,MSINT
	.IIF GT MS$UN-5	.DRVTB	,MS$VC5,MSINT
	.IIF GT MS$UN-6	.DRVTB	,MS$VC6,MSINT
	.IIF GT MS$UN-7	.DRVTB	,MS$VC7,MSINT
	.ENDC
RTRYCT:	.WORD	NRETRY
	.SBTTL	I/O Initialization
MS::
	.IF NE MMG$T
	MOV	MSCQE,R5
	MOV	Q$BUFF(R5),(PC)+
SPFBUF:	 .WORD	0
	MOV	Q$PAR(R5),(PC)+
SPFPAR:	 .WORD	0
	CMP	(R5)+,(R5)+
	CALL	@$MPPTR
	MOV	(SP)+,OLDBA
	BIT	#1700,@SP
	BEQ	10$
	MOV	@#SYSPTR,R5
	BIT	#<BUS$>,CONFG2(R5)
	BNE	10$
	TST	(SP)+
	MOV	MSCQE,R5
	BIS	#HDERR$,@-(R5)
	CALLR	MSDONE
10$:	ASR	@SP
	ASR	@SP
	ASR	@SP
	ASR	@SP
	MOV	(SP)+,EXTADR
	.ENDC
	.IF NDF MS$FSM
	MOV	MSCQE,R3
	.IFF
	CALLR	FSMDIS
$MT::
	.ENDC
	MOV	SP,SPTMP
	TST	(R3)+
	MOV	@R3,R1
	MOVB	R1,R4
	BIC	#^C<UNITMK>,R1
	SWAB	R1
	ASL	R1
	ASL	R1
	ASL	R1
	MOV	PC,R5
	ADD	#$ADRTB-.,R5
	ADD	R1,R5
	MOV	@R3,R1
	BIC	#^C<JOBMK>,R1
	SWAB	R1
      .REPT	3
	ASR	R1
      .ENDR
.IF NE	MMG$T
	MOV	R1,JOBNM
.ENDC
	CLR	NFSREAD
	MOV	PC,R0
	ADD	#BF1-.,R0
	BIT	#2,R0
	BEQ	20$
	TST	(R0)+
20$:	MOV	R0,(PC)+
$CBUF:	 .WORD	0
	MOV	PC,R0
	ADD	#BF2-.,R0
	MOV	R0,(PC)+
$MBUF:	 .WORD	0
AJA:	TST	TS05
	BPL	98$
	CLR	TS05
	CMP	#<-1>,16(R0)
	BEQ	98$
	BIS	#<STRTAP>,TS05
98$:	CMP	R1,(PC)+
LASTIM:	 .WORD	-1
	BEQ	99$
	MOV	R1,LASTIM
	BIS	#GETSTA,TS05
	CALL	$SCHR
13$:	TSTB	@TB$TSR(R5)
	BPL	13$
	MOV	#<-1>,16(R0)
	MOV	R1,-(SP)
	MOV	$CBUF,R1
	MOV	#<CC.GST>,@R1
	MOV	R1,@TB$CBR(R5)
14$:	TSTB	@TB$TSR(R5)
	BPL	14$
	MOV	(SP)+,R1
	BR	AJA
99$:	CMP	#CLOSE,R4
	BEQ	35$
5$:	CMP	#LOOKUP,R4
	BNE	40$
	.IF NE MMG$T
	 .IF NDF MS$FSM
	MOV	MSCQE,R4
	CALL	@$GTBYT
	TSTB	(SP)+
	BNE	25$
	CALL	@$GTBYT
	TSTB	(SP)+
	BNE	25$
	 .IFF
	TST	@2(R3)
	BNE	55$
	 .ENDC
	.ENDC
	CMP	@R5,#-1
	BEQ	15$
	MOV	#DEVINUSE,R0
10$:	MOV	@#SYSPTR,R1
	MOV	R0,SPUSR(R1)
.IF DF	MS$FSM
	CALL	RESTOR
	CALLR	$DONE
.IFF
	BR	60$
.ENDC
15$:	CLR	4(R3)
	MOV	R1,@R5
	TST	FBDT
	BNE	20$
	INC	FBDT
	BIC	#<STRON>,TS05
	CALL	$SCHR
20$:
.IF DF	MS$FSM
	BR	60$
.IFF
	MOV	-2(R3),R1
	BEQ	30$
	BGT	25$
	INC	R1
	BEQ	60$
25$:	MOV	#-1,@R5
	MOV	#ILLARG,R0
	BR	10$
30$:	MOV	#REWIND,R4
	BR	40$
	.ENDC
35$:	MOV	#<-1>,@R5
	BIT	#<STRON>,TS05
	BEQ	60$
	BIC	#<STRON>,TS05
	CALL	$SCHR
	BR	60$
40$:	MOV	PC,R0
	ADD	#LASTCOM-.,R0
	MOVB	#ERRGAPS,TAPELEN
	CMP	#<STR100>,R4
	BNE	43$
	BIT	#<STRTAP>,TS05
	BEQ	60$
.IF EQ	MMG$T
	CALL	STREAM
.ENDC
	BR	60$
43$:	CMP	#READF,R4
	BLOS	65$
	TST	R4
	BNE	55$
	MOV	R3,R1
	CLR	-2(R1)
	CMP	(R1)+,(R1)+
	MOV	#READF,R4
	TST	@R1
	BPL	45$
	NEG	@R1
	INC	R4
	BR	50$
45$:	COM	NFSREAD
50$:
	.IF DF MS$FSM
	MOV	R4,CODE
	.ENDC
	BR	65$
55$:	TST	-(R3)
	BIS	#HDERR$,@-(R3)
60$:
.IF DF	MS$FSM
	CALL	RESTOR
.ENDC
	CALLR	MSDONE
65$:	ADD	#FUNTAB-TABLE,R4
	MOV	R4,(R0)+
.IF NE	MMG$T
	MOV	4(R3),R1
	TST	(R0)+
.IFF
	TST	(R3)+
	MOV	(R3)+,(R0)+
	MOV	@R3,R1
.ENDC
	MOV	$CBUF,R2
	CALL	DISPAT
TABLE:	.BYTE	REDEF-TABLE
	.BYTE	WRIT-TABLE
	.BYTE	OFFLN-TABLE
	.BYTE	RWND-TABLE
	.BYTE	WRITX-TABLE
	.BYTE	BCKSPC-TABLE
	.BYTE	FRSPC-TABLE
	.BYTE	WRITM-TABLE
FUNTAB:	.WORD	CC.RDN
	.WORD	CC.WRD
	.WORD	CC.UNL
	.WORD	CC.RWD
	.WORD	CC.WRD
	.WORD	CC.SRR
	.WORD	CC.SRF
	.WORD	CC.WTM
WRITX:
WRIT:
REDEF:
	.IF NE MMG$T
	MOV	OLDBA,(R2)+
	MOV	EXTADR,(R2)+
	.IFF
	MOV	-2(R3),(R2)+
	CLR	(R2)+
	.ENDC
	ASL	R1
BCKSPC:
FRSPC:	MOV	R1,(R2)+
OFFLN:
RWND:
WRITM:
GSTAT:	MOV	$CBUF,R2
	CALL	$DUP
5$:	TSTB	@TB$TSR(R5)
	BPL	5$
	.MFPS
	.MTPS	#340
	CMP	(R5)+,(R5)+
	BIS	#FL$CIP,2(R5)
	MOV	R2,@(R5)
	.MTPS
	.IF DF MS$FSM
	CALL	RESTOR
	.ENDC
	RETURN
	.SBTTL	DISPATCHER ROUTINE
DISPAT:	ASL	R4
	ADD	@SP,R4
	MOV	FUNTAB-TABLE(R4),(R2)+
	MOV	-4(R0),R4
	ADD	@SP,R4
	MOVB	@R4,R4
	ADD	(SP)+,R4
	CALLR	@R4
	.SBTTL	ABORT ENTRY POINT
	.ENABL	LSB
MSABRT: MOVB	#<-1>,MSFL
	MOV	R3,-(SP)
	MOV	MSCQE,R3
	BEQ	5$
	MOV	Q$FUNC(R3),R3
	BIC	#^C<JOBMK>,R3
	SWAB	R3
      .REPT	3
	ASR	R3
      .ENDR
	CMP	R3,R4
	BNE	5$
	CLRB	MSFL
.IF DF	MS$FSM
	MOV	DVTBL,R5
	BEQ	5$
	MOV	#<-1>,@R5
	MOV	(R5)+,@R5
.ENDC
5$:	MOV	PC,R5
	ADD	#<$ADRTB-.-10>,R5
10$:	CMP	(R5)+,(R5)+
	CMP	(R5)+,(R5)+
	CMP	R4,@R5
	BNE	15$
	CLR	@TB$TSR(R5)
	MOV	#<-1>,@R5
	CLR	TB$FLG(R5)
15$:	CMP	#<-2>,@R5
	BNE	10$
	MOV	(SP)+,R3
	BIT	#<STRON>,TS05
	BEQ	20$
	BIC	#<STRON>,TS05
	CALL	$SCHR
20$:	CALLR	$DONE
	.DSABL	LSB
	.SBTTL	INTERRUPT ENTRY POINT
	.DRAST	MS,5,MSABRT
	MOV	SVTB,R5
	MOV	SP,SPTMP
	MOV	@TB$TSR(R5),R4
	BIC	#^C<SR.TCN>,R4
	TST	(R4)+
	ADD	PC,R4
	ADD	@R4,PC
ERJTBL:
	.IRPC	X,<01234567>
		.WORD	TCL'X'ER-ERJTBL
	.ENDM
	.SBTTL	TERMINATION CLASS ROUTINES
TCL0ER:BIC	FL$CIP,TB$FLG(R5)
	BIT	#FL$RC1,TB$FLG(R5)
	BEQ	5$
	CALL	REC1CH
5$:	MOV	$MBUF,-(SP)
	ADD	#TSXSR0,@SP
	BIT	#X0.EOT,@(SP)+
	BNE	TCL2ER
10$:	CALLR	MSDONE
TCL1ER:	BIT	#FL$CIP,TB$FLG(R5)
	BNE	5$
	RETURN
5$:	BIC	#FL$CIP,TB$FLG(R5)
.IF DF	MS$FSM
	MOV	MSCQ,R3
	CALLR	$MT
.IFF
	.FORK	TSFBLK
	CALLR	MS
.ENDC
TCL2ER:	BIC	#FL$CIP,TB$FLG(R5)
	BIT	#FL$RC1,TB$FLG(R5)
	BEQ	5$
	CALL	REC1CH
5$:	CLR	R4
	MOV	$MBUF,-(SP)
	ADD	#TSXSR0,@SP
	BIT	#X0.BOT,@(SP)
	BEQ	7$
	MOV	#BOTCODE,R4
	BR	27$
7$:	TST	@(SP)
	BPL	15$
	CMP	#FN+WRTEOF,LASTCOM
	BNE	10$
	BIS	#10000,R4
	BR	15$
10$:	INC	R4
15$:	BIT	#X0.EOT,@(SP)
	BEQ	25$
	TST	NFSREAD
	BEQ	20$
	BIS	#10000,R4
	BR	25$
20$:	CMPB	(R4)+,(R4)+
25$:	TST	R4
	BEQ	45$
	BIC	#10000,R4
	TST	R4
	BEQ	70$
27$:	CMP	#FN+BKSPC,LASTCOM
	BEQ	30$
	CMP	#FN+FWDSPC,LASTCOM
	BNE	35$
30$:	SUB	#2,@SP
.IF NE	MMG$T
	MOV	@(SP),ERRBL2
.IFF
 .IF DF	MS$FSM
	MOV	@MSCQ,R5
 .IFF
	MOV	@MSCQE,R5
 .ENDC
	BEQ	35$
	MOV	@(SP),2(R5)
.ENDC
35$:	MOV	#EOF$,@SP
40$:	CALLR	EXCEP
45$:	BIT	#X0.RLL,@(SP)
	BEQ	50$
	MOV	#RECERR,R4
	BR	65$
50$:	BIT	#X0.RLS,@(SP)
	BEQ	75$
55$:	SUB	#2,@SP
	MOV	@(SP),-(SP)
	ASR	@SP
.IF NE	MMG$T
	MOV	@SP,ERRBL2
.IFF
 .IF DF MS$FSM
	MOV	@MSCQ,R4
 .IFF
	MOV	@MSCQE,R4
 .ENDC
	BEQ	60$
	MOV	@SP,2(R4)
.ENDC
60$:	TST	(SP)+
	MOV	#SMLREC,R4
65$:	CALLR	ABORT
70$:	CALLR	MSDONE
75$:	BR	FATAL
TCL3ER:	BIC	#FL$CIP,TB$FLG(R5)
	BIT	#SR.NBA,@TB$TSR(R5)
	BEQ	5$
	.FORK	TSFBLK
	CALL	$SCHR
.IF DF	MS$FSM
	MOV	MSCQ,R3
	CALLR	$MT
.IFF
	CALLR	MS
.ENDC
5$:	BIT	#SR.OFL,@TB$TSR(R5)
	BEQ	15$
	MOV	#<DRIVEGONE>,R4
10$:	MOV	#<-1>,@R5
	CALLR	ABORT
15$:	MOV	$MBUF,-(SP)
	ADD	#TSXSR0,@SP
	MOV	@(SP),R4
	BIT	#X0.BOT,R4
	BEQ	100$
	CMP	$SCB,#CC.SRR
	BNE	100$
	MOV	(SP)+,R4
	MOV	$SCB+2,-(R4)
	CALLR	TCL2ER
100$:	MOV	R4,@SP
	CLR	R4
	BIT	#<X0.VCK!X0.ILC!X0.ILA>,(SP)+
	BNE	FATAL
	BIT	#X0.WLE,-(SP)
	BEQ	20$
	MOV	#WRITELOK,R4
	BR	10$
20$:	BR	FATAL
TCL4ER:	BIC	#FL$CIP,TB$FLG(R5)
	BIT	#FL$RC0,TB$FLG(R5)
	BNE	FATAL
	CMP	#FN+WRITEPHY,LASTCOM
	BEQ	WREC
	CMP	#FN+WRTXTD,LASTCOM
	BEQ	WREC
	CMP	#FN+WRTEOF,LASTCOM
	BEQ	WREC
	BIT	#FL$RC1,TB$FLG(R5)
	BEQ	5$
	CMP	#FN+READF,LASTCOM
	BEQ	RREC
	BR	FATAL
5$:	CMP	#FN+READF,LASTCOM
	BNE	FATAL
	BIS	#FL$RC1,TB$FLG(R5)
	MOVB	#5.,BACK1
	MOVB	RTRYCT,BACK5
	BR	RREC
TCL5ER:	BIC	#FL$CIP,TB$FLG(R5)
	BIT	#FL$RC1,TB$FLG(R5)
	BNE	FATAL
	BIT	#FL$RC0,TB$FLG(R5)
	BNE	5$
	BIS	#FL$RC0,TB$FLG(R5)
	MOV	RTRYCT,RCNT
5$:	DEC	RCNT
	BEQ	FATAL
	.FORK	TSFBLK
.IF DF	MS$FSM
	MOV	MSCQ,R3
	CALLR	$MT
.IFF
	CALLR	MS
.ENDC
TCL7ER:	CLR	@TB$TSR(R5)
	.BR	FATAL
FATAL:
TCL6ER:	CALLR	NQUAL
	.SBTTL	RECOVERY ROUTINE - WRITE
	.ENABL	LSB
WREC:	BIT	#FL$RC1,TB$FLG(R5)
	BNE	5$
	MOVB	#ERRGAPS,TAPELEN
	BIS	#FL$RC1,TB$FLG(R5)
5$:	INCB	TAPELEN
	BEQ	FATAL
	REIS
	CMP	#FN+WRTEOF,LASTCOM
	BNE	10$
	MOV	#CC.WTR,(R3)+
	BR	15$
10$:	MOV	#CC.WDR,(R3)+
15$:	MOV	(R2)+,(R3)+
	MOV	(R2)+,(R3)+
	MOV	(R2)+,(R3)+
	RESET
	.DSABL	LSB
	.SBTTL	RECOVERY CODE - READ
	.ENABL	LSB
RREC:	TSTB	BACK1
	BEQ	10$
	DECB	BACK1
5$:	REIS
	MOV	#CC.RRP,(R3)+
	MOV	(R2)+,(R3)+
	MOV	(R2)+,(R3)+
	MOV	(R2)+,(R3)+
	BR	25$
10$:	TSTB	BACK5
	BEQ	FATAL
	BIT	#FL$RE2,TB$FLG(R5)
	BEQ	15$
	MOVB	#4.,BACK1
	DECB	BACK5
	BIC	#<FL$RE1!FL$RE2>,TB$FLG(R5)
	MOV	#5,BCNT
	BR	5$
15$:	BIT	#FL$RE1,TB$FLG(R5)
	BNE	30$
	BIS	#FL$RE1,TB$FLG(R5)
	REIS
	MOV	#CC.SRR,(R3)+
20$:	MOV	BCNT,(R3)+
25$:	RESET
30$:	REIS
	MOV	#CC.SRF,(R3)+
	BIS	#FL$RE2,TB$FLG(R5)
	BR	20$
	.DSABL	LSB
	.ENABL	LSB
REC1CH:	TST	LASTCOM
	BNE	5$
	BIT	#<FL$RE1!FL$RE2>,TB$FLG(R5)
	BEQ	5$
	BR	RREC
5$:	CLR	TB$FLG(R5)
	RETURN
	.DSABL	LSB
	.SBTTL	$SCHR	- Set characteristics
	.ENABL	LSB
$SCHR:	MOV	R1,-(SP)
	MOV	R5,-(SP)
	MOV	$MBUF,R5
	MOV	R5,-(SP)
	MOV	$CBUF,R1
	MOV	@SP,(R5)+
	MOV	(SP)+,2(R1)
	CLR	(R5)+
	CLR	4(R1)
	TST	TS05
	BPL	5$
	MOV	#16.,(R5)+
	MOV	#16.,6(R1)
	BR	10$
5$:	MOV	#14.,(R5)+
	MOV	#14.,6(R1)
10$:	CLR	(R5)+
	CLR	@R5
	BIT	#<STRON>,TS05
	BEQ	15$
	MOV	#16.,6(R1)
	MOV	#16.,-4(R5)
	BIS	#CH.HSP,(R5)+
15$:	MOV	(SP)+,R5
	MOV	#CC.WRC,@R1
	MOV	R1,@TB$CBR(R5)
	MOV	(SP)+,R1
	RETURN
	.DSABL	LSB
	.ENABL	LSB
STREAM:	MOV	R1,-(SP)
.IF	NE MMG$T
	MOV	SPFBUF,2(R3)
	MOV	SPFPAR,10(R3)
	MOV	R4,-(SP)
	MOV	MSCQE,R4
	CALL	@$GTBYT
	MOVB	(SP)+,R1
	MOV	(SP)+,R4
	TSTB	R1
.IFF
	MOV	2(R3),R1
	TSTB	@R1
.ENDC
	BNE	5$
	BIC	#<STRON>,TS05
	BR	10$
5$:	BIT	#<STRON>,TS05
	BNE	15$
	BIS	#<STRON>,TS05
10$:	CALL 	$SCHR
15$:	MOV	(SP)+,R1
	RETURN
	.DSABL	LSB
$DUP:	MOV	R5,-(SP)
	MOV	R4,-(SP)
	MOV	$CBUF,R5
	MOV	PC,R4
	ADD	#$SCB-.,R4
	MOV	(R5)+,(R4)+
	MOV	(R5)+,(R4)+
	MOV	(R5)+,(R4)+
	MOV	@R5,@R4
	MOV	(SP)+,R4
	MOV	(SP)+,R5
	MOV	R5,SVTB
	RETURN
	.SBTTL	COMPLETION ROUTINES
	.ENABL	LSB
NQUAL:	CLR	R4
ABORT:	MOV	#<HDERR$>,-(SP)
	BIT	#<STRON>,TS05
	BEQ	EXCEP
	BIC	#<STRON>,TS05
	CALL	$SCHR
EXCEP:
.IF	DF MS$FSM
	MOV	(SP)+,R5
	MOV	SPTMP,SP
	CALLR	FSMERR
.IFF
	MOV	MSCQE,R5
	BIS	(SP)+,@Q$CSW(R5)
	TST	@R5
	BEQ	MSDONE
 .IF	NE MMG$T
	COM	SINK
	MOV	@R5,ERBSAV
	MOV	R4,TEMP
	MOV	Q$FUNC(R5),R5
	BIC	#^C<JOBMK>,R5
	SWAB	R5
      .REPT	3
	ASR	R5
      .ENDR
	MOV	R5,JOBNM
 .IFF
	MOV	R4,@(R5)+
 .ENDC
       .BR	MSDONE
.ENDC
	.DSABL	LSB
MSDONE:	MOV	SPTMP,SP
.IF DF	MS$FSM
	CALLR	FSMDON
.ENDC
$DONE::
.IF	NE MMG$T
	TSTB	MSFL
	BNE	$RTS
	MOV	PC,R4
	ADD	#MSCQE-.,R4
	MOV	@#SYSPTR,R5
	TST	SINK
	BNE	10$
	CALLR	@QCOMP(R5)
10$:	CLR	SINK
	CALL	@QCOMP(R5)
	MOV	PC,R4
	ADD	#SYNBLK-.,R4
	.SYNCH
	 BR	BADSYN
	MOV	ERBSAV,R1
	BIS	#30000,@#177776
	MOV	R0,-(SP)
	MTPI	(R1)+
	MOV	ERRBL2,-(SP)
	MTPI	(R1)+
BADSYN:	RETURN
.IFF
	TSTB	MSFL
	BNE	$RTS
	.DRFIN	MS
.ENDC
$RTS:	CLRB	MSFL
	RETURN
	.SBTTL	XBUMP SUBROUTINE
.IF	NE MMG$T
XBUMP::	MOV	MSCQE,-(SP)
	ADD	#Q$PAR,@SP
	ADD	#10,@(SP)+
	ADD	#512.,OLDBA
	ADC	EXTADR
	RETURN
.ENDC
	.SBTTL MAGTAPE DATA AREA
MSFL:	.BYTE	0
TAPELEN:.BYTE	ERRGAPS
BACK5:	.BYTE	0
BACK1:	.BYTE	0
LASTCOM:.WORD	DUMMY
OLDBA:	.WORD	DUMMY
	.IF NE MMG$T
EXTADR:	.WORD	DUMMY
	.ENDC
NFSREAD:.WORD	DUMMY
SVTB:	.WORD	0
SPTMP:	.WORD	0
RCNT:	.WORD	0
BCNT:	.WORD	5
FBDT:	.WORD	0
TSFBLK:	.WORD	0,0,0,0
BF1:	.BLKW	6
BF2:	.BLKW	8.
$SCB:	.BLKW	4
TS05::	.WORD	0
	STRTAP	= 1
	STRON	= 2
	GETSTA	= 100000
.IF NE	MMG$T
SYNBLK:	.WORD	DUMMY
JOBNM:	.WORD	DUMMY
	.WORD	DUMMY,DUMMY
TEMP:	.WORD	DUMMY
	.WORD	-1,0
SINK:	.WORD	DUMMY
ERBSAV:	.WORD	DUMMY
ERRBL2:	.WORD	DUMMY
.ENDC
	.IF NDF MS$FSM
	.DREND	MS
	.IFF
MTCQ:	.WORD	DUMMY
	DRIVEN	== MS$UN
DVINFO::
	 .REPT	DRIVEN
		.WORD	-1
		.WORD	-1
		.WORD	-1
		.BYTE	DUMMY
		.BYTE	0
		.WORD	DUMMY,DUMMY,DUMMY
	 .ENDR
	MSCQ==MTCQ
	.GLOBL	$FKPTR,	$INPTR
	 .IF NE MMG$T
	.GLOBL	$RLPTR,	$MPPTR,	$GTBYT,	$PTBYT,	$PTWRD
	 .ENDC
	 .IF NE ERL$G
	.GLOBL	$ELPTR
	 .ENDC
	 .IF NE TIM$IT
	.GLOBL	$TIMIT
	 .ENDC
	.ENDC
	SIZE	= .
	SIZED	= <SIZE-MSSTRT>/2
	MTDONE	== MSDONE
	MTCQE	== MSCQE
	MT	== MS
	MTLQE	== MSLQE
	MTSTRT	== MSSTRT
	.END
                                                                                                                                                                                                                                                                                                                                                               