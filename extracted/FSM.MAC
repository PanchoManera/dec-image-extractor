.MCALL	.MODULE
.MODULE	FSM,VERSION=04,COMMENT=<File Structure Module>,IDENT=NO

;                     	COPYRIGHT (c) 1986 BY
;             DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;                         ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
.ENABL	LC
.SBTTL FSM INFORMATION
.SBTTL DEFINITIONS
.IIF NDF TIM$IT, TIM$IT	=	 0
.IIF NDF MMG$T,	MMG$T	=	 0
.IIF NDF ERL$G,	ERL$G	=	 0
	.MCALL	.DREND
	.MCALL	.QELDF
	.QELDF
	READ	=	0
	WRITE	=	0
	CLOSE	=	1
	DELETE	=	2
	LOOKUP	=	3
	ENTER	=	4
	RENAME	=	5
	SEEK	=	-20.
	WRTEOF	=	-1
	FWDSPC	=	-2
	BKSPC	=	-3
	WRTXTD	=	-4
	REWIND	=	-5
	OFFLINE	=	-6
	WRITEPHY=	-7
	READPHY	=	-8.
	STR100	=	-9.
	D.CFSN	=	0
	D.CBLK	=	2
	D.HBLK	=	4
	D.FTYPE	=	6
	D.EOT	=	7
	D.FNAM	=	8.
	MONLOW	=	54
	BLKEY	=	244
	USRLOC	=	352
	SPUSR	=	272
	DATOFF	=	262
	DUMMY	=	0
	UNIT	=	7
	FILFND	=	3
	ILLARG	=	5
	ILLFUN	=	2
	CSWHERR	=	1
	CSWEOF	=	20000
	FNF	=	1
	FSNERR	=	4
	DEVFUL	=	1
	EOFCODE	=	1
	EOTCODE	=	2
	EOFEOT	=	3
	BOTCODE	=	4
	POSERR	=	2
	MEMERR	=	3
	RECERR	=	5
	SMLREC	=	6
.SBTTL FSMDIS ENTRY POINT
	.GLOBL	DRIVEN,DVINFO,MTCQE,MTCQ,$DONE,$MT
	.IF	NE	MMG$T
	.GLOBL	OLDBA,XBUMP,EXTADR,SYNBLK,JOBNM,TEMP,SINK,ERBSAV
	.ENDC
.PSECT	MTDVR
	.ENABL	LSB
FSMDIS::MOV	SP,SPSAV
	MOV	MTCQE,R3
	MOVB	Q$JNUM(R3),R1
	BIC	#^C<UNIT>,R1
	CMP	#DRIVEN,#8.
	BEQ	117$
	CMP	#DRIVEN,R1
	BLOS	2$
117$:	MOV	R1,-(SP)
	ASL	R1
	ADD	@SP,R1
	ASL	R1
	ADD	(SP)+,R1
	ASL	R1
	ADD	PC,R1
	ADD	#DVINFO-.,R1
	MOV	R1,DVTBL
	CLR	SEEKYN
	MOVB	Q$FUNC(R3),R0
	BGT	7$
	BLT	1$
	CMP	#1,D.FTYPE(R1)
	BNE	10$
	BR	3$
1$:	CMP	#STR100,R0
	BLOS	3$
	CMP	#SEEK,R0
	BEQ	9$
2$:	BIS	#CSWHERR,@-(R3)
	BR	6$
3$:	MOV	R0,CODE
	CMP	#WRITEPHY,R0
	BNE	4$
	CMP	#-1,D.CBLK(R1)
	BEQ	4$
	INC	D.CBLK(R1)
	BR	5$
4$:	MOV	#-1,D.CBLK(R1)
5$:	MOV	#-1,@R1
	JSR	PC,ADJSP
6$:	JMP	DONE
7$:	CMP	#RENAME,R0
	BGT	10$
8$:	MOV	#ILLFUN,R0
	JMP	SPERR
9$:	MOV	#-1,SEEKYN
	CLR	CODE
	MOVB	#CLOSE,Q$FUNC(R3)
	JSR	PC,ADJSP
	MOV	MTCQE,R3
	MOV	@R3,SEEKER
	.IF	NE	MMG$T
	MOV	R3,R4
	CMP	(R3)+,(R3)+
	MOV	@R3,R1
	ADD	#6,@R3
	MOV	$GTBYT,R5
	JSR	PC,@R5
	MOVB	(SP)+,R0
	INC	@R3
	JSR	PC,@R5
	MOV	(SP)+,@R4
	JSR	PC,@R5
	MOVB	(SP)+,1(R4)
	MOV	R1,@R3
	MOV	R4,R3
	.IFF
	MOV	Q$BUFF(R3),R4
	ADD	#6,R4
	MOV	(R4)+,R0
	MOV	@R4,@R3
	.ENDC
	CMP	#ENTER,R0
	BEQ	10$
	CMP	#LOOKUP,R0
	BNE	2$
10$:	MOV	PC,R1
	ADD	#LABLIO-.,R1
	MOV	R1,LABINP
	MOV	R0,CODE
	MOV	PC,R4
	ADD	#NQE-.,R4
	MOV	R4,NQ
	MOV	Q$CSW(R3),-2(R4)
	CLR	(R4)+
	TST	(R3)+
	MOV	(R3)+,(R4)+
	CMP	#DELETE,R0
	BHI	11$
	MOVB	#LOOKUP,R0
	MOV	NQ,R1
	MOV	#-1,@R1
	ADD	#Q$WCNT,R1
	.IF	NE	MMG$T
	MOV	R1,NQ.BUF
	.ENDC
	CLR	R2
	JSR	PC,EXEC
11$:	CMP	CODE,#CLOSE
	BLE	13$
	.IF	NE	MMG$T
	MOV	MTCQE,R4
	MOV	DVTBL,R5
	ADD	#D.FNAM,R5
	MOV	#6,R3
12$:	JSR	PC,@$GTBYT
	MOVB	(SP)+,(R5)+
	DEC	R3
	BNE	12$
	MOV	R5,R4
	.IFF
	MOV	MTCQE,R5
	MOV	Q$BUFF(R5),R5
	MOV	DVTBL,R4
	ADD	#D.FNAM,R4
	MOV	(R5)+,(R4)+
	MOV	(R5)+,(R4)+
	MOV	(R5)+,(R4)+
	.ENDC
	JSR	PC,R50ASC
13$:	MOV	CODE,R5
	ASL	R5
	ADD	PC,R5
	ADD	#TABL1-.,R5
	ADD	@R5,PC
TABL1:	.WORD	<RW-TABL1>
	.WORD	<CLO-TABL1>
	.WORD	DUMMY
	.WORD	<LOOK-TABL1>
	.WORD	<ENT-TABL1>
	.EVEN
	.DSABL	LSB
	.SBTTL LOOKUP ROUTINE
LOOK:	MOV	DVTBL,R5
	MOV	MTCQE,R3
	CLR	Q$WCNT(R3)
	MOV	(R3),R3
	BGT	3$
	TST	D.FNAM(R5)
	BNE	1$
	MOVB	#1,D.FTYPE(R5)
	TST	R3
	BNE	5$
	MOV	#-1,(R5)+
	MOV	#-1,@R5
	JSR	PC,REW
	BR	5$
1$:	TST	R3
	BEQ	3$
	INC	R3
	BNE	ENT1
2$:	COM	R3
3$:	JSR	PC,GETFIL
	MOV	@MTCQE,R3
	BLE	6$
	MOV	DVTBL,R5
	TST	D.FNAM(R5)
	BEQ	6$
	TST	R0
	BNE	7$
	MOV	LABINP,R1
	CMP	(R1)+,(R1)+
	JSR	PC,MATCH
	BCS	7$
4$:	JSR	PC,FORWTM
	MOV	DVTBL,R5
	CLR	D.CBLK(R5)
	CLRB	D.FTYPE(R5)
5$:	JMP	DONE
6$:	TST	R0
	BEQ	4$
7$:	MOV	#FNF,-(SP)
	BR	SPER
.SBTTL ENTER A FILE ROUTINE
	.ENABL	LSB
ENT:	MOV	@MTCQE,R3
	BPL	3$
	INC	R3
	BNE	1$
	MOV	#77777,R3
	BR	3$
1$:	INC	R3
	BEQ	3$
2$:
ENT1:	MOV	#ILLARG,-(SP)
	BR	SPER1
3$:	MOV	DVTBL,R5
	TST	D.FNAM(R5)
	BEQ	2$
	JSR	PC,GETFIL
4$:	MOV	DVTBL,R1
	TSTB	D.EOT(R1)
	BEQ	6$
5$:	MOV	#DEVFUL,-(SP)
SPER:	JSR	PC,BACKU1
SPER1:	MOV	#CLOSE,R0
	JSR	PC,EXEC
	MOV	(SP)+,R0
	JMP	SPERR
6$:	MOV	@MTCQE,R2
	BGT	16$
	BEQ	7$
	INC	R2
	BEQ	8$
	TST	R0
	BNE	8$
	BR	11$
7$:	TST	R0
	BNE	8$
	MOV	#FILFND,-(SP)
	DEC	@DVTBL
	BR	SPER
8$:	TST	@R1
	BNE	10$
9$:	JSR	PC,REW
	JSR	PC,READLA
10$:	INC	@DVTBL
11$:	JSR	PC,BACKU1
	MOV	PC,R1
	ADD	#LABEL-.,R1
	MOV	R1,-(SP)
	MOV	#"HD,(R1)+
	MOV	#"R1,@R1
	MOV	@DVTBL,R2
	BPL	12$
	MOV	#1,R2
12$:	MOV	@SP,R4
	ADD	#FSNASC-LABEL,R4;POINT TO FSN
	MOV	#2,R0
	JSR	PC,BINDEC
	CLR	R2
	ADD	#BLKASC-<FSNASC+4>,R4
	CLR	R0
	JSR	PC,BINDEC
	JSR	PC,DATE
	MOV	(SP)+,R1
	JSR	PC,WRITLA
	TST	R5
	BEQ	14$
13$:	JSR	PC,BACKU1
	JSR	PC,WRTTM
	JSR	PC,WRTTM
	JSR	PC,BACKTM
	BR	5$
14$:	JSR	PC,WRTTM
	TST	R5
	BEQ	15$
	JSR	PC,BACKTM
	BR	13$
15$:	MOV	DVTBL,R5
	TST	(R5)+
	CLR	(R5)+
	MOV	#-1,(R5)+
	MOVB	#-1,@R5
	JMP	DONE
16$:	TST	R0
	BEQ	11$
	TST	@DVTBL
	BNE	17$
	CMP	#1,@MTCQE
	BEQ	9$
17$:	MOV	#FSNERR,-(SP)
	BR	SPER
	.DSABL	LSB
.SBTTL CLOSE ROUTINE
CLO:	MOV	DVTBL,R4
	CMPB	#1,D.FTYPE(R4)
	BEQ	4$
	MOV	(R4)+,-(SP)
	BPL	1$
	MOV	#1,@SP
1$:	MOV	@R4,-(SP)
	CMP	#-1,@SP
	BNE	2$
	CLR	@SP
2$:	TSTB	D.FTYPE-2(R4)
	BEQ	3$
	ADD	#D.FNAM+4,R4
	JSR	PC,R50ASC
	MOV	#"F1,-(R5)
	MOV	#"EO,-(R5)
	MOV	R5,R4
	ADD	#BLKASC-LABEL,R4;POINT TO BLOCK NUMBER
	MOV	(SP)+,R2
	CLR	R0
	JSR	PC,BINDEC
	SUB	#<BLKASC+5>-FSNASC,R4
	MOV	(SP)+,R2
	MOV	#2,R0
	JSR	PC,BINDEC
	JSR	PC,DATE
	JSR	PC,WRTTM
	MOV	PC,R1
	ADD	#LABEL-.,R1
	JSR	PC,WRITLA
	JSR	PC,WRTTM
	JSR	PC,WRTTM
	JSR	PC,WRTTM
	JSR	PC,BACKTM
	JSR	PC,BACKTM
	BR	4$
3$:	CMP	(SP)+,(SP)+
	JSR	PC,FORWTM
	JSR	PC,FORWTM
4$:	MOV	#CLOSE,R0
	JSR	PC,EXEC
	JMP	DONE
.SBTTL READX/WRITX ROUTINE
RW:	MOV	MTCQE,R4
	MOV	Q$WCNT(R4),-(SP);SAVE WORD COUNT ON STACK
	MOV	DVTBL,R5
	CMP	#-1,D.CBLK(R5)
	BEQ	10$
	MOV	D.HBLK(R5),R0
	TSTB	D.FTYPE(R5)
	BMI	1$
	TST	@SP
	BPL	6$
	JMP	HARDER
1$:	MOV	@SP,R1
	BMI	4$
	TSTB	R1
	BEQ	2$
	ADD	#256.,R1
2$:	CLRB	R1
	SWAB	R1
	ADD	@R4,R1
	DEC	R1
	CMP	R0,R1
	BHIS	6$
3$:	JMP	EOFERR
4$:	INC	R0
5$:	CMP	R0,@R4
	BLO	3$
6$:	MOV	@R4,R2
	SUB	D.CBLK(R5),R2
	BEQ	10$
	BMI	7$
	MOV	#FWDSPC,R0
	BR	8$
7$:	NEG	R2
	MOV	#BKSPC,R0
8$:	JSR	PC,EXEC
	BEQ	9$
	JMP	ERRR
9$:	MOV	MTCQE,R4
	MOV	DVTBL,R5
	MOV	@R4,D.CBLK(R5)
10$:
	.IF	EQ	MMG$T
	MOV	Q$BUFF(R4),XAREA2
	.IFTF
11$:
	.IFT
	MOV	XAREA2,R1
	.ENDC
	MOV	@SP,R2
	BMI	12$
	MOV	#READPHY,R0
	CMP	#256.,R2
	BGE	14$
	BR	13$
12$:	MOV	#WRITEPHY,R0
13$:	MOV	#256.,R2
14$:	MOV	DVTBL,R3
	CMP	#-1,D.CBLK(R3)
	BEQ	15$
	TST	@SP
	BPL	30$
	MOV	D.CBLK(R3),D.HBLK(R3)
30$:	INC	D.CBLK(R3)
15$:	JSR	PC,EXEC
	BEQ	26$
	MOV	DVTBL,R3
	TSTB	R5
	BNE	20$
	BIT	#EOFCODE,R4
	BNE	16$
	TST	@SP
	BMI	25$
16$:	CMP	#-1,D.CBLK(R3)
	BEQ	17$
	DEC	D.CBLK(R3)
17$:	MOV	MTCQE,R4
	CMP	Q$WCNT(R4),@SP
	BEQ	19$
	.IF	NE	MMG$T
18$:	CLR	-(SP)
	JSR	PC,@$PTWRD
	.IFF
	MOV	XAREA2,R1
18$:	CLR	(R1)+
	.ENDC
	DEC	@SP
	BNE	18$
	BR	24$
19$:	MOV	R5,@SP
	BR	24$
20$:	CMP	#POSERR,R4
	BNE	21$
	MOV	#-1,(R3)+
	MOV	#-1,@R3
21$:	TST	@SP
	BMI	22$
	CMP	#RECERR,R4
	BEQ	26$
	BR	25$
22$:	CMP	#POSERR,R4
	BEQ	23$
	TST	R4
	BEQ	23$
	CMP	#MEMERR,R4
	BNE	25$
23$:	MOV	R5,-(SP)
	JSR	PC,WRTTM
	JSR	PC,WRTTM
	JSR	PC,WRTTM
24$:	JSR	PC,BACKU1
	MOV	(SP)+,R5
25$:	JMP	ERRR
26$:
	.IF	NE	MMG$T
	JSR	PC,XBUMP
	.IFF
	ADD	#512.,XAREA2
	.ENDC
	MOV	@SP,R2
	BPL	27$
	NEG	R2
27$:	SUB	#256.,R2
	BLE	29$
	TST	@SP
	BPL	28$
	NEG	R2
28$:	MOV	R2,@SP
	BR	11$
29$:	TST	(SP)+
	JMP	DONE
.SBTTL EXECUTION AND STACK ADJUSTER ROUTINES
EXEC:	MOV	NQ,R3
	MOVB	R0,NQ.FUNC
	.IF	EQ	MMG$T
	MOV	R1,NQ.BUF
	.ENDC
	MOV	R2,NQ.WC
ADJSP:	MOV	R3,MTCQ
	MOV	PC,R5
	ADD	#AREA-.,R5
	MOV	R5,AREMIN
1$:	CMP	SP,SPSAV
	BEQ	2$
	MOV	(SP)+,(R5)+
	BR	1$
2$:	MOV	R5,AREMAX
	JMP	$MT
.SBTTL ABORT ENTRY POINT
FSMABT::
.SBTTL FSMDON AND FSMERR ENTRY POINTS(FROM HARDWARE HANDLER)
	.ENABL	LSB
FSMDON::CLR	R5
FSMERR::MOV	SP,SPSAV
	TST	CODE
	BPL	2$
	TST	R5
	BEQ	1$
	MOV	R5,-(SP)
	MOV	MTCQE,R5
	BIS	(SP)+,@Q$CSW(R5)
	TST	@R5
	BEQ	1$
	.IF	NE	MMG$T
	COM	SINK
	MOV	@MTCQE,ERBSAV
	MOV	R4,TEMP
	.IFF
	MOV	R4,@(R5)+
	.ENDC
1$:	JMP	$DONE
2$:	MOV	R0,(PC)+
R0SAV:	.WORD	DUMMY
	MOV	R1,(PC)+
R1SAV:	.WORD	DUMMY
	MOV	R2,(PC)+
R2SAV:	.WORD	DUMMY
	MOV	R3,(PC)+
R3SAV:	.WORD	DUMMY
	BIT	#CSWEOF,R5
	BEQ	3$
	BIT	#EOTCODE,R4
	BEQ	3$
	MOV	DVTBL,R3
	MOVB	#-1,D.EOT(R3)
3$:	MOV	AREMAX,R3
4$:	CMP	R3,AREMIN
	BEQ	5$
	MOV	-(R3),-(SP)
	BR	4$
5$:	TST	R5
	RTS	PC
	.DSABL	LSB
.SBTTL FIND A FILE ON MAGTAPE
	.ENABL	LSB
GETFIL:
	.IF	NE	MMG$T
	CLR	EXTADR
	.ENDC
	MOV	R3,-(SP)
	BNE	2$
1$:	JSR	PC,REW
2$:	TST	@DVTBL
	BPL	3$
	JSR	PC,FNDPOS
3$:	MOV	@SP,R0
	BLE	4$
	SUB	@DVTBL,R0
	BLT	BAKFSN
4$:	JSR	PC,READLA
	BNE	5$
	TST	(SP)+
	MOV	#1,R0
	RTS	PC
5$:	BMI	DIRER
6$:	TST	@SP
	BLE	8$
	CMP	@SP,@DVTBL
	BNE	9$
7$:	TST	(SP)+
	CLR	R0
	RTS	PC
8$:	JSR	PC,MATCH
	BCC	7$
9$:	JSR	PC,FORWTM
	JSR	PC,FORWTM
	JSR	PC,READLA
	BEQ	DIRER
	BPL	6$
	JSR	PC,FORWTM
	BR	4$
BAKFSN:	CMP	#-2,R0
	BGE	1$
	CMP	#4,@DVTBL
	BGE	1$
10$:	JSR	PC,BACKTM
	JSR	PC,BACKTM
	JSR	PC,FORWTM
	JSR	PC,READLA
	BGE	DIRER
	JSR	PC,BACKTM
	JSR	PC,BACKTM
	JSR	PC,BACKTM
11$:	JSR	PC,FORWTM
	JSR	PC,READLA
	BEQ	DIRER
	BMI	11$
	CMP	@SP,@DVTBL
	BNE	10$
	BR	7$
DIRER:	JMP	DIRERR
	.DSABL	LSB
FNDPOS:	MOV	DVTBL,R3
	CLRB	D.EOT(R3)
1$:	JSR	PC,BACKTM
2$:	CMP	#BOTCODE,R4
	BNE	3$
5$:	CLR	@DVTBL
	RTS	PC
3$:	JSR	PC,BACKTM
	CMP	#BOTCODE,R4
	BEQ	5$
	JSR	PC,FORWTM
	JSR	PC,GETLA
	BIT	#EOFCODE,R4
	BEQ	4$
	JSR	PC,BACKTM
	BR	1$
4$:	MOV	LABINP,R1
	CMP	#"EO,(R1)+
	BNE	1$
	CMP	#"F1,(R1)+
	BNE	1$
	ADD	#FSNASC-XAREA,R1
	MOV	#4,R0
	JSR	PC,DECBIN
	MOV	R0,@DVTBL
	JSR	PC,FORWTM
	JSR	PC,READLA
	JSR	PC,BACKU1
	RTS	PC
.SBTTL MATCH A FILENAME SUBROUTINE
MATCH:	CLR	R2
	CLR	R3
	MOV	R1,R4
	ADD	#SYSCOD-XAREA,R4
	MOV	PC,R0
	ADD	#XAREA2-.,R0
1$:	CMPB	#'.,@R1
	BNE	4$
	INC	R3
2$:	CMP	#6,R2
	BEQ	5$
	BLT	3$
	MOVB	#' ,(R0)+
	INC	R2
	BR	2$
3$:	CMPB	-(R2),-(R0)
	BR	2$
4$:	CMP	#6,R2
	BNE	5$
	CMP	#"RT,@R4
	BNE	5$
	CMP	#"11,2(R4)
	BNE	5$
	MOVB	#'.,(R0)+
	CMPB	(R2)+,(R3)+
5$:	MOVB	(R1)+,(R0)+
	INC	R2
	CMP	#9.,R2
	BGE	1$
	TST	R3
	BNE	MATCH1
	MOV	#"AT,-(R0)
	MOV	#".D,-(R0)
	CMP	(R0)+,(R0)+
MATCH1:	MOV	PC,R1
	ADD	#XAREA-.+10.,R1
1$:	CMPB	-(R0),-(R1)
	BEQ	2$
	SEC
	RTS	PC
2$:	DEC	R2
	BGT	1$
	CLC
	RTS	PC
.SBTTL CONVERT A FILENAME FROM RAD50 TO ASCII
R50ASC:	MOV	PC,R5
	ADD	#XAREA-.+10.,R5
	MOV	#1,R2
GET50:	MOV	-(R4),R0
	MOV	#3,-(SP)
CNVLUP:	CLR	R1
	MOV	#20,-(SP)
DIVLUP:	ASL	R0
	ROL	R1
	CMP	R1,#50
	BLO	NOFIT
	SUB	#50,R1
	INC	R0
NOFIT:	DEC	@SP
	BNE	DIVLUP
	TST	(SP)+
	TST	R1
	BEQ	PSPACE
	CMP	R1,#32
	BLE	LETTER
	SUB	#36,R1
	BCC	DIGIT
PSPACE:	MOV	#-40,R1
LETTER:	ADD	#20,R1
DIGIT:	ADD	#60,R1
	MOVB	R1,-(R5)
	DEC	@SP
	BGT	CNVLUP
	TST	(SP)+
	DEC	R2
	BNE	1$
	MOVB	#'.,-(R5)
1$:	CMP	#-2,R2
	BNE	GET50
	RTS	PC
.SBTTL DECIMAL TO BINARY SUBROUTINE
DECBIN:	CLR	-(SP)
1$:	MOV	@SP,R2
	ASL	@SP
	ASL	@SP
	ADD	R2,@SP
	ASL	@SP
	MOVB	(R1)+,R2
	SUB	#'0,R2
	ADD	R2,@SP
	DEC	R0
	BGT	1$
	MOV	(SP)+,R0
	RTS	PC
.SBTTL BINARY TO DECIMAL SUBROUTINE
BINDEC:	ADD	PC,R0
	ADD	#DECTBL-.,R0
1$:	MOV	#'0-1,R1
2$:	INC	R1
	SUB	@R0,R2
	BPL	2$
	ADD	(R0)+,R2
	MOVB	R1,(R4)+
	TST	@R0
	BNE	1$
	RTS	PC
DECTBL:	.WORD	10000.,1000.,100.,10.,1,0
.SBTTL CONVERT AN RT-11 DATE TO YYDDD FORMAT
DATE:	MOV	@#MONLOW,R2
	MOV	DATOFF(R2),R2
	MOV	R2,R1
	ASR	R1
	BIC	#140777,R1
	SWAB	R1
	MOV	PC,R4
	ADD	#MONTAB-.,R4
	ADD	R1,R4
	MOV	@R4,R3
	CMP	R1,#4
	BLE	1$
	BIT	#3,R2
	BNE	1$
	INC	R3
1$:	MOV	R2,R1
	ASR	R1
	ASR	R1
	ASR	R1
	ASR	R1
	ASR	R1
	BIC	#177740,R1
	ADD	R1,R3
	BIC	#177740,R2
	BEQ	2$
	ADD	#72.,R2
2$:	MOV	PC,R4
	ADD	#DAREA-.,R4
	MOV	#6,R0
	JSR	PC,BINDEC
	MOV	R3,R2
	MOV	#4,R0
	JMP	BINDEC
	JAN	=	0
	FEB	=	JAN + 31.
	MAR	=	FEB + 28.
	APR	=	MAR + 31.
	MAY	=	APR + 30.
	JUN	=	MAY + 31.
	JUL	=	JUN + 30.
	AUG	=	JUL + 31.
	SEP	=	AUG + 31.
	OCT	=	SEP + 30.
	NOV	=	OCT + 31.
	NOEL	=	NOV + 30.
MONTAB:	.WORD	0
	.WORD	JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,NOEL
.SBTTL TAPE MANIPULATING SUBROUTINES
	.ENABL	LSB
BACKTM:	MOV	#BKSPC,R0
	BR	1$
FORWTM:	MOV	#FWDSPC,R0
	JSR	PC,1$
	BIT	#EOFCODE,R4
	BNE	6$
	BR	FORWTM
1$:	MOV	#-1,R2
2$:	MOV	PC,R1
	ADD	#EXTRA-.-2,R1
	MOV	R1,@NQ
EX:
3$:	JSR	PC,EXEC
	BEQ	6$
	BIT	#CSWHERR,R5
	BEQ	6$
4$:	JMP	ERRR
GETLA:	MOV	#READPHY,R0
	.IF	NE	MMG$T
	MOV	LABINP,OLDBA
	CLR	EXTADR
	.IFF
	MOV	LABINP,R1
	.ENDC
	MOV	#40.,R2
	MOV	PC,R4
	ADD	#EXTRA-.-2,R4
	MOV	R4,@NQ
	JSR	PC,EXEC
	BEQ	5$
	BIT	#CSWHERR,R5
	BEQ	6$
	CMP	#RECERR,R4
	BHI	4$
5$:	CLR	R4
6$:	RTS	PC
BACKU1:	MOV	#BKSPC,R0
	MOV	#1,R2
	BR	2$
REW:	MOV	DVTBL,R3
	CLRB	D.EOT(R3)
	CLR	@DVTBL
	MOV	#REWIND,R0
	BR	3$
	.DSABL	LSB
.SBTTL READ/WRITE LABELS SUBROUTINES
READLA:	CLR	XAREA2
1$:	JSR	PC,GETLA
	BIT	#EOFCODE,R4
	BEQ	2$
	CLR	R2
	RTS	PC
2$:	MOV	LABINP,R1
	CMP	#"HD,(R1)+
	BNE	3$
	CMP	#"R1,@R1
	BNE	7$
	MOV	#1,-(SP)
	BR	5$
3$:	CMP	#"EO,-2(R1)
	BNE	6$
	CMP	#"F1,@R1
	BEQ	4$
	CMP	#"V1,@R1
	BNE	7$
4$:	MOV	#-1,-(SP)
5$:	ADD	#FSNASC-LABEL-2,R1
	MOV	#4,R0
	JSR	PC,DECBIN
	MOV	R0,@DVTBL
	SUB	#<FSNASC+4>-XAREA,R1
	MOV	(SP)+,R2
	RTS	PC
6$:	CMP	#"VO,-(R1)
	BNE	7$
	CMP	#"L1,2(R1)
	BNE	7$
	COM	XAREA2
7$:	TST	XAREA2
	BMI	1$
8$:	JMP	DIRERR
WRITLA:
	.IF	NE	MMG$T
	MOV	R1,OLDBA
	CLR	EXTADR
	.ENDC
	MOV	#WRITEPHY,R0
	MOV	#256.,R2
	BR	EX
WRTTM:	MOV	#WRTEOF,R0
	BR	EX
.SBTTL ERROR EXITS
	.ENABL	LSB
SPERR:	TST	SEEKYN
	BEQ	2$
1$:
	.IF	NE	MMG$T
	JSR	PC,SYNCH
	.IFF
	MOV	R0,@SEEKER
	.ENDC
	MOV	DVTBL,R5
	MOVB	#1,D.FTYPE(R5)
	BR	3$
2$:	MOV	@#MONLOW,R1
	MOV	R0,SPUSR(R1)
	BR	5$
DIRERR:	TST	SEEKYN
	BEQ	3$
	CLR	R0
	BR	1$
HARDER:
3$:	MOV	#CSWHERR,R5
	BR	4$
EOFERR:	MOV	#CSWEOF,R5
	BR	4$
ERRR:	TST	SEEKYN
	BEQ	4$
	CLR	R0
	BR	1$
4$:	MOV	MTCQE,R3
	BIS	R5,@-(R3)
5$:	MOV	SPSAV,SP
DONE:	JSR	PC,RESTOR
	JMP	$DONE
RESTOR::MOV	R0SAV,R0
	MOV	R1SAV,R1
	MOV	R2SAV,R2
	MOV	R3SAV,R3
	RTS	PC
	.DSABL	LSB
	.IF	NE	MMG$T
.SBTTL SUBROUTINE SYNCH
SYNCH:	MOV	R0,TEMP
	MOV	MTCQE,R5
	MOVB	Q$JNUM(R5),R5
	ASR	R5
	ASR	R5
	ASR	R5
	MOV	R5,JOBNM
	COM	SINK
	MOV	SEEKER,ERBSAV
	RTS	PC
	.ENDC
.SBTTL VARIABLES
SPSAV:	.WORD	DUMMY
AREMIN:	.WORD	DUMMY
AREMAX:	.WORD	DUMMY
CODE::	.WORD	DUMMY
LABINP:	.WORD	DUMMY
NQ:	.WORD	DUMMY
DVTBL::	.WORD	DUMMY
SEEKYN:	.WORD	DUMMY
SEEKER:	.WORD	DUMMY
.SBTTL TABLES, ETC.
SPACE	=	40
LABEL:	.ASCII	/HDR1/
XAREA:	.REPT	9.
	.BYTE	DUMMY
	.ENDR
	.REPT	8.
	.BYTE	SPACE
	.ENDR
	.ASCII	/RT11A /
	.ASCII	/0001/
FSNASC:	.BYTE	DUMMY,DUMMY,DUMMY,DUMMY
	.ASCII	/0001/
	.ASCII	/00/
	.BYTE	SPACE
DAREA:	.REPT	5
	.BYTE	DUMMY
	.ENDR
	.ASCII	/ 00000/
	.ASCII	/ /
	.ASCII	/0/
BLKASC:	.BYTE	DUMMY,DUMMY,DUMMY,DUMMY,DUMMY
SYSCOD:	.ASCII	/DECRT11A /
	.REPT	11.
	.BYTE	SPACE
	.ENDR
	.EVEN
NQ.CSW:	.WORD	DUMMY
NQE:
NQ.BLK:	.WORD	DUMMY
NQ.FUNC:.BYTE	DUMMY
NQ.JNUN:.BYTE	DUMMY
NQ.BUF:	.WORD	DUMMY
NQ.WC:	.WORD	DUMMY
ERRBLK	=	EXTRA-2
EXTRA:	.WORD	DUMMY
LABLIO:	.REPT	80.
	.BYTE	DUMMY
	.ENDR
XAREA2:	.WORD	DUMMY
AREA:	.REPT	8.
	.WORD	DUMMY
	.ENDR
	.DREND	MT
FSMSIZ==MTEND-FSMDIS
MMEND==MTEND
MSEND==MTEND
MFEND==MTEND
MUEND==MTEND
	.END
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        